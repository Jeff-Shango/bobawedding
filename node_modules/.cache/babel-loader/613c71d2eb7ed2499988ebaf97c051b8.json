{"ast":null,"code":"var mongoose = require('mongoose');\nvar schema = mongoose.Schema({\n  comment: 'String',\n  commentator: 'String'\n}, {\n  timestamps: true\n});\nvar Post = mongoose.model('Post', schema);\nmodule.exports = Post;\n\n// const {axios} = require('axios');\n\n// export const getComments = async () => {\n//     return [\n//       {\n//         id: \"1\",\n//         body: \"First comment\",\n//         username: \"Jack\",\n//         userId: \"1\",\n//         parentId: null,\n//         createdAt: \"2021-08-16T23:00:33.010+02:00\",\n//       },\n//       {\n//         id: \"2\",\n//         body: \"Second comment\",\n//         username: \"John\",\n//         userId: \"2\",\n//         parentId: null,\n//         createdAt: \"2021-08-16T23:00:33.010+02:00\",\n//       },\n//       {\n//         id: \"3\",\n//         body: \"First comment first child\",\n//         username: \"John\",\n//         userId: \"2\",\n//         parentId: \"1\",\n//         createdAt: \"2021-08-16T23:00:33.010+02:00\",\n//       },\n//       {\n//         id: \"4\",\n//         body: \"Second comment second child\",\n//         username: \"John\",\n//         userId: \"2\",\n//         parentId: \"2\",\n//         createdAt: \"2021-08-16T23:00:33.010+02:00\",\n//       },\n//     ];\n//   };\n\n//   export const createComment = async (text, parentId = null) => {\n//     return {\n//       id: Math.random().toString(36).substr(2, 9),\n//       body: text,\n//       parentId,\n//       userId: \"1\",\n//       username: \"John\",\n//       createdAt: new Date().toISOString(),\n//     };\n//   };\n\n//   export const updateComment = async (text, commentId) => {\n//   try {\n//     await axios.put(`/comments/${commentId}`, { text }); // Assuming your API endpoint is '/comments/:id'\n//     // Update the comment in the frontend state if necessary\n//   } catch (error) {\n//     console.error('Error updating comment:', error);\n//   }\n// };\n\n// export const deleteComment = async (commentId) => {\n//   try {\n//     await axios.delete(`/comments/${commentId}`); // Assuming your API endpoint is '/comments/:id'\n//     // Remove the comment from the frontend state if necessary\n//   } catch (error) {\n//     console.error('Error deleting comment:', error);\n//   }\n// };","map":{"version":3,"names":["mongoose","require","schema","Schema","comment","commentator","timestamps","Post","model","module","exports"],"sources":["/home/jeff/bobawedding/src/weddingCommentServer/WeddingServer/api.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst schema = mongoose.Schema(\n  {\n    comment: 'String',\n    commentator: 'String'\n  },\n  {timestamps: true}\n)\n\nconst Post = mongoose.model('Post', schema);\nmodule.exports = Post;\n\n\n\n// const {axios} = require('axios');\n\n// export const getComments = async () => {\n//     return [\n//       {\n//         id: \"1\",\n//         body: \"First comment\",\n//         username: \"Jack\",\n//         userId: \"1\",\n//         parentId: null,\n//         createdAt: \"2021-08-16T23:00:33.010+02:00\",\n//       },\n//       {\n//         id: \"2\",\n//         body: \"Second comment\",\n//         username: \"John\",\n//         userId: \"2\",\n//         parentId: null,\n//         createdAt: \"2021-08-16T23:00:33.010+02:00\",\n//       },\n//       {\n//         id: \"3\",\n//         body: \"First comment first child\",\n//         username: \"John\",\n//         userId: \"2\",\n//         parentId: \"1\",\n//         createdAt: \"2021-08-16T23:00:33.010+02:00\",\n//       },\n//       {\n//         id: \"4\",\n//         body: \"Second comment second child\",\n//         username: \"John\",\n//         userId: \"2\",\n//         parentId: \"2\",\n//         createdAt: \"2021-08-16T23:00:33.010+02:00\",\n//       },\n//     ];\n//   };\n  \n//   export const createComment = async (text, parentId = null) => {\n//     return {\n//       id: Math.random().toString(36).substr(2, 9),\n//       body: text,\n//       parentId,\n//       userId: \"1\",\n//       username: \"John\",\n//       createdAt: new Date().toISOString(),\n//     };\n//   };\n  \n//   export const updateComment = async (text, commentId) => {\n//   try {\n//     await axios.put(`/comments/${commentId}`, { text }); // Assuming your API endpoint is '/comments/:id'\n//     // Update the comment in the frontend state if necessary\n//   } catch (error) {\n//     console.error('Error updating comment:', error);\n//   }\n// };\n\n  \n// export const deleteComment = async (commentId) => {\n//   try {\n//     await axios.delete(`/comments/${commentId}`); // Assuming your API endpoint is '/comments/:id'\n//     // Remove the comment from the frontend state if necessary\n//   } catch (error) {\n//     console.error('Error deleting comment:', error);\n//   }\n// };\n"],"mappings":"AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,IAAMC,MAAM,GAAGF,QAAQ,CAACG,MAAM,CAC5B;EACEC,OAAO,EAAE,QAAQ;EACjBC,WAAW,EAAE;AACf,CAAC,EACD;EAACC,UAAU,EAAE;AAAI,CACnB,CAAC;AAED,IAAMC,IAAI,GAAGP,QAAQ,CAACQ,KAAK,CAAC,MAAM,EAAEN,MAAM,CAAC;AAC3CO,MAAM,CAACC,OAAO,GAAGH,IAAI;;AAIrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}