{"ast":null,"code":"var _jsxFileName = \"/home/jeffb/Desktop/bobawedding/src/weddingCommentServer/CommentForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentForm = ({\n  handleSubmit,\n  submitLabel,\n  hasCancelButton = false,\n  handleCancel,\n  imageId,\n  setBackendComments,\n  backendComments\n}) => {\n  _s();\n  const [comment, setComment] = useState('');\n  const [commentator, setCommentator] = useState('');\n  // const isTextareaDisabled = text.length === 0;\n  const isTextareaDisabled = comment.trim() === '' || commentator.trim() === '';\n  const onSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Make sure to replace 'YOUR_API_ENDPOINT' with the actual API endpoint where your MongoDB Atlas is hosted.\n      const response = await axios.post(`http://localhost:3012/comments/${imageId}`, {\n        comment,\n        commentator\n      });\n      if (response.status === 200) {\n        // Assuming the response contains the newly created comment.\n        const newComment = response.data;\n        setBackendComments([...backendComments, newComment]);\n        setComment('');\n        setCommentator('');\n      } else {\n        console.error('Failed to create a comment');\n      }\n    } catch (error) {\n      console.error('Error creating comment:', error);\n    }\n  };\n\n  //   const onSubmit = async (event) => {\n  //     event.preventDefault();\n\n  //     try {\n  //         const response = await axios.post('https://bozierwedding.netlify.app/comments/:imageId', { \n  //           comment, \n  //           commentator,\n  //          });\n\n  //          handleSubmit(response.data);\n  //          setComment('');\n  //          setCommentator('');\n  //     } catch (error) {\n  //         console.error('Error creating comment:', error);\n  //     }\n  // };\n\n  //   const onSubmit = event => {\n  //     event.preventDefault()\n  //     handleSubmit(text);  \n  //     setText(\"\");\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"comment-form-textarea\",\n        placeholder: \"Your Comment\",\n        value: comment,\n        onChange: e => setComment(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Your name\",\n        value: commentator,\n        onChange: e => setCommentator(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"content-form-button\",\n      disabled: isTextareaDisabled,\n      children: submitLabel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), hasCancelButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary comment-form-button comment-form-cancel-button\",\n      onClick: handleCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentForm, \"BbSN7JuXzM4UB9PUsQm767zS/Hk=\");\n_c = CommentForm;\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CommentForm","handleSubmit","submitLabel","hasCancelButton","handleCancel","imageId","setBackendComments","backendComments","_s","comment","setComment","commentator","setCommentator","isTextareaDisabled","trim","onSubmit","event","preventDefault","response","post","status","newComment","data","console","error","children","className","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","onClick","_c","$RefreshReg$"],"sources":["/home/jeffb/Desktop/bobawedding/src/weddingCommentServer/CommentForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios';\n\nconst CommentForm = ({ \n  handleSubmit, \n  submitLabel, \n  hasCancelButton = false, \n  handleCancel,\n  imageId,\n  setBackendComments,\n  backendComments }) => {\n  const [comment, setComment] = useState('');\n  const [commentator, setCommentator] = useState('');\n  // const isTextareaDisabled = text.length === 0;\n  const isTextareaDisabled = comment.trim() === '' || commentator.trim() === '';\n  \n  const onSubmit = async (event) => {\n    event.preventDefault();\n  \n    try {\n      // Make sure to replace 'YOUR_API_ENDPOINT' with the actual API endpoint where your MongoDB Atlas is hosted.\n      const response = await axios.post(`http://localhost:3012/comments/${imageId}`, {\n        comment,\n        commentator,\n      });\n  \n      if (response.status === 200) {\n        // Assuming the response contains the newly created comment.\n        const newComment = response.data;\n        setBackendComments([...backendComments, newComment]);\n        setComment('');\n        setCommentator('');\n      } else {\n        console.error('Failed to create a comment');\n      }\n    } catch (error) {\n      console.error('Error creating comment:', error);\n    }\n  };\n  \n\n//   const onSubmit = async (event) => {\n//     event.preventDefault();\n  \n//     try {\n//         const response = await axios.post('https://bozierwedding.netlify.app/comments/:imageId', { \n//           comment, \n//           commentator,\n//          });\n\n//          handleSubmit(response.data);\n//          setComment('');\n//          setCommentator('');\n//     } catch (error) {\n//         console.error('Error creating comment:', error);\n//     }\n// };\n\n\n  \n//   const onSubmit = event => {\n//     event.preventDefault()\n//     handleSubmit(text);  \n//     setText(\"\");\n// }\n\n\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"form-group\">\n        <textarea \n          className=\"comment-form-textarea\"\n          placeholder='Your Comment' \n          value={comment}\n          onChange={(e) => setComment(e.target.value)}\n        />\n      </div>\n\n      <div className=\"form-group\">\n        <input \n          type=\"text\" \n          className=\"form-control\"\n          placeholder='Your name'\n          value={commentator}\n          onChange={(e) => setCommentator(e.target.value)}\n        />\n      </div>\n      <button \n        className=\"content-form-button\" \n        disabled={isTextareaDisabled}\n      >\n          {submitLabel}\n      </button>\n      {hasCancelButton && (\n        <button \n          type='button'\n          className='btn btn-secondary comment-form-button comment-form-cancel-button'\n          onClick={handleCancel}\n          >\n            Cancel\n          </button>\n      )}\n    </form>\n  )\n}\n\nexport default CommentForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}