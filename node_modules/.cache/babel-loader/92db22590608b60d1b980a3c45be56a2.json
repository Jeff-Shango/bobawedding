{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _slicedToArray = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nvar _asyncToGenerator = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar events_1 = require(\"events\");\nvar is_1 = require(\"@sindresorhus/is\");\nvar PCancelable = require(\"p-cancelable\");\nvar types_1 = require(\"./types\");\nvar parse_body_1 = require(\"./parse-body\");\nvar core_1 = require(\"../core\");\nvar proxy_events_1 = require(\"../core/utils/proxy-events\");\nvar get_buffer_1 = require(\"../core/utils/get-buffer\");\nvar is_response_ok_1 = require(\"../core/utils/is-response-ok\");\nvar proxiedRequestEvents = ['request', 'response', 'redirect', 'uploadProgress', 'downloadProgress'];\nfunction asPromise(normalizedOptions) {\n  var globalRequest;\n  var globalResponse;\n  var emitter = new events_1.EventEmitter();\n  var promise = new PCancelable(function (resolve, reject, onCancel) {\n    var makeRequest = function makeRequest(retryCount) {\n      var request = new core_1.default(undefined, normalizedOptions);\n      request.retryCount = retryCount;\n      request._noPipe = true;\n      onCancel(function () {\n        return request.destroy();\n      });\n      onCancel.shouldReject = false;\n      onCancel(function () {\n        return reject(new types_1.CancelError(request));\n      });\n      globalRequest = request;\n      request.once('response', /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(response) {\n          var _a, rawBody, contentEncoding, isCompressed, options, _iterator, _step, _loop;\n          return _regeneratorRuntime().wrap(function _callee2$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                response.retryCount = retryCount;\n                if (!response.request.aborted) {\n                  _context3.next = 3;\n                  break;\n                }\n                return _context3.abrupt(\"return\");\n              case 3:\n                _context3.prev = 3;\n                _context3.next = 6;\n                return get_buffer_1.default(request);\n              case 6:\n                rawBody = _context3.sent;\n                response.rawBody = rawBody;\n                _context3.next = 13;\n                break;\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](3);\n                return _context3.abrupt(\"return\");\n              case 13:\n                if (!request._isAboutToError) {\n                  _context3.next = 15;\n                  break;\n                }\n                return _context3.abrupt(\"return\");\n              case 15:\n                // Parse body\n                contentEncoding = ((_a = response.headers['content-encoding']) !== null && _a !== void 0 ? _a : '').toLowerCase();\n                isCompressed = ['gzip', 'deflate', 'br'].includes(contentEncoding);\n                options = request.options;\n                if (!(isCompressed && !options.decompress)) {\n                  _context3.next = 22;\n                  break;\n                }\n                response.body = rawBody;\n                _context3.next = 32;\n                break;\n              case 22:\n                _context3.prev = 22;\n                response.body = parse_body_1.default(response, options.responseType, options.parseJson, options.encoding);\n                _context3.next = 32;\n                break;\n              case 26:\n                _context3.prev = 26;\n                _context3.t1 = _context3[\"catch\"](22);\n                // Fallback to `utf8`\n                response.body = rawBody.toString();\n                if (!is_response_ok_1.isResponseOk(response)) {\n                  _context3.next = 32;\n                  break;\n                }\n                request._beforeError(_context3.t1);\n                return _context3.abrupt(\"return\");\n              case 32:\n                _context3.prev = 32;\n                _iterator = _createForOfIteratorHelper(options.hooks.afterResponse.entries());\n                _context3.prev = 34;\n                _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n                  var _step$value, index, hook;\n                  return _regeneratorRuntime().wrap(function _loop$(_context2) {\n                    while (1) switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _step$value = _slicedToArray(_step.value, 2), index = _step$value[0], hook = _step$value[1];\n                        _context2.next = 3;\n                        return hook(response, /*#__PURE__*/function () {\n                          var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(updatedOptions) {\n                            var typedOptions, _iterator2, _step2, _hook, promise;\n                            return _regeneratorRuntime().wrap(function _callee$(_context) {\n                              while (1) switch (_context.prev = _context.next) {\n                                case 0:\n                                  typedOptions = core_1.default.normalizeArguments(undefined, _objectSpread({}, updatedOptions, {\n                                    retry: {\n                                      calculateDelay: function calculateDelay() {\n                                        return 0;\n                                      }\n                                    },\n                                    throwHttpErrors: false,\n                                    resolveBodyOnly: false\n                                  }), options); // Remove any further hooks for that request, because we'll call them anyway.\n                                  // The loop continues. We don't want duplicates (asPromise recursion).\n                                  typedOptions.hooks.afterResponse = typedOptions.hooks.afterResponse.slice(0, index);\n                                  _iterator2 = _createForOfIteratorHelper(typedOptions.hooks.beforeRetry);\n                                  _context.prev = 3;\n                                  _iterator2.s();\n                                case 5:\n                                  if ((_step2 = _iterator2.n()).done) {\n                                    _context.next = 11;\n                                    break;\n                                  }\n                                  _hook = _step2.value;\n                                  _context.next = 9;\n                                  return _hook(typedOptions);\n                                case 9:\n                                  _context.next = 5;\n                                  break;\n                                case 11:\n                                  _context.next = 16;\n                                  break;\n                                case 13:\n                                  _context.prev = 13;\n                                  _context.t0 = _context[\"catch\"](3);\n                                  _iterator2.e(_context.t0);\n                                case 16:\n                                  _context.prev = 16;\n                                  _iterator2.f();\n                                  return _context.finish(16);\n                                case 19:\n                                  promise = asPromise(typedOptions);\n                                  onCancel(function () {\n                                    promise.catch(function () {});\n                                    promise.cancel();\n                                  });\n                                  return _context.abrupt(\"return\", promise);\n                                case 22:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }, _callee, null, [[3, 13, 16, 19]]);\n                          }));\n                          return function (_x2) {\n                            return _ref2.apply(this, arguments);\n                          };\n                        }());\n                      case 3:\n                        response = _context2.sent;\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }, _loop);\n                });\n                _iterator.s();\n              case 37:\n                if ((_step = _iterator.n()).done) {\n                  _context3.next = 41;\n                  break;\n                }\n                return _context3.delegateYield(_loop(), \"t2\", 39);\n              case 39:\n                _context3.next = 37;\n                break;\n              case 41:\n                _context3.next = 46;\n                break;\n              case 43:\n                _context3.prev = 43;\n                _context3.t3 = _context3[\"catch\"](34);\n                _iterator.e(_context3.t3);\n              case 46:\n                _context3.prev = 46;\n                _iterator.f();\n                return _context3.finish(46);\n              case 49:\n                _context3.next = 55;\n                break;\n              case 51:\n                _context3.prev = 51;\n                _context3.t4 = _context3[\"catch\"](32);\n                request._beforeError(new types_1.RequestError(_context3.t4.message, _context3.t4, request));\n                return _context3.abrupt(\"return\");\n              case 55:\n                globalResponse = response;\n                if (is_response_ok_1.isResponseOk(response)) {\n                  _context3.next = 59;\n                  break;\n                }\n                request._beforeError(new types_1.HTTPError(response));\n                return _context3.abrupt(\"return\");\n              case 59:\n                request.destroy();\n                resolve(request.options.resolveBodyOnly ? response.body : response);\n              case 61:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee2, null, [[3, 10], [22, 26], [32, 51], [34, 43, 46, 49]]);\n        }));\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n      var onError = function onError(error) {\n        if (promise.isCanceled) {\n          return;\n        }\n        var options = request.options;\n        if (error instanceof types_1.HTTPError && !options.throwHttpErrors) {\n          var response = error.response;\n          resolve(request.options.resolveBodyOnly ? response.body : response);\n          return;\n        }\n        reject(error);\n      };\n      request.once('error', onError);\n      var previousBody = request.options.body;\n      request.once('retry', function (newRetryCount, error) {\n        var _a, _b;\n        if (previousBody === ((_a = error.request) === null || _a === void 0 ? void 0 : _a.options.body) && is_1.default.nodeStream((_b = error.request) === null || _b === void 0 ? void 0 : _b.options.body)) {\n          onError(error);\n          return;\n        }\n        makeRequest(newRetryCount);\n      });\n      proxy_events_1.default(request, emitter, proxiedRequestEvents);\n    };\n    makeRequest(0);\n  });\n  promise.on = function (event, fn) {\n    emitter.on(event, fn);\n    return promise;\n  };\n  var shortcut = function shortcut(responseType) {\n    var newPromise = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n      var options;\n      return _regeneratorRuntime().wrap(function _callee3$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return promise;\n          case 2:\n            options = globalResponse.request.options;\n            return _context4.abrupt(\"return\", parse_body_1.default(globalResponse, responseType, options.parseJson, options.encoding));\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee3);\n    }))();\n    Object.defineProperties(newPromise, Object.getOwnPropertyDescriptors(promise));\n    return newPromise;\n  };\n  promise.json = function () {\n    var headers = globalRequest.options.headers;\n    if (!globalRequest.writableFinished && headers.accept === undefined) {\n      headers.accept = 'application/json';\n    }\n    return shortcut('json');\n  };\n  promise.buffer = function () {\n    return shortcut('buffer');\n  };\n  promise.text = function () {\n    return shortcut('text');\n  };\n  return promise;\n}\nexports.default = asPromise;\n__exportStar(require(\"./types\"), exports);","map":null,"metadata":{},"sourceType":"script"}