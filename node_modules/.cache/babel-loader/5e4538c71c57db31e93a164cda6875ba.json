{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ServerHeartbeatFailedEvent = exports.ServerHeartbeatSucceededEvent = exports.ServerHeartbeatStartedEvent = exports.TopologyClosedEvent = exports.TopologyOpeningEvent = exports.TopologyDescriptionChangedEvent = exports.ServerClosedEvent = exports.ServerOpeningEvent = exports.ServerDescriptionChangedEvent = void 0;\n/**\n * Emitted when server description changes, but does NOT include changes to the RTT.\n * @public\n * @category Event\n */\nvar ServerDescriptionChangedEvent = /** @internal */\nfunction ServerDescriptionChangedEvent(topologyId, address, previousDescription, newDescription) {\n  _classCallCheck(this, ServerDescriptionChangedEvent);\n  this.topologyId = topologyId;\n  this.address = address;\n  this.previousDescription = previousDescription;\n  this.newDescription = newDescription;\n};\nexports.ServerDescriptionChangedEvent = ServerDescriptionChangedEvent;\n/**\n * Emitted when server is initialized.\n * @public\n * @category Event\n */\nvar ServerOpeningEvent = /** @internal */\nfunction ServerOpeningEvent(topologyId, address) {\n  _classCallCheck(this, ServerOpeningEvent);\n  this.topologyId = topologyId;\n  this.address = address;\n};\nexports.ServerOpeningEvent = ServerOpeningEvent;\n/**\n * Emitted when server is closed.\n * @public\n * @category Event\n */\nvar ServerClosedEvent = /** @internal */\nfunction ServerClosedEvent(topologyId, address) {\n  _classCallCheck(this, ServerClosedEvent);\n  this.topologyId = topologyId;\n  this.address = address;\n};\nexports.ServerClosedEvent = ServerClosedEvent;\n/**\n * Emitted when topology description changes.\n * @public\n * @category Event\n */\nvar TopologyDescriptionChangedEvent = /** @internal */\nfunction TopologyDescriptionChangedEvent(topologyId, previousDescription, newDescription) {\n  _classCallCheck(this, TopologyDescriptionChangedEvent);\n  this.topologyId = topologyId;\n  this.previousDescription = previousDescription;\n  this.newDescription = newDescription;\n};\nexports.TopologyDescriptionChangedEvent = TopologyDescriptionChangedEvent;\n/**\n * Emitted when topology is initialized.\n * @public\n * @category Event\n */\nvar TopologyOpeningEvent = /** @internal */\nfunction TopologyOpeningEvent(topologyId) {\n  _classCallCheck(this, TopologyOpeningEvent);\n  this.topologyId = topologyId;\n};\nexports.TopologyOpeningEvent = TopologyOpeningEvent;\n/**\n * Emitted when topology is closed.\n * @public\n * @category Event\n */\nvar TopologyClosedEvent = /** @internal */\nfunction TopologyClosedEvent(topologyId) {\n  _classCallCheck(this, TopologyClosedEvent);\n  this.topologyId = topologyId;\n};\nexports.TopologyClosedEvent = TopologyClosedEvent;\n/**\n * Emitted when the server monitor’s hello command is started - immediately before\n * the hello command is serialized into raw BSON and written to the socket.\n *\n * @public\n * @category Event\n */\nvar ServerHeartbeatStartedEvent = /** @internal */\nfunction ServerHeartbeatStartedEvent(connectionId) {\n  _classCallCheck(this, ServerHeartbeatStartedEvent);\n  this.connectionId = connectionId;\n};\nexports.ServerHeartbeatStartedEvent = ServerHeartbeatStartedEvent;\n/**\n * Emitted when the server monitor’s hello succeeds.\n * @public\n * @category Event\n */\nvar ServerHeartbeatSucceededEvent = /** @internal */\nfunction ServerHeartbeatSucceededEvent(connectionId, duration, reply) {\n  _classCallCheck(this, ServerHeartbeatSucceededEvent);\n  this.connectionId = connectionId;\n  this.duration = duration;\n  this.reply = reply ?? {};\n};\nexports.ServerHeartbeatSucceededEvent = ServerHeartbeatSucceededEvent;\n/**\n * Emitted when the server monitor’s hello fails, either with an “ok: 0” or a socket exception.\n * @public\n * @category Event\n */\nvar ServerHeartbeatFailedEvent = /** @internal */\nfunction ServerHeartbeatFailedEvent(connectionId, duration, failure) {\n  _classCallCheck(this, ServerHeartbeatFailedEvent);\n  this.connectionId = connectionId;\n  this.duration = duration;\n  this.failure = failure;\n};\nexports.ServerHeartbeatFailedEvent = ServerHeartbeatFailedEvent;","map":{"version":3,"names":["ServerDescriptionChangedEvent","topologyId","address","previousDescription","newDescription","_classCallCheck","exports","ServerOpeningEvent","ServerClosedEvent","TopologyDescriptionChangedEvent","TopologyOpeningEvent","TopologyClosedEvent","ServerHeartbeatStartedEvent","connectionId","ServerHeartbeatSucceededEvent","duration","reply","ServerHeartbeatFailedEvent","failure"],"sources":["../../src/sdam/events.ts"],"sourcesContent":[null],"mappings":";;;;;;;AAIA;;;;;AAAA,IAKaA,6BAA6B,GAUxC;AACA,SAAAA,8BACEC,UAAkB,EAClBC,OAAe,EACfC,mBAAsC,EACtCC,cAAiC;EAAAC,eAAA,OAAAL,6BAAA;EAEjC,IAAI,CAACC,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACC,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACC,mBAAmB,GAAGA,mBAAmB;EAC9C,IAAI,CAACC,cAAc,GAAGA,cAAc;AACtC,CAAC;AArBHE,OAAA,CAAAN,6BAAA,GAAAA,6BAAA;AAwBA;;;;;AAAA,IAKaO,kBAAkB,GAM7B;AACA,SAAAA,mBAAYN,UAAkB,EAAEC,OAAe;EAAAG,eAAA,OAAAE,kBAAA;EAC7C,IAAI,CAACN,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACC,OAAO,GAAGA,OAAO;AACxB,CAAC;AAVHI,OAAA,CAAAC,kBAAA,GAAAA,kBAAA;AAaA;;;;;AAAA,IAKaC,iBAAiB,GAM5B;AACA,SAAAA,kBAAYP,UAAkB,EAAEC,OAAe;EAAAG,eAAA,OAAAG,iBAAA;EAC7C,IAAI,CAACP,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACC,OAAO,GAAGA,OAAO;AACxB,CAAC;AAVHI,OAAA,CAAAE,iBAAA,GAAAA,iBAAA;AAaA;;;;;AAAA,IAKaC,+BAA+B,GAQ1C;AACA,SAAAA,gCACER,UAAkB,EAClBE,mBAAwC,EACxCC,cAAmC;EAAAC,eAAA,OAAAI,+BAAA;EAEnC,IAAI,CAACR,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACE,mBAAmB,GAAGA,mBAAmB;EAC9C,IAAI,CAACC,cAAc,GAAGA,cAAc;AACtC,CAAC;AAjBHE,OAAA,CAAAG,+BAAA,GAAAA,+BAAA;AAoBA;;;;;AAAA,IAKaC,oBAAoB,GAI/B;AACA,SAAAA,qBAAYT,UAAkB;EAAAI,eAAA,OAAAK,oBAAA;EAC5B,IAAI,CAACT,UAAU,GAAGA,UAAU;AAC9B,CAAC;AAPHK,OAAA,CAAAI,oBAAA,GAAAA,oBAAA;AAUA;;;;;AAAA,IAKaC,mBAAmB,GAI9B;AACA,SAAAA,oBAAYV,UAAkB;EAAAI,eAAA,OAAAM,mBAAA;EAC5B,IAAI,CAACV,UAAU,GAAGA,UAAU;AAC9B,CAAC;AAPHK,OAAA,CAAAK,mBAAA,GAAAA,mBAAA;AAUA;;;;;;;AAAA,IAOaC,2BAA2B,GAItC;AACA,SAAAA,4BAAYC,YAAoB;EAAAR,eAAA,OAAAO,2BAAA;EAC9B,IAAI,CAACC,YAAY,GAAGA,YAAY;AAClC,CAAC;AAPHP,OAAA,CAAAM,2BAAA,GAAAA,2BAAA;AAUA;;;;;AAAA,IAKaE,6BAA6B,GAQxC;AACA,SAAAA,8BAAYD,YAAoB,EAAEE,QAAgB,EAAEC,KAAsB;EAAAX,eAAA,OAAAS,6BAAA;EACxE,IAAI,CAACD,YAAY,GAAGA,YAAY;EAChC,IAAI,CAACE,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAACC,KAAK,GAAGA,KAAK,IAAI,EAAE;AAC1B,CAAC;AAbHV,OAAA,CAAAQ,6BAAA,GAAAA,6BAAA;AAgBA;;;;;AAAA,IAKaG,0BAA0B,GAQrC;AACA,SAAAA,2BAAYJ,YAAoB,EAAEE,QAAgB,EAAEG,OAAc;EAAAb,eAAA,OAAAY,0BAAA;EAChE,IAAI,CAACJ,YAAY,GAAGA,YAAY;EAChC,IAAI,CAACE,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAACG,OAAO,GAAGA,OAAO;AACxB,CAAC;AAbHZ,OAAA,CAAAW,0BAAA,GAAAA,0BAAA"},"metadata":{},"sourceType":"module"}