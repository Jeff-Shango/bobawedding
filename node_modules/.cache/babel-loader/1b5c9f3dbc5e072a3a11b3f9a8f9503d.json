{"ast":null,"code":"\"use strict\";\n\nimport _asyncToGenerator from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _get from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FindCursor = exports.FLAGS = void 0;\nvar bson_1 = require(\"../bson\");\nvar error_1 = require(\"../error\");\nvar count_1 = require(\"../operations/count\");\nvar execute_operation_1 = require(\"../operations/execute_operation\");\nvar find_1 = require(\"../operations/find\");\nvar sort_1 = require(\"../sort\");\nvar utils_1 = require(\"../utils\");\nvar abstract_cursor_1 = require(\"./abstract_cursor\");\n/** @internal */\nvar kFilter = Symbol('filter');\n/** @internal */\nvar kNumReturned = Symbol('numReturned');\n/** @internal */\nvar kBuiltOptions = Symbol('builtOptions');\n/** @public Flags allowed for cursor */\nexports.FLAGS = ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'exhaust', 'partial'];\n/** @public */\nvar FindCursor = /*#__PURE__*/function (_abstract_cursor_1$Ab) {\n  _inherits(FindCursor, _abstract_cursor_1$Ab);\n  /** @internal */\n  function FindCursor(client, namespace) {\n    var _this;\n    var filter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    _classCallCheck(this, FindCursor);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FindCursor).call(this, client, namespace, options));\n    _this[kFilter] = filter;\n    _this[kBuiltOptions] = options;\n    if (options.sort != null) {\n      _this[kBuiltOptions].sort = (0, sort_1.formatSort)(options.sort);\n    }\n    return _this;\n  }\n  _createClass(FindCursor, [{\n    key: \"clone\",\n    value: function clone() {\n      var clonedOptions = (0, utils_1.mergeOptions)({}, this[kBuiltOptions]);\n      delete clonedOptions.session;\n      return new FindCursor(this.client, this.namespace, this[kFilter], _objectSpread({}, clonedOptions));\n    }\n  }, {\n    key: \"map\",\n    value: function map(transform) {\n      return _get(_getPrototypeOf(FindCursor.prototype), \"map\", this).call(this, transform);\n    } /** @internal */\n  }, {\n    key: \"_initialize\",\n    value: function () {\n      var _initialize2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(session) {\n        var findOperation, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              findOperation = new find_1.FindOperation(undefined, this.namespace, this[kFilter], _objectSpread({}, this[kBuiltOptions], this.cursorOptions, {\n                session: session\n              }));\n              _context.next = 3;\n              return (0, execute_operation_1.executeOperation)(this.client, findOperation);\n            case 3:\n              response = _context.sent;\n              // the response is not a cursor when `explain` is enabled\n              this[kNumReturned] = response.cursor?.firstBatch?.length;\n              // TODO: NODE-2882\n              return _context.abrupt(\"return\", {\n                server: findOperation.server,\n                session: session,\n                response: response\n              });\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function _initialize(_x) {\n        return _initialize2.apply(this, arguments);\n      }\n      return _initialize;\n    }() /** @internal */\n  }, {\n    key: \"getMore\",\n    value: function () {\n      var _getMore = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(batchSize) {\n        var numReturned, limit, response;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              numReturned = this[kNumReturned];\n              if (!numReturned) {\n                _context2.next = 8;\n                break;\n              }\n              // TODO(DRIVERS-1448): Remove logic to enforce `limit` in the driver\n              limit = this[kBuiltOptions].limit;\n              batchSize = limit && limit > 0 && numReturned + batchSize > limit ? limit - numReturned : batchSize;\n              if (!(batchSize <= 0)) {\n                _context2.next = 8;\n                break;\n              }\n              _context2.next = 7;\n              return this.close().catch(function () {\n                return null;\n              });\n            case 7:\n              return _context2.abrupt(\"return\", {\n                cursor: {\n                  id: bson_1.Long.ZERO,\n                  nextBatch: []\n                }\n              });\n            case 8:\n              _context2.next = 10;\n              return _get(_getPrototypeOf(FindCursor.prototype), \"getMore\", this).call(this, batchSize);\n            case 10:\n              response = _context2.sent;\n              // TODO: wrap this in some logic to prevent it from happening if we don't need this support\n              if (response) {\n                this[kNumReturned] = this[kNumReturned] + response.cursor.nextBatch.length;\n              }\n              return _context2.abrupt(\"return\", response);\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function getMore(_x2) {\n        return _getMore.apply(this, arguments);\n      }\n      return getMore;\n    }()\n    /**\n     * Get the count of documents for this cursor\n     * @deprecated Use `collection.estimatedDocumentCount` or `collection.countDocuments` instead\n     */\n  }, {\n    key: \"count\",\n    value: function () {\n      var _count = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(options) {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              (0, utils_1.emitWarningOnce)('cursor.count is deprecated and will be removed in the next major version, please use `collection.estimatedDocumentCount` or `collection.countDocuments` instead ');\n              if (!(typeof options === 'boolean')) {\n                _context3.next = 3;\n                break;\n              }\n              throw new error_1.MongoInvalidArgumentError('Invalid first parameter to count');\n            case 3:\n              return _context3.abrupt(\"return\", (0, execute_operation_1.executeOperation)(this.client, new count_1.CountOperation(this.namespace, this[kFilter], _objectSpread({}, this[kBuiltOptions], this.cursorOptions, options))));\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function count(_x3) {\n        return _count.apply(this, arguments);\n      }\n      return count;\n    }() /** Execute the explain for the cursor */\n  }, {\n    key: \"explain\",\n    value: function () {\n      var _explain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(verbosity) {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", (0, execute_operation_1.executeOperation)(this.client, new find_1.FindOperation(undefined, this.namespace, this[kFilter], _objectSpread({}, this[kBuiltOptions], this.cursorOptions, {\n                explain: verbosity ?? true\n              }))));\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function explain(_x4) {\n        return _explain.apply(this, arguments);\n      }\n      return explain;\n    }() /** Set the cursor query */\n  }, {\n    key: \"filter\",\n    value: function filter(_filter) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      this[kFilter] = _filter;\n      return this;\n    }\n    /**\n     * Set the cursor hint\n     *\n     * @param hint - If specified, then the query system will only consider plans using the hinted index.\n     */\n  }, {\n    key: \"hint\",\n    value: function hint(_hint) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      this[kBuiltOptions].hint = _hint;\n      return this;\n    }\n    /**\n     * Set the cursor min\n     *\n     * @param min - Specify a $min value to specify the inclusive lower bound for a specific index in order to constrain the results of find(). The $min specifies the lower bound for all keys of a specific index in order.\n     */\n  }, {\n    key: \"min\",\n    value: function min(_min) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      this[kBuiltOptions].min = _min;\n      return this;\n    }\n    /**\n     * Set the cursor max\n     *\n     * @param max - Specify a $max value to specify the exclusive upper bound for a specific index in order to constrain the results of find(). The $max specifies the upper bound for all keys of a specific index in order.\n     */\n  }, {\n    key: \"max\",\n    value: function max(_max) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      this[kBuiltOptions].max = _max;\n      return this;\n    }\n    /**\n     * Set the cursor returnKey.\n     * If set to true, modifies the cursor to only return the index field or fields for the results of the query, rather than documents.\n     * If set to true and the query does not use an index to perform the read operation, the returned documents will not contain any fields.\n     *\n     * @param value - the returnKey value.\n     */\n  }, {\n    key: \"returnKey\",\n    value: function returnKey(value) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      this[kBuiltOptions].returnKey = value;\n      return this;\n    }\n    /**\n     * Modifies the output of a query by adding a field $recordId to matching documents. $recordId is the internal key which uniquely identifies a document in a collection.\n     *\n     * @param value - The $showDiskLoc option has now been deprecated and replaced with the showRecordId field. $showDiskLoc will still be accepted for OP_QUERY stye find.\n     */\n  }, {\n    key: \"showRecordId\",\n    value: function showRecordId(value) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      this[kBuiltOptions].showRecordId = value;\n      return this;\n    }\n    /**\n     * Add a query modifier to the cursor query\n     *\n     * @param name - The query modifier (must start with $, such as $orderby etc)\n     * @param value - The modifier value.\n     */\n  }, {\n    key: \"addQueryModifier\",\n    value: function addQueryModifier(name, value) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      if (name[0] !== '$') {\n        throw new error_1.MongoInvalidArgumentError(\"\".concat(name, \" is not a valid query modifier\"));\n      }\n      // Strip of the $\n      var field = name.substr(1);\n      // NOTE: consider some TS magic for this\n      switch (field) {\n        case 'comment':\n          this[kBuiltOptions].comment = value;\n          break;\n        case 'explain':\n          this[kBuiltOptions].explain = value;\n          break;\n        case 'hint':\n          this[kBuiltOptions].hint = value;\n          break;\n        case 'max':\n          this[kBuiltOptions].max = value;\n          break;\n        case 'maxTimeMS':\n          this[kBuiltOptions].maxTimeMS = value;\n          break;\n        case 'min':\n          this[kBuiltOptions].min = value;\n          break;\n        case 'orderby':\n          this[kBuiltOptions].sort = (0, sort_1.formatSort)(value);\n          break;\n        case 'query':\n          this[kFilter] = value;\n          break;\n        case 'returnKey':\n          this[kBuiltOptions].returnKey = value;\n          break;\n        case 'showDiskLoc':\n          this[kBuiltOptions].showRecordId = value;\n          break;\n        default:\n          throw new error_1.MongoInvalidArgumentError(\"Invalid query modifier: \".concat(name));\n      }\n      return this;\n    }\n    /**\n     * Add a comment to the cursor query allowing for tracking the comment in the log.\n     *\n     * @param value - The comment attached to this query.\n     */\n  }, {\n    key: \"comment\",\n    value: function comment(value) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      this[kBuiltOptions].comment = value;\n      return this;\n    }\n    /**\n     * Set a maxAwaitTimeMS on a tailing cursor query to allow to customize the timeout value for the option awaitData (Only supported on MongoDB 3.2 or higher, ignored otherwise)\n     *\n     * @param value - Number of milliseconds to wait before aborting the tailed query.\n     */\n  }, {\n    key: \"maxAwaitTimeMS\",\n    value: function maxAwaitTimeMS(value) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      if (typeof value !== 'number') {\n        throw new error_1.MongoInvalidArgumentError('Argument for maxAwaitTimeMS must be a number');\n      }\n      this[kBuiltOptions].maxAwaitTimeMS = value;\n      return this;\n    }\n    /**\n     * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n     *\n     * @param value - Number of milliseconds to wait before aborting the query.\n     */\n  }, {\n    key: \"maxTimeMS\",\n    value: function maxTimeMS(value) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      if (typeof value !== 'number') {\n        throw new error_1.MongoInvalidArgumentError('Argument for maxTimeMS must be a number');\n      }\n      this[kBuiltOptions].maxTimeMS = value;\n      return this;\n    }\n    /**\n     * Add a project stage to the aggregation pipeline\n     *\n     * @remarks\n     * In order to strictly type this function you must provide an interface\n     * that represents the effect of your projection on the result documents.\n     *\n     * By default chaining a projection to your cursor changes the returned type to the generic\n     * {@link Document} type.\n     * You should specify a parameterized type to have assertions on your final results.\n     *\n     * @example\n     * ```typescript\n     * // Best way\n     * const docs: FindCursor<{ a: number }> = cursor.project<{ a: number }>({ _id: 0, a: true });\n     * // Flexible way\n     * const docs: FindCursor<Document> = cursor.project({ _id: 0, a: true });\n     * ```\n     *\n     * @remarks\n     *\n     * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n     * it **does not** return a new instance of a cursor. This means when calling project,\n     * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n     * Take note of the following example:\n     *\n     * @example\n     * ```typescript\n     * const cursor: FindCursor<{ a: number; b: string }> = coll.find();\n     * const projectCursor = cursor.project<{ a: number }>({ _id: 0, a: true });\n     * const aPropOnlyArray: {a: number}[] = await projectCursor.toArray();\n     *\n     * // or always use chaining and save the final cursor\n     *\n     * const cursor = coll.find().project<{ a: string }>({\n     *   _id: 0,\n     *   a: { $convert: { input: '$a', to: 'string' }\n     * }});\n     * ```\n     */\n  }, {\n    key: \"project\",\n    value: function project(value) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      this[kBuiltOptions].projection = value;\n      return this;\n    }\n    /**\n     * Sets the sort order of the cursor query.\n     *\n     * @param sort - The key or keys set for the sort.\n     * @param direction - The direction of the sorting (1 or -1).\n     */\n  }, {\n    key: \"sort\",\n    value: function sort(_sort, direction) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      if (this[kBuiltOptions].tailable) {\n        throw new error_1.MongoTailableCursorError('Tailable cursor does not support sorting');\n      }\n      this[kBuiltOptions].sort = (0, sort_1.formatSort)(_sort, direction);\n      return this;\n    }\n    /**\n     * Allows disk use for blocking sort operations exceeding 100MB memory. (MongoDB 3.2 or higher)\n     *\n     * @remarks\n     * {@link https://www.mongodb.com/docs/manual/reference/command/find/#find-cmd-allowdiskuse | find command allowDiskUse documentation}\n     */\n  }, {\n    key: \"allowDiskUse\",\n    value: function allowDiskUse() {\n      var allow = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      if (!this[kBuiltOptions].sort) {\n        throw new error_1.MongoInvalidArgumentError('Option \"allowDiskUse\" requires a sort specification');\n      }\n      // As of 6.0 the default is true. This allows users to get back to the old behavior.\n      if (!allow) {\n        this[kBuiltOptions].allowDiskUse = false;\n        return this;\n      }\n      this[kBuiltOptions].allowDiskUse = true;\n      return this;\n    }\n    /**\n     * Set the collation options for the cursor.\n     *\n     * @param value - The cursor collation options (MongoDB 3.4 or higher) settings for update operation (see 3.4 documentation for available fields).\n     */\n  }, {\n    key: \"collation\",\n    value: function collation(value) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      this[kBuiltOptions].collation = value;\n      return this;\n    }\n    /**\n     * Set the limit for the cursor.\n     *\n     * @param value - The limit for the cursor query.\n     */\n  }, {\n    key: \"limit\",\n    value: function limit(value) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      if (this[kBuiltOptions].tailable) {\n        throw new error_1.MongoTailableCursorError('Tailable cursor does not support limit');\n      }\n      if (typeof value !== 'number') {\n        throw new error_1.MongoInvalidArgumentError('Operation \"limit\" requires an integer');\n      }\n      this[kBuiltOptions].limit = value;\n      return this;\n    }\n    /**\n     * Set the skip for the cursor.\n     *\n     * @param value - The skip for the cursor query.\n     */\n  }, {\n    key: \"skip\",\n    value: function skip(value) {\n      (0, abstract_cursor_1.assertUninitialized)(this);\n      if (this[kBuiltOptions].tailable) {\n        throw new error_1.MongoTailableCursorError('Tailable cursor does not support skip');\n      }\n      if (typeof value !== 'number') {\n        throw new error_1.MongoInvalidArgumentError('Operation \"skip\" requires an integer');\n      }\n      this[kBuiltOptions].skip = value;\n      return this;\n    }\n  }]);\n  return FindCursor;\n}(abstract_cursor_1.AbstractCursor);\nexports.FindCursor = FindCursor;","map":{"version":3,"names":["bson_1","require","error_1","count_1","execute_operation_1","find_1","sort_1","utils_1","abstract_cursor_1","kFilter","Symbol","kNumReturned","kBuiltOptions","exports","FLAGS","FindCursor","_abstract_cursor_1$Ab","_inherits","client","namespace","_this","filter","arguments","length","undefined","options","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","sort","formatSort","_createClass","key","value","clone","clonedOptions","mergeOptions","session","_objectSpread","map","transform","_get","prototype","_initialize2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","findOperation","response","wrap","_callee$","_context","prev","next","FindOperation","cursorOptions","executeOperation","sent","cursor","firstBatch","abrupt","server","stop","_initialize","_x","apply","_getMore","_callee2","batchSize","numReturned","limit","_callee2$","_context2","close","catch","id","Long","ZERO","nextBatch","getMore","_x2","_count","_callee3","_callee3$","_context3","emitWarningOnce","MongoInvalidArgumentError","CountOperation","count","_x3","_explain","_callee4","verbosity","_callee4$","_context4","explain","_x4","assertUninitialized","hint","min","max","returnKey","showRecordId","addQueryModifier","name","concat","field","substr","comment","maxTimeMS","maxAwaitTimeMS","project","projection","direction","tailable","MongoTailableCursorError","allowDiskUse","allow","collation","skip","AbstractCursor"],"sources":["../../src/cursor/find_cursor.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}