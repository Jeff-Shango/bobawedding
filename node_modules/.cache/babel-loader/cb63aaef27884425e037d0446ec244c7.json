{"ast":null,"code":"import _asyncToGenerator from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nvar express = require('express');\nvar app = express();\nvar db = require('./db');\nvar api = require('./api');\napp.use(express.urlencoded({\n  extended: true\n}));\napp.use(express.json());\nvar cors = require('cors');\napp.use(cors());\n\n// Crud application\n\napp.post('/', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(req, res) {\n    var _req$body, comment, commentator, newPost;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _req$body = req.body, comment = _req$body.comment, commentator = _req$body.commentator;\n          _context.prev = 1;\n          _context.next = 4;\n          return api.create({\n            comment: comment,\n            commentator: commentator\n          });\n        case 4:\n          newPost = _context.sent;\n          res.json(newPost);\n          _context.next = 11;\n          break;\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](1);\n          res.status(500).send(_context.t0);\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.get('/', /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(req, res) {\n    var posts;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return api.find();\n        case 3:\n          posts = _context2.sent;\n          res.json(posts);\n          _context2.next = 10;\n          break;\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          res.status(500).send(_context2.t0);\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n  return function (_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}());\napp.get('/:id', /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(req, res) {\n    var id, post;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          id = req.params.id;\n          _context3.prev = 1;\n          _context3.next = 4;\n          return api.findById(id);\n        case 4:\n          post = _context3.sent;\n          res.json(post);\n          _context3.next = 11;\n          break;\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](1);\n          res.status(500).send(_context3.t0);\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[1, 8]]);\n  }));\n  return function (_x5, _x6) {\n    return _ref3.apply(this, arguments);\n  };\n}());\napp.put(\"/:id\", /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n    var id, _req$body2, comment, commentator, post;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          id = req.params.id;\n          _req$body2 = req.body, comment = _req$body2.comment, commentator = _req$body2.commentator;\n          _context4.prev = 2;\n          _context4.next = 5;\n          return api.findByIdAndUpdate(id, {\n            comment: comment,\n            commentator: commentator\n          });\n        case 5:\n          post = _context4.sent;\n          res.json(post);\n          _context4.next = 12;\n          break;\n        case 9:\n          _context4.prev = 9;\n          _context4.t0 = _context4[\"catch\"](2);\n          res.status(500).send(_context4.t0);\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[2, 9]]);\n  }));\n  return function (_x7, _x8) {\n    return _ref4.apply(this, arguments);\n  };\n}());\napp.delete(\"/:id\", /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n    var id, _req$body3, comment, commentator, post;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          id = req.params.id;\n          _req$body3 = req.body, comment = _req$body3.comment, commentator = _req$body3.commentator;\n          _context5.prev = 2;\n          _context5.next = 5;\n          return api.findByIdAndDelete(id, {\n            comment: comment,\n            commentator: commentator\n          });\n        case 5:\n          post = _context5.sent;\n          _context5.next = 8;\n          return post.remove();\n        case 8:\n          res.json(\"deleted the comment\");\n          _context5.next = 14;\n          break;\n        case 11:\n          _context5.prev = 11;\n          _context5.t0 = _context5[\"catch\"](2);\n          res.status(500).send(_context5.t0);\n        case 14:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[2, 11]]);\n  }));\n  return function (_x9, _x10) {\n    return _ref5.apply(this, arguments);\n  };\n}());\napp.listen(3012, function () {\n  console.log('Listening on 3012');\n});\nmodule.exports = {\n  addComment: function () {\n    var _addComment = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(comment, commentator) {\n      var newPost;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return api.create({\n              comment: comment,\n              commentator: commentator\n            });\n          case 3:\n            newPost = _context6.sent;\n            return _context6.abrupt(\"return\", newPost);\n          case 7:\n            _context6.prev = 7;\n            _context6.t0 = _context6[\"catch\"](0);\n            res.status(500).send(_context6.t0);\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[0, 7]]);\n    }));\n    function addComment(_x11, _x12) {\n      return _addComment.apply(this, arguments);\n    }\n    return addComment;\n  }(),\n  getReplies: function () {\n    var _getReplies = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(commentId) {\n      return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            return _context7.abrupt(\"return\", []);\n          case 4:\n            _context7.prev = 4;\n            _context7.t0 = _context7[\"catch\"](0);\n            res.status(500).send(_context7.t0);\n          case 7:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7, null, [[0, 4]]);\n    }));\n    function getReplies(_x13) {\n      return _getReplies.apply(this, arguments);\n    }\n    return getReplies;\n  }(),\n  deleteComment: function () {\n    var _deleteComment = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(commentId) {\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.prev = 0;\n            return _context8.abrupt(\"return\", \"Deleted the comment\");\n          case 4:\n            _context8.prev = 4;\n            _context8.t0 = _context8[\"catch\"](0);\n            res.status(500).send(_context8.t0);\n          case 7:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8, null, [[0, 4]]);\n    }));\n    function deleteComment(_x14) {\n      return _deleteComment.apply(this, arguments);\n    }\n    return deleteComment;\n  }(),\n  updateComment: function () {\n    var _updateComment = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(commentId, comment, commentator) {\n      var post;\n      return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n        while (1) switch (_context9.prev = _context9.next) {\n          case 0:\n            _context9.prev = 0;\n            _context9.next = 3;\n            return api.findByIdAndUpdate(commentId, {\n              comment: comment,\n              commentator: commentator\n            });\n          case 3:\n            post = _context9.sent;\n            return _context9.abrupt(\"return\", post);\n          case 7:\n            _context9.prev = 7;\n            _context9.t0 = _context9[\"catch\"](0);\n            res.status(500).send(_context9.t0);\n          case 10:\n          case \"end\":\n            return _context9.stop();\n        }\n      }, _callee9, null, [[0, 7]]);\n    }));\n    function updateComment(_x15, _x16, _x17) {\n      return _updateComment.apply(this, arguments);\n    }\n    return updateComment;\n  }(),\n  getComments: function () {\n    var _getComments = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n      var posts;\n      return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.prev = 0;\n            _context10.next = 3;\n            return api.find();\n          case 3:\n            posts = _context10.sent;\n            return _context10.abrupt(\"return\", posts);\n          case 7:\n            _context10.prev = 7;\n            _context10.t0 = _context10[\"catch\"](0);\n            res.status(500).send(_context10.t0);\n          case 10:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, _callee10, null, [[0, 7]]);\n    }));\n    function getComments() {\n      return _getComments.apply(this, arguments);\n    }\n    return getComments;\n  }()\n};\n\n// require('dotenv').config()\n// const {connect} = require('./db')\n// const express = require('express')\n// const commentsController = require('./controllers/comments')\n// const bodyParser = require('body-parser');\n// const mongoose = require('mongoose');\n\n// const app = express()\n\n// app.use(bodyParser.json())\n// app.use(bodyParser.urlencoded({ extended: true}))\n\n// app.get(\"/\", (_, res) => {\n//     res.send(\"What's good, API\");\n// });\n\n// app.get(\"/comments\", commentsController.all)\n// app.post(\"/comments\", commentsController.create)\n// app.put(\"/comments/:id\", commentsController.update)\n// app.delete(\"/comments/:id\", commentsController.delete)\n\n// const startServer = async () => {\n//     try {\n//         await mongoose.connect(process.env.MONGODB_URI, {\n//             useNewUrlParser: true,\n//             useUnifiedTopology: true,\n//         });\n//         app.listen(3012, () => {\n//             console.log('API running, mane');\n//         });\n//     } catch (err) {\n//         console.error(err);\n//     }\n// };\n\n// startServer();\n\n// const startServer = async () => {\n//     await connect(process.env.MONGODB_URI);\n\n//     app.listen(3012, () => {\n//         console.log('API running, mane')\n//     });\n// };\n\n// startServer();","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","express","require","app","db","api","use","urlencoded","extended","json","cors","post","_ref","_asyncToGenerator","_callee","req","res","_req$body","comment","commentator","newPost","_callee$","_context","body","t0","status","send","_x","_x2","apply","arguments","get","_ref2","_callee2","posts","_callee2$","_context2","find","_x3","_x4","_ref3","_callee3","id","_callee3$","_context3","params","findById","_x5","_x6","put","_ref4","_callee4","_req$body2","_callee4$","_context4","findByIdAndUpdate","_x7","_x8","delete","_ref5","_callee5","_req$body3","_callee5$","_context5","findByIdAndDelete","remove","_x9","_x10","listen","console","log","module","exports","addComment","_addComment","_callee6","_callee6$","_context6","_x11","_x12","getReplies","_getReplies","_callee7","commentId","_callee7$","_context7","_x13","deleteComment","_deleteComment","_callee8","_callee8$","_context8","_x14","updateComment","_updateComment","_callee9","_callee9$","_context9","_x15","_x16","_x17","getComments","_getComments","_callee10","_callee10$","_context10"],"sources":["/home/jeff/bobawedding/src/weddingCommentServer/WeddingServer/index.js"],"sourcesContent":["const express = require('express');\nconst app = express();\nconst db = require('./db')\nconst api = require('./api');\napp.use(express.urlencoded({extended: true}))\napp.use(express.json());\nconst cors = require('cors');\napp.use(cors());\n\n// Crud application\n\n\napp.post('/', async(req, res) => {\n    const {comment, commentator} = req.body;\n\n    try {\n        const newPost = await api.create({comment, commentator});\n        res.json(newPost);\n    } catch (error) {\n        res.status(500).send(error)\n    }\n});\n\napp.get('/', async (req, res) => {\n    try {\n        const posts = await api.find();\n        res.json(posts);\n    } catch (error) {\n        res.status(500).send(error)\n    }\n});\n\napp.get('/:id', async(req, res) => {\n    const {id} = req.params;\n    try {\n        const post = await api.findById(id);\n        res.json(post);\n    } catch (error) {\n        res.status(500).send(error)\n\n    }\n})\n\napp.put(\"/:id\", async(req, res) => {\n    const {id} = req.params;\n    const {comment, commentator} = req.body;\n    try {\n        const post = await api.findByIdAndUpdate(id, {comment, commentator});\n        res.json(post)\n\n    } catch (error) {\n        res.status(500).send(error)\n    }\n})\n\napp.delete(\"/:id\", async(req, res) => {\n    const {id} = req.params;\n    const {comment, commentator} = req.body;\n    try {\n        const post = await api.findByIdAndDelete(id, {comment, commentator});\n        await post.remove();\n        res.json( \"deleted the comment\")\n\n    } catch (error) {\n        res.status(500).send(error)\n    }\n})\n\napp.listen(3012, () => {\n    console.log('Listening on 3012')\n})\n\nmodule.exports = {\n    addComment: async (comment, commentator) => {\n        try {\n            const newPost = await api.create({ comment, commentator });\n            return newPost;\n        } catch (error) {\n            res.status(500).send(error)\n        }\n    },\n\n    getReplies: async (commentId) => {\n        try {\n            // Implement your logic to fetch replies for a given commentId\n            // For now, return an empty array\n            return [];\n        } catch (error) {\n            res.status(500).send(error)\n        }\n    },\n\n    deleteComment: async (commentId) => {\n        try {\n            // Implement your logic to delete a comment by commentId\n            // For now, return a success message\n            return \"Deleted the comment\";\n        } catch (error) {\n            res.status(500).send(error)\n        }\n    },\n\n    updateComment: async (commentId, comment, commentator) => {\n        try {\n            const post = await api.findByIdAndUpdate(commentId, { comment, commentator });\n            return post;\n        } catch (error) {\n            res.status(500).send(error)\n        }\n    },\n\n    getComments: async () => {\n        try {\n            const posts = await api.find();\n            return posts;\n        } catch (error) {\n            res.status(500).send(error)\n        }\n    }\n};\n\n// require('dotenv').config()\n// const {connect} = require('./db')\n// const express = require('express')\n// const commentsController = require('./controllers/comments')\n// const bodyParser = require('body-parser');\n// const mongoose = require('mongoose');\n\n// const app = express()\n\n// app.use(bodyParser.json())\n// app.use(bodyParser.urlencoded({ extended: true}))\n\n\n// app.get(\"/\", (_, res) => {\n//     res.send(\"What's good, API\");\n// });\n\n// app.get(\"/comments\", commentsController.all)\n// app.post(\"/comments\", commentsController.create)\n// app.put(\"/comments/:id\", commentsController.update)\n// app.delete(\"/comments/:id\", commentsController.delete)\n\n// const startServer = async () => {\n//     try {\n//         await mongoose.connect(process.env.MONGODB_URI, {\n//             useNewUrlParser: true,\n//             useUnifiedTopology: true,\n//         });\n//         app.listen(3012, () => {\n//             console.log('API running, mane');\n//         });\n//     } catch (err) {\n//         console.error(err);\n//     }\n// };\n\n// startServer();\n\n\n// const startServer = async () => {\n//     await connect(process.env.MONGODB_URI);\n    \n//     app.listen(3012, () => {\n//         console.log('API running, mane')\n//     });\n// };\n\n// startServer();"],"mappings":"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"},"metadata":{},"sourceType":"module"}