{"ast":null,"code":"var _slicedToArray = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nvar _objectSpread = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _toConsumableArray = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _asyncToGenerator = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nvar jose = require('jose');\nvar _require = require('./assert'),\n  assertIssuerConfiguration = _require.assertIssuerConfiguration;\nvar _require2 = require('./generators'),\n  random = _require2.random;\nvar now = require('./unix_timestamp');\nvar request = require('./request');\nvar instance = require('./weak_cache');\nvar merge = require('./merge');\nvar formUrlEncode = function formUrlEncode(value) {\n  return encodeURIComponent(value).replace(/%20/g, '+');\n};\nfunction clientAssertion(_x, _x2) {\n  return _clientAssertion.apply(this, arguments);\n}\nfunction _clientAssertion() {\n  _clientAssertion = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(endpoint, payload) {\n    var alg, _key, supported, keystore, algs, _supported, key;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          alg = this[\"\".concat(endpoint, \"_endpoint_auth_signing_alg\")];\n          if (!alg) {\n            assertIssuerConfiguration(this.issuer, \"\".concat(endpoint, \"_endpoint_auth_signing_alg_values_supported\"));\n          }\n          if (!(this[\"\".concat(endpoint, \"_endpoint_auth_method\")] === 'client_secret_jwt')) {\n            _context.next = 8;\n            break;\n          }\n          _context.next = 5;\n          return this.joseSecret();\n        case 5:\n          _key = _context.sent;\n          if (!alg) {\n            supported = this.issuer[\"\".concat(endpoint, \"_endpoint_auth_signing_alg_values_supported\")];\n            alg = Array.isArray(supported) && supported.find(function (signAlg) {\n              return _key.algorithms('sign').has(signAlg);\n            });\n          }\n          return _context.abrupt(\"return\", jose.JWS.sign(payload, _key, {\n            alg: alg,\n            typ: 'JWT'\n          }));\n        case 8:\n          keystore = instance(this).get('keystore');\n          if (keystore) {\n            _context.next = 11;\n            break;\n          }\n          throw new TypeError('no client jwks provided for signing a client assertion with');\n        case 11:\n          if (!alg) {\n            algs = new Set();\n            keystore.all().forEach(function (key) {\n              key.algorithms('sign').forEach(Set.prototype.add.bind(algs));\n            });\n            _supported = this.issuer[\"\".concat(endpoint, \"_endpoint_auth_signing_alg_values_supported\")];\n            alg = Array.isArray(_supported) && _supported.find(function (signAlg) {\n              return algs.has(signAlg);\n            });\n          }\n          key = keystore.get({\n            alg: alg,\n            use: 'sig'\n          });\n          if (key) {\n            _context.next = 15;\n            break;\n          }\n          throw new TypeError(\"no key found in client jwks to sign a client assertion with using alg \".concat(alg));\n        case 15:\n          return _context.abrupt(\"return\", jose.JWS.sign(payload, key, {\n            alg: alg,\n            typ: 'JWT',\n            kid: key.kid.startsWith('DONOTUSE.') ? undefined : key.kid\n          }));\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, this);\n  }));\n  return _clientAssertion.apply(this, arguments);\n}\nfunction authFor(_x3) {\n  return _authFor.apply(this, arguments);\n}\nfunction _authFor() {\n  _authFor = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(endpoint) {\n    var _ref2,\n      clientAssertionPayload,\n      authMethod,\n      timestamp,\n      mTLS,\n      audience,\n      assertion,\n      encoded,\n      value,\n      _args2 = arguments;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _ref2 = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : {}, clientAssertionPayload = _ref2.clientAssertionPayload;\n          authMethod = this[\"\".concat(endpoint, \"_endpoint_auth_method\")];\n          _context2.t0 = authMethod;\n          _context2.next = _context2.t0 === 'self_signed_tls_client_auth' ? 5 : _context2.t0 === 'tls_client_auth' ? 5 : _context2.t0 === 'none' ? 5 : _context2.t0 === 'client_secret_post' ? 6 : _context2.t0 === 'private_key_jwt' ? 9 : _context2.t0 === 'client_secret_jwt' ? 9 : 16;\n          break;\n        case 5:\n          return _context2.abrupt(\"return\", {\n            form: {\n              client_id: this.client_id\n            }\n          });\n        case 6:\n          if (this.client_secret) {\n            _context2.next = 8;\n            break;\n          }\n          throw new TypeError('client_secret_post client authentication method requires a client_secret');\n        case 8:\n          return _context2.abrupt(\"return\", {\n            form: {\n              client_id: this.client_id,\n              client_secret: this.client_secret\n            }\n          });\n        case 9:\n          timestamp = now();\n          mTLS = endpoint === 'token' && this.tls_client_certificate_bound_access_tokens;\n          audience = _toConsumableArray(new Set([this.issuer.issuer, this.issuer.token_endpoint, this.issuer[\"\".concat(endpoint, \"_endpoint\")], mTLS && this.issuer.mtls_endpoint_aliases ? this.issuer.mtls_endpoint_aliases.token_endpoint : undefined].filter(Boolean)));\n          _context2.next = 14;\n          return clientAssertion.call(this, endpoint, _objectSpread({\n            iat: timestamp,\n            exp: timestamp + 60,\n            jti: random(),\n            iss: this.client_id,\n            sub: this.client_id,\n            aud: audience\n          }, clientAssertionPayload));\n        case 14:\n          assertion = _context2.sent;\n          return _context2.abrupt(\"return\", {\n            form: {\n              client_id: this.client_id,\n              client_assertion: assertion,\n              client_assertion_type: 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer'\n            }\n          });\n        case 16:\n          if (this.client_secret) {\n            _context2.next = 18;\n            break;\n          }\n          throw new TypeError('client_secret_basic client authentication method requires a client_secret');\n        case 18:\n          encoded = \"\".concat(formUrlEncode(this.client_id), \":\").concat(formUrlEncode(this.client_secret));\n          value = Buffer.from(encoded).toString('base64');\n          return _context2.abrupt(\"return\", {\n            headers: {\n              Authorization: \"Basic \".concat(value)\n            }\n          });\n        case 21:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, this);\n  }));\n  return _authFor.apply(this, arguments);\n}\nfunction resolveResponseType() {\n  var _this$response_types = this.response_types,\n    length = _this$response_types.length,\n    value = _this$response_types[0];\n  if (length === 1) {\n    return value;\n  }\n  return undefined;\n}\nfunction resolveRedirectUri() {\n  var _ref = this.redirect_uris || [],\n    length = _ref.length,\n    value = _ref[0];\n  if (length === 1) {\n    return value;\n  }\n  return undefined;\n}\nfunction authenticatedPost(_x4, _x5) {\n  return _authenticatedPost.apply(this, arguments);\n}\nfunction _authenticatedPost() {\n  _authenticatedPost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(endpoint, opts) {\n    var _ref3,\n      clientAssertionPayload,\n      _ref3$endpointAuthMet,\n      endpointAuthMethod,\n      DPoP,\n      auth,\n      requestOpts,\n      mTLS,\n      targetUrl,\n      _i,\n      _Object$entries,\n      _Object$entries$_i,\n      key,\n      value,\n      _args3 = arguments;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          _ref3 = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : {}, clientAssertionPayload = _ref3.clientAssertionPayload, _ref3$endpointAuthMet = _ref3.endpointAuthMethod, endpointAuthMethod = _ref3$endpointAuthMet === void 0 ? endpoint : _ref3$endpointAuthMet, DPoP = _ref3.DPoP;\n          _context3.next = 3;\n          return authFor.call(this, endpointAuthMethod, {\n            clientAssertionPayload: clientAssertionPayload\n          });\n        case 3:\n          auth = _context3.sent;\n          requestOpts = merge(opts, auth);\n          mTLS = this[\"\".concat(endpointAuthMethod, \"_endpoint_auth_method\")].includes('tls_client_auth') || endpoint === 'token' && this.tls_client_certificate_bound_access_tokens;\n          if (mTLS && this.issuer.mtls_endpoint_aliases) {\n            targetUrl = this.issuer.mtls_endpoint_aliases[\"\".concat(endpoint, \"_endpoint\")];\n          }\n          targetUrl = targetUrl || this.issuer[\"\".concat(endpoint, \"_endpoint\")];\n          if ('form' in requestOpts) {\n            for (_i = 0, _Object$entries = Object.entries(requestOpts.form); _i < _Object$entries.length; _i++) {\n              _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2), key = _Object$entries$_i[0], value = _Object$entries$_i[1];\n              // eslint-disable-line no-restricted-syntax, max-len\n              if (typeof value === 'undefined') {\n                delete requestOpts.form[key];\n              }\n            }\n          }\n          return _context3.abrupt(\"return\", request.call(this, _objectSpread({}, requestOpts, {\n            method: 'POST',\n            url: targetUrl\n          }), {\n            mTLS: mTLS,\n            DPoP: DPoP\n          }));\n        case 10:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, this);\n  }));\n  return _authenticatedPost.apply(this, arguments);\n}\nmodule.exports = {\n  resolveResponseType: resolveResponseType,\n  resolveRedirectUri: resolveRedirectUri,\n  authFor: authFor,\n  authenticatedPost: authenticatedPost\n};","map":null,"metadata":{},"sourceType":"script"}