{"ast":null,"code":"'use strict';\n\nvar _require = require('stream'),\n  Transform = _require.Transform,\n  PassThrough = _require.PassThrough;\nvar zlib = require('zlib');\nvar mimicResponse = require('mimic-response');\nmodule.exports = function (response) {\n  var contentEncoding = (response.headers['content-encoding'] || '').toLowerCase();\n  if (!['gzip', 'deflate', 'br'].includes(contentEncoding)) {\n    return response;\n  }\n\n  // TODO: Remove this when targeting Node.js 12.\n  var isBrotli = contentEncoding === 'br';\n  if (isBrotli && typeof zlib.createBrotliDecompress !== 'function') {\n    response.destroy(new Error('Brotli is not supported on Node.js < 12'));\n    return response;\n  }\n  var isEmpty = true;\n  var checker = new Transform({\n    transform: function transform(data, _encoding, callback) {\n      isEmpty = false;\n      callback(null, data);\n    },\n    flush: function flush(callback) {\n      callback();\n    }\n  });\n  var finalStream = new PassThrough({\n    autoDestroy: false,\n    destroy: function destroy(error, callback) {\n      response.destroy();\n      callback(error);\n    }\n  });\n  var decompressStream = isBrotli ? zlib.createBrotliDecompress() : zlib.createUnzip();\n  decompressStream.once('error', function (error) {\n    if (isEmpty && !response.readable) {\n      finalStream.end();\n      return;\n    }\n    finalStream.destroy(error);\n  });\n  mimicResponse(response, finalStream);\n  response.pipe(checker).pipe(decompressStream).pipe(finalStream);\n  return finalStream;\n};","map":null,"metadata":{},"sourceType":"script"}