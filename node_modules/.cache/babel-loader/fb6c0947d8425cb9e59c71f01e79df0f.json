{"ast":null,"code":"var _objectSpread = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _classCallCheck = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _asyncToGenerator = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nvar url = require('url');\nvar urlJoin = require('url-join');\nvar _require = require('jose'),\n  JWT = _require.JWT;\nvar _require2 = require('openid-client'),\n  TokenSet = _require2.TokenSet;\nvar clone = require('clone');\nvar _require3 = require('assert'),\n  assert = _require3.strict;\nvar createError = require('http-errors');\nvar debug = require('./debug')('context');\nvar _require4 = require('./once'),\n  once = _require4.once;\nvar _require5 = require('./client'),\n  getClient = _require5.get;\nvar _require6 = require('../lib/hooks/getLoginState'),\n  encodeState = _require6.encodeState,\n  decodeState = _require6.decodeState;\nvar onLogin = require('./hooks/backchannelLogout/onLogIn');\nvar onLogoutToken = require('./hooks/backchannelLogout/onLogoutToken');\nvar _require7 = require('../middleware/attemptSilentLogin'),\n  cancelSilentLogin = _require7.cancelSilentLogin,\n  resumeSilentLogin = _require7.resumeSilentLogin;\nvar weakRef = require('./weakCache');\nvar _require8 = require('../lib/appSession'),\n  regenerateSessionStoreId = _require8.regenerateSessionStoreId,\n  replaceSession = _require8.replaceSession;\nfunction isExpired() {\n  return tokenSet.call(this).expired();\n}\nfunction refresh() {\n  return _refresh.apply(this, arguments);\n}\nfunction _refresh() {\n  _refresh = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n    var _ref,\n      tokenEndpointParams,\n      _weakRef9,\n      config,\n      req,\n      _yield$getClient6,\n      client,\n      oldTokenSet,\n      extras,\n      newTokenSet,\n      session,\n      cachedTokenSet,\n      _args6 = arguments;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          _ref = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {}, tokenEndpointParams = _ref.tokenEndpointParams;\n          _weakRef9 = weakRef(this), config = _weakRef9.config, req = _weakRef9.req;\n          _context6.next = 4;\n          return getClient(config);\n        case 4:\n          _yield$getClient6 = _context6.sent;\n          client = _yield$getClient6.client;\n          oldTokenSet = tokenSet.call(this);\n          if (config.tokenEndpointParams || tokenEndpointParams) {\n            extras = {\n              exchangeBody: _objectSpread({}, config.tokenEndpointParams, tokenEndpointParams)\n            };\n          }\n          _context6.next = 10;\n          return client.refresh(oldTokenSet, extras);\n        case 10:\n          newTokenSet = _context6.sent;\n          // Update the session\n          session = req[config.session.name];\n          Object.assign(session, {\n            id_token: newTokenSet.id_token,\n            access_token: newTokenSet.access_token,\n            // If no new refresh token assume the current refresh token is valid.\n            refresh_token: newTokenSet.refresh_token || oldTokenSet.refresh_token,\n            token_type: newTokenSet.token_type,\n            expires_at: newTokenSet.expires_at\n          });\n\n          // Delete the old token set\n          cachedTokenSet = weakRef(session);\n          delete cachedTokenSet.value;\n          return _context6.abrupt(\"return\", this.accessToken);\n        case 16:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, this);\n  }));\n  return _refresh.apply(this, arguments);\n}\nfunction tokenSet() {\n  var contextCache = weakRef(this);\n  var session = contextCache.req[contextCache.config.session.name];\n  if (!session || !('id_token' in session)) {\n    return undefined;\n  }\n  var cachedTokenSet = weakRef(session);\n  if (!('value' in cachedTokenSet)) {\n    var id_token = session.id_token,\n      access_token = session.access_token,\n      refresh_token = session.refresh_token,\n      token_type = session.token_type,\n      expires_at = session.expires_at;\n    cachedTokenSet.value = new TokenSet({\n      id_token: id_token,\n      access_token: access_token,\n      refresh_token: refresh_token,\n      token_type: token_type,\n      expires_at: expires_at\n    });\n  }\n  return cachedTokenSet.value;\n}\nvar RequestContext = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function RequestContext(config, req, res, next) {\n    _classCallCheck(this, RequestContext);\n    Object.assign(weakRef(this), {\n      config: config,\n      req: req,\n      res: res,\n      next: next\n    });\n  }\n  _createClass(RequestContext, [{\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      return !!this.idTokenClaims;\n    }\n  }, {\n    key: \"fetchUserInfo\",\n    value: function () {\n      var _fetchUserInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _weakRef, config, _yield$getClient, client;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _weakRef = weakRef(this), config = _weakRef.config;\n              _context.next = 3;\n              return getClient(config);\n            case 3:\n              _yield$getClient = _context.sent;\n              client = _yield$getClient.client;\n              return _context.abrupt(\"return\", client.userinfo(tokenSet.call(this)));\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function fetchUserInfo() {\n        return _fetchUserInfo.apply(this, arguments);\n      }\n      return fetchUserInfo;\n    }()\n  }, {\n    key: \"idToken\",\n    get: function get() {\n      try {\n        return tokenSet.call(this).id_token;\n      } catch (err) {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"refreshToken\",\n    get: function get() {\n      try {\n        return tokenSet.call(this).refresh_token;\n      } catch (err) {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"accessToken\",\n    get: function get() {\n      try {\n        var _tokenSet$call = tokenSet.call(this),\n          access_token = _tokenSet$call.access_token,\n          token_type = _tokenSet$call.token_type,\n          expires_in = _tokenSet$call.expires_in;\n        if (!access_token || !token_type || typeof expires_in !== 'number') {\n          return undefined;\n        }\n        return {\n          access_token: access_token,\n          token_type: token_type,\n          expires_in: expires_in,\n          isExpired: isExpired.bind(this),\n          refresh: refresh.bind(this)\n        };\n      } catch (err) {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"idTokenClaims\",\n    get: function get() {\n      try {\n        var _weakRef2 = weakRef(this),\n          session = _weakRef2.config.session,\n          req = _weakRef2.req; // The ID Token from Auth0's Refresh Grant doesn't contain a \"sid\"\n        // so we should check the backup sid we stored at login.\n        var sid = req[session.name].sid;\n        return _objectSpread({\n          sid: sid\n        }, clone(tokenSet.call(this).claims()));\n      } catch (err) {\n        return undefined;\n      }\n    }\n  }, {\n    key: \"user\",\n    get: function get() {\n      try {\n        var _weakRef3 = weakRef(this),\n          identityClaimFilter = _weakRef3.config.identityClaimFilter;\n        var idTokenClaims = this.idTokenClaims;\n        var user = clone(idTokenClaims);\n        identityClaimFilter.forEach(function (claim) {\n          delete user[claim];\n        });\n        return user;\n      } catch (err) {\n        return undefined;\n      }\n    }\n  }]);\n  return RequestContext;\n}();\nvar ResponseContext = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function ResponseContext(config, req, res, next, transient) {\n    _classCallCheck(this, ResponseContext);\n    Object.assign(weakRef(this), {\n      config: config,\n      req: req,\n      res: res,\n      next: next,\n      transient: transient\n    });\n  }\n  _createClass(ResponseContext, [{\n    key: \"getRedirectUri\",\n    value: function getRedirectUri() {\n      var _weakRef4 = weakRef(this),\n        config = _weakRef4.config;\n      if (config.routes.callback) {\n        return urlJoin(config.baseURL, config.routes.callback);\n      }\n    }\n  }, {\n    key: \"silentLogin\",\n    value: function silentLogin() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return this.login(_objectSpread({}, options, {\n        silent: true,\n        authorizationParams: _objectSpread({}, options.authorizationParams, {\n          prompt: 'none'\n        })\n      }));\n    }\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var options,\n          _weakRef5,\n          config,\n          req,\n          res,\n          next,\n          transient,\n          _yield$getClient2,\n          client,\n          returnTo,\n          stateValue,\n          validResponseTypes,\n          authVerification,\n          authParams,\n          usePKCE,\n          _yield$client$pushedA,\n          request_uri,\n          authorizationUrl,\n          _args2 = arguments;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n              _weakRef5 = weakRef(this), config = _weakRef5.config, req = _weakRef5.req, res = _weakRef5.res, next = _weakRef5.next, transient = _weakRef5.transient;\n              next = once(next);\n              _context2.prev = 3;\n              _context2.next = 6;\n              return getClient(config);\n            case 6:\n              _yield$getClient2 = _context2.sent;\n              client = _yield$getClient2.client;\n              // Set default returnTo value, allow passed-in options to override or use originalUrl on GET\n              returnTo = config.baseURL;\n              if (options.returnTo) {\n                returnTo = options.returnTo;\n                debug('req.oidc.login() called with returnTo: %s', returnTo);\n              } else if (req.method === 'GET' && req.originalUrl) {\n                // Collapse any leading slashes to a single slash to prevent Open Redirects\n                returnTo = req.originalUrl.replace(/^\\/+/, '/');\n                debug('req.oidc.login() without returnTo, using: %s', returnTo);\n              }\n              options = _objectSpread({\n                authorizationParams: {},\n                returnTo: returnTo\n              }, options);\n\n              // Ensure a redirect_uri, merge in configuration options, then passed-in options.\n              options.authorizationParams = _objectSpread({\n                redirect_uri: this.getRedirectUri()\n              }, config.authorizationParams, options.authorizationParams);\n              _context2.next = 14;\n              return config.getLoginState(req, options);\n            case 14:\n              stateValue = _context2.sent;\n              if (typeof stateValue !== 'object') {\n                next(new Error('Custom state value must be an object.'));\n              }\n              if (options.silent) {\n                stateValue.attemptingSilentLogin = true;\n              }\n              validResponseTypes = ['id_token', 'code id_token', 'code'];\n              assert(validResponseTypes.includes(options.authorizationParams.response_type), \"response_type should be one of \".concat(validResponseTypes.join(', ')));\n              assert(/\\bopenid\\b/.test(options.authorizationParams.scope), 'scope should contain \"openid\"');\n              authVerification = _objectSpread({\n                nonce: transient.generateNonce(),\n                state: encodeState(stateValue)\n              }, options.authorizationParams.max_age ? {\n                max_age: options.authorizationParams.max_age\n              } : undefined);\n              authParams = _objectSpread({}, options.authorizationParams, authVerification);\n              usePKCE = options.authorizationParams.response_type.includes('code');\n              if (usePKCE) {\n                debug('response_type includes code, the authorization request will use PKCE');\n                authVerification.code_verifier = transient.generateCodeVerifier();\n                authParams.code_challenge_method = 'S256';\n                authParams.code_challenge = transient.calculateCodeChallenge(authVerification.code_verifier);\n              }\n              if (!config.pushedAuthorizationRequests) {\n                _context2.next = 30;\n                break;\n              }\n              _context2.next = 27;\n              return client.pushedAuthorizationRequest(authParams);\n            case 27:\n              _yield$client$pushedA = _context2.sent;\n              request_uri = _yield$client$pushedA.request_uri;\n              authParams = {\n                request_uri: request_uri\n              };\n            case 30:\n              transient.store(config.transactionCookie.name, req, res, {\n                sameSite: options.authorizationParams.response_mode === 'form_post' ? 'None' : config.transactionCookie.sameSite,\n                value: JSON.stringify(authVerification)\n              });\n              authorizationUrl = client.authorizationUrl(authParams);\n              debug('redirecting to %s', authorizationUrl);\n              res.redirect(authorizationUrl);\n              _context2.next = 39;\n              break;\n            case 36:\n              _context2.prev = 36;\n              _context2.t0 = _context2[\"catch\"](3);\n              next(_context2.t0);\n            case 39:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[3, 36]]);\n      }));\n      function login() {\n        return _login.apply(this, arguments);\n      }\n      return login;\n    }()\n  }, {\n    key: \"logout\",\n    value: function () {\n      var _logout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var params,\n          _weakRef6,\n          config,\n          req,\n          res,\n          next,\n          returnURL,\n          _yield$getClient3,\n          client,\n          id_token_hint,\n          _args3 = arguments;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              params = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : {};\n              _weakRef6 = weakRef(this), config = _weakRef6.config, req = _weakRef6.req, res = _weakRef6.res, next = _weakRef6.next;\n              next = once(next);\n              returnURL = params.returnTo || config.routes.postLogoutRedirect;\n              debug('req.oidc.logout() with return url: %s', returnURL);\n              _context3.prev = 5;\n              _context3.next = 8;\n              return getClient(config);\n            case 8:\n              _yield$getClient3 = _context3.sent;\n              client = _yield$getClient3.client;\n              if (url.parse(returnURL).host === null) {\n                returnURL = urlJoin(config.baseURL, returnURL);\n              }\n              cancelSilentLogin(req, res);\n              if (req.oidc.isAuthenticated()) {\n                _context3.next = 15;\n                break;\n              }\n              debug('end-user already logged out, redirecting to %s', returnURL);\n              return _context3.abrupt(\"return\", res.redirect(returnURL));\n            case 15:\n              id_token_hint = req.oidc.idToken;\n              req[config.session.name] = undefined;\n              if (config.idpLogout) {\n                _context3.next = 20;\n                break;\n              }\n              debug('performing a local only logout, redirecting to %s', returnURL);\n              return _context3.abrupt(\"return\", res.redirect(returnURL));\n            case 20:\n              returnURL = client.endSessionUrl(_objectSpread({}, config.logoutParams, params.logoutParams, {\n                post_logout_redirect_uri: returnURL,\n                id_token_hint: id_token_hint\n              }));\n              _context3.next = 26;\n              break;\n            case 23:\n              _context3.prev = 23;\n              _context3.t0 = _context3[\"catch\"](5);\n              return _context3.abrupt(\"return\", next(_context3.t0));\n            case 26:\n              debug('logging out of identity provider, redirecting to %s', returnURL);\n              res.redirect(returnURL);\n            case 28:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[5, 23]]);\n      }));\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n      return logout;\n    }()\n  }, {\n    key: \"callback\",\n    value: function () {\n      var _callback = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var options,\n          _weakRef7,\n          config,\n          req,\n          res,\n          transient,\n          next,\n          _yield$getClient4,\n          client,\n          redirectUri,\n          _tokenSet,\n          callbackParams,\n          authVerification,\n          checks,\n          session,\n          claims,\n          _args4 = arguments;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              options = _args4.length > 0 && _args4[0] !== undefined ? _args4[0] : {};\n              _weakRef7 = weakRef(this), config = _weakRef7.config, req = _weakRef7.req, res = _weakRef7.res, transient = _weakRef7.transient, next = _weakRef7.next;\n              next = once(next);\n              _context4.prev = 3;\n              _context4.next = 6;\n              return getClient(config);\n            case 6:\n              _yield$getClient4 = _context4.sent;\n              client = _yield$getClient4.client;\n              redirectUri = options.redirectUri || this.getRedirectUri();\n              _context4.prev = 9;\n              callbackParams = client.callbackParams(req);\n              authVerification = transient.getOnce(config.transactionCookie.name, req, res);\n              checks = authVerification ? JSON.parse(authVerification) : {};\n              req.openidState = decodeState(checks.state);\n              _context4.next = 16;\n              return client.callback(redirectUri, callbackParams, checks, {\n                exchangeBody: _objectSpread({}, config && config.tokenEndpointParams, options.tokenEndpointParams)\n              });\n            case 16:\n              _tokenSet = _context4.sent;\n              _context4.next = 22;\n              break;\n            case 19:\n              _context4.prev = 19;\n              _context4.t0 = _context4[\"catch\"](9);\n              throw createError(400, _context4.t0.message, {\n                error: _context4.t0.error,\n                error_description: _context4.t0.error_description\n              });\n            case 22:\n              session = Object.assign({}, _tokenSet); // Remove non-enumerable methods from the TokenSet\n              claims = _tokenSet.claims(); // Must store the `sid` separately as the ID Token gets overridden by\n              // ID Token from the Refresh Grant which may not contain a sid (In Auth0 currently).\n              session.sid = claims.sid;\n              if (!config.afterCallback) {\n                _context4.next = 29;\n                break;\n              }\n              _context4.next = 28;\n              return config.afterCallback(req, res, session, req.openidState);\n            case 28:\n              session = _context4.sent;\n            case 29:\n              if (!req.oidc.isAuthenticated()) {\n                _context4.next = 39;\n                break;\n              }\n              if (!(req.oidc.user.sub === claims.sub)) {\n                _context4.next = 34;\n                break;\n              }\n              // If it's the same user logging in again, just update the existing session.\n              Object.assign(req[config.session.name], session);\n              _context4.next = 37;\n              break;\n            case 34:\n              // If it's a different user, replace the session to remove any custom user\n              // properties on the session\n              replaceSession(req, session, config);\n              // And regenerate the session id so the previous user wont know the new user's session id\n              _context4.next = 37;\n              return regenerateSessionStoreId(req, config);\n            case 37:\n              _context4.next = 42;\n              break;\n            case 39:\n              // If a new user is replacing an anonymous session, update the existing session to keep\n              // any anonymous session state (eg. checkout basket)\n              Object.assign(req[config.session.name], session);\n              // But update the session store id so a previous anonymous user wont know the new user's session id\n              _context4.next = 42;\n              return regenerateSessionStoreId(req, config);\n            case 42:\n              resumeSilentLogin(req, res);\n              if (!(req.oidc.isAuthenticated() && config.backchannelLogout && config.backchannelLogout.onLogin !== false)) {\n                _context4.next = 46;\n                break;\n              }\n              _context4.next = 46;\n              return (config.backchannelLogout.onLogin || onLogin)(req, config);\n            case 46:\n              _context4.next = 52;\n              break;\n            case 48:\n              _context4.prev = 48;\n              _context4.t1 = _context4[\"catch\"](3);\n              if (!(!req.openidState || !req.openidState.attemptingSilentLogin)) {\n                _context4.next = 52;\n                break;\n              }\n              return _context4.abrupt(\"return\", next(_context4.t1));\n            case 52:\n              res.redirect(req.openidState.returnTo || config.baseURL);\n            case 53:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[3, 48], [9, 19]]);\n      }));\n      function callback() {\n        return _callback.apply(this, arguments);\n      }\n      return callback;\n    }()\n  }, {\n    key: \"backchannelLogout\",\n    value: function () {\n      var _backchannelLogout = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var _weakRef8, config, req, res, logoutToken, onToken, token, _yield$getClient5, issuer, keyInput;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _weakRef8 = weakRef(this), config = _weakRef8.config, req = _weakRef8.req, res = _weakRef8.res;\n              res.setHeader('cache-control', 'no-store');\n              logoutToken = req.body.logout_token;\n              if (logoutToken) {\n                _context5.next = 6;\n                break;\n              }\n              res.status(400).json({\n                error: 'invalid_request',\n                error_description: 'Missing logout_token'\n              });\n              return _context5.abrupt(\"return\");\n            case 6:\n              onToken = config.backchannelLogout && config.backchannelLogout.onLogoutToken || onLogoutToken;\n              _context5.prev = 7;\n              _context5.next = 10;\n              return getClient(config);\n            case 10:\n              _yield$getClient5 = _context5.sent;\n              issuer = _yield$getClient5.issuer;\n              _context5.next = 14;\n              return issuer.keystore();\n            case 14:\n              keyInput = _context5.sent;\n              _context5.next = 17;\n              return JWT.LogoutToken.verify(logoutToken, keyInput, {\n                issuer: issuer.issuer,\n                audience: config.clientID,\n                algorithms: [config.idTokenSigningAlg]\n              });\n            case 17:\n              token = _context5.sent;\n              _context5.next = 24;\n              break;\n            case 20:\n              _context5.prev = 20;\n              _context5.t0 = _context5[\"catch\"](7);\n              res.status(400).json({\n                error: 'invalid_request',\n                error_description: _context5.t0.message\n              });\n              return _context5.abrupt(\"return\");\n            case 24:\n              _context5.prev = 24;\n              _context5.next = 27;\n              return onToken(token, config);\n            case 27:\n              _context5.next = 34;\n              break;\n            case 29:\n              _context5.prev = 29;\n              _context5.t1 = _context5[\"catch\"](24);\n              debug('req.oidc.backchannelLogout() failed with: %s', _context5.t1.message);\n              res.status(400).json({\n                error: 'application_error',\n                error_description: \"The application failed to invalidate the session.\"\n              });\n              return _context5.abrupt(\"return\");\n            case 34:\n              res.status(204).send();\n            case 35:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[7, 20], [24, 29]]);\n      }));\n      function backchannelLogout() {\n        return _backchannelLogout.apply(this, arguments);\n      }\n      return backchannelLogout;\n    }()\n  }, {\n    key: \"errorOnRequiredAuth\",\n    get: function get() {\n      return weakRef(this).config.errorOnRequiredAuth;\n    }\n  }]);\n  return ResponseContext;\n}();\nmodule.exports = {\n  RequestContext: RequestContext,\n  ResponseContext: ResponseContext\n};","map":null,"metadata":{},"sourceType":"script"}