{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// When attaching listeners, it's very easy to forget about them.\n// Especially if you do error handling and set timeouts.\n// So instead of checking if it's proper to throw an error on every timeout ever,\n// use this simple tool which will remove all listeners you have attached.\nexports.default = function () {\n  var handlers = [];\n  return {\n    once: function once(origin, event, fn) {\n      origin.once(event, fn);\n      handlers.push({\n        origin: origin,\n        event: event,\n        fn: fn\n      });\n    },\n    unhandleAll: function unhandleAll() {\n      for (var _i = 0, _handlers = handlers; _i < _handlers.length; _i++) {\n        var handler = _handlers[_i];\n        var origin = handler.origin,\n          event = handler.event,\n          fn = handler.fn;\n        origin.removeListener(event, fn);\n      }\n      handlers.length = 0;\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"script"}