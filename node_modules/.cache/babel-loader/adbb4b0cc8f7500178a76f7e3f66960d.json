{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _objectSpread = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _asyncToGenerator = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nvar _awaitAsyncGenerator = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\nvar _wrapAsyncGenerator = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _asyncIterator(r) { var n, t, o, e = 2; for (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) { if (t && null != (n = r[t])) return n.call(r); if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r)); t = \"@@asyncIterator\", o = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\nfunction AsyncFromSyncIterator(r) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var n = r.done; return Promise.resolve(r.value).then(function (r) { return { value: r, done: n }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) { this.s = r, this.n = r.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(r) { var n = this.s.return; return void 0 === n ? Promise.resolve({ value: r, done: !0 }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments)); }, throw: function _throw(r) { var n = this.s.return; return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(r); }\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultHandler = void 0;\nvar is_1 = require(\"@sindresorhus/is\");\nvar as_promise_1 = require(\"./as-promise\");\nvar create_rejection_1 = require(\"./as-promise/create-rejection\");\nvar core_1 = require(\"./core\");\nvar deep_freeze_1 = require(\"./utils/deep-freeze\");\nvar errors = {\n  RequestError: as_promise_1.RequestError,\n  CacheError: as_promise_1.CacheError,\n  ReadError: as_promise_1.ReadError,\n  HTTPError: as_promise_1.HTTPError,\n  MaxRedirectsError: as_promise_1.MaxRedirectsError,\n  TimeoutError: as_promise_1.TimeoutError,\n  ParseError: as_promise_1.ParseError,\n  CancelError: as_promise_1.CancelError,\n  UnsupportedProtocolError: as_promise_1.UnsupportedProtocolError,\n  UploadError: as_promise_1.UploadError\n};\n// The `delay` package weighs 10KB (!)\nvar delay = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(ms) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", new Promise(function (resolve) {\n            setTimeout(resolve, ms);\n          }));\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function delay(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nvar normalizeArguments = core_1.default.normalizeArguments;\nvar mergeOptions = function mergeOptions() {\n  var mergedOptions;\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n  for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n    var source = _sources[_i];\n    mergedOptions = normalizeArguments(undefined, source, mergedOptions);\n  }\n  return mergedOptions;\n};\nvar getPromiseOrStream = function getPromiseOrStream(options) {\n  return options.isStream ? new core_1.default(undefined, options) : as_promise_1.default(options);\n};\nvar isGotInstance = function isGotInstance(value) {\n  return 'defaults' in value && 'options' in value.defaults;\n};\nvar aliases = ['get', 'post', 'put', 'patch', 'head', 'delete'];\nexports.defaultHandler = function (options, next) {\n  return next(options);\n};\nvar callInitHooks = function callInitHooks(hooks, options) {\n  if (hooks) {\n    var _iterator2 = _createForOfIteratorHelper(hooks),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var hook = _step2.value;\n        hook(options);\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  }\n};\nvar create = function create(defaults) {\n  // Proxy properties from next handlers\n  defaults._rawHandlers = defaults.handlers;\n  defaults.handlers = defaults.handlers.map(function (fn) {\n    return function (options, next) {\n      // This will be assigned by assigning result\n      var root;\n      var result = fn(options, function (newOptions) {\n        root = next(newOptions);\n        return root;\n      });\n      if (result !== root && !options.isStream && root) {\n        var typedResult = result;\n        var promiseThen = typedResult.then,\n          promiseCatch = typedResult.catch,\n          promiseFianlly = typedResult.finally;\n        Object.setPrototypeOf(typedResult, Object.getPrototypeOf(root));\n        Object.defineProperties(typedResult, Object.getOwnPropertyDescriptors(root));\n        // These should point to the new promise\n        // eslint-disable-next-line promise/prefer-await-to-then\n        typedResult.then = promiseThen;\n        typedResult.catch = promiseCatch;\n        typedResult.finally = promiseFianlly;\n      }\n      return result;\n    };\n  });\n  // Got interface\n  var got = function got(url) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _defaults = arguments.length > 2 ? arguments[2] : undefined;\n    var _a, _b;\n    var iteration = 0;\n    var iterateHandlers = function iterateHandlers(newOptions) {\n      return defaults.handlers[iteration++](newOptions, iteration === defaults.handlers.length ? getPromiseOrStream : iterateHandlers);\n    };\n    // TODO: Remove this in Got 12.\n    if (is_1.default.plainObject(url)) {\n      var mergedOptions = _objectSpread({}, url, options);\n      core_1.setNonEnumerableProperties([url, options], mergedOptions);\n      options = mergedOptions;\n      url = undefined;\n    }\n    try {\n      // Call `init` hooks\n      var initHookError;\n      try {\n        callInitHooks(defaults.options.hooks.init, options);\n        callInitHooks((_a = options.hooks) === null || _a === void 0 ? void 0 : _a.init, options);\n      } catch (error) {\n        initHookError = error;\n      }\n      // Normalize options & call handlers\n      var normalizedOptions = normalizeArguments(url, options, _defaults !== null && _defaults !== void 0 ? _defaults : defaults.options);\n      normalizedOptions[core_1.kIsNormalizedAlready] = true;\n      if (initHookError) {\n        throw new as_promise_1.RequestError(initHookError.message, initHookError, normalizedOptions);\n      }\n      return iterateHandlers(normalizedOptions);\n    } catch (error) {\n      if (options.isStream) {\n        throw error;\n      } else {\n        return create_rejection_1.default(error, defaults.options.hooks.beforeError, (_b = options.hooks) === null || _b === void 0 ? void 0 : _b.beforeError);\n      }\n    }\n  };\n  got.extend = function () {\n    var optionsArray = [defaults.options];\n    var handlers = _toConsumableArray(defaults._rawHandlers);\n    var isMutableDefaults;\n    for (var _len2 = arguments.length, instancesOrOptions = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      instancesOrOptions[_key2] = arguments[_key2];\n    }\n    for (var _i2 = 0, _instancesOrOptions = instancesOrOptions; _i2 < _instancesOrOptions.length; _i2++) {\n      var value = _instancesOrOptions[_i2];\n      if (isGotInstance(value)) {\n        var _handlers;\n        optionsArray.push(value.defaults.options);\n        (_handlers = handlers).push.apply(_handlers, _toConsumableArray(value.defaults._rawHandlers));\n        isMutableDefaults = value.defaults.mutableDefaults;\n      } else {\n        optionsArray.push(value);\n        if ('handlers' in value) {\n          var _handlers2;\n          (_handlers2 = handlers).push.apply(_handlers2, _toConsumableArray(value.handlers));\n        }\n        isMutableDefaults = value.mutableDefaults;\n      }\n    }\n    handlers = handlers.filter(function (handler) {\n      return handler !== exports.defaultHandler;\n    });\n    if (handlers.length === 0) {\n      handlers.push(exports.defaultHandler);\n    }\n    return create({\n      options: mergeOptions.apply(void 0, optionsArray),\n      handlers: handlers,\n      mutableDefaults: Boolean(isMutableDefaults)\n    });\n  };\n  // Pagination\n  var paginateEach = /*#__PURE__*/function () {\n    var _ref = _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(url, options) {\n      var normalizedOptions, pagination, all, countLimit, numberOfRequests, result, parsed, current, _iterator3, _step3, item, optionsToMerge;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            // TODO: Remove this `@ts-expect-error` when upgrading to TypeScript 4.\n            // Error: Argument of type 'Merge<Options, PaginationOptions<T, R>> | undefined' is not assignable to parameter of type 'Options | undefined'.\n            // @ts-expect-error\n            normalizedOptions = normalizeArguments(url, options, defaults.options);\n            normalizedOptions.resolveBodyOnly = false;\n            pagination = normalizedOptions.pagination;\n            if (is_1.default.object(pagination)) {\n              _context2.next = 5;\n              break;\n            }\n            throw new TypeError('`options.pagination` must be implemented');\n          case 5:\n            all = [];\n            countLimit = pagination.countLimit;\n            numberOfRequests = 0;\n          case 8:\n            if (!(numberOfRequests < pagination.requestLimit)) {\n              _context2.next = 50;\n              break;\n            }\n            if (!(numberOfRequests !== 0)) {\n              _context2.next = 12;\n              break;\n            }\n            _context2.next = 12;\n            return _awaitAsyncGenerator(delay(pagination.backoff));\n          case 12:\n            _context2.next = 14;\n            return _awaitAsyncGenerator(got(undefined, undefined, normalizedOptions));\n          case 14:\n            result = _context2.sent;\n            _context2.next = 17;\n            return _awaitAsyncGenerator(pagination.transform(result));\n          case 17:\n            parsed = _context2.sent;\n            current = [];\n            _iterator3 = _createForOfIteratorHelper(parsed);\n            _context2.prev = 20;\n            _iterator3.s();\n          case 22:\n            if ((_step3 = _iterator3.n()).done) {\n              _context2.next = 35;\n              break;\n            }\n            item = _step3.value;\n            if (!pagination.filter(item, all, current)) {\n              _context2.next = 33;\n              break;\n            }\n            if (pagination.shouldContinue(item, all, current)) {\n              _context2.next = 27;\n              break;\n            }\n            return _context2.abrupt(\"return\");\n          case 27:\n            _context2.next = 29;\n            return item;\n          case 29:\n            if (pagination.stackAllItems) {\n              all.push(item);\n            }\n            current.push(item);\n            if (!(--countLimit <= 0)) {\n              _context2.next = 33;\n              break;\n            }\n            return _context2.abrupt(\"return\");\n          case 33:\n            _context2.next = 22;\n            break;\n          case 35:\n            _context2.next = 40;\n            break;\n          case 37:\n            _context2.prev = 37;\n            _context2.t0 = _context2[\"catch\"](20);\n            _iterator3.e(_context2.t0);\n          case 40:\n            _context2.prev = 40;\n            _iterator3.f();\n            return _context2.finish(40);\n          case 43:\n            optionsToMerge = pagination.paginate(result, all, current);\n            if (!(optionsToMerge === false)) {\n              _context2.next = 46;\n              break;\n            }\n            return _context2.abrupt(\"return\");\n          case 46:\n            if (optionsToMerge === result.request.options) {\n              normalizedOptions = result.request.options;\n            } else if (optionsToMerge !== undefined) {\n              normalizedOptions = normalizeArguments(undefined, optionsToMerge, normalizedOptions);\n            }\n            numberOfRequests++;\n            _context2.next = 8;\n            break;\n          case 50:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[20, 37, 40, 43]]);\n    }));\n    return function paginateEach(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  got.paginate = paginateEach;\n  got.paginate.all = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(url, options) {\n      var results, _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, item;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            results = [];\n            _iteratorAbruptCompletion = false;\n            _didIteratorError = false;\n            _context3.prev = 3;\n            _iterator = _asyncIterator(paginateEach(url, options));\n          case 5:\n            _context3.next = 7;\n            return _iterator.next();\n          case 7:\n            if (!(_iteratorAbruptCompletion = !(_step = _context3.sent).done)) {\n              _context3.next = 13;\n              break;\n            }\n            item = _step.value;\n            results.push(item);\n          case 10:\n            _iteratorAbruptCompletion = false;\n            _context3.next = 5;\n            break;\n          case 13:\n            _context3.next = 19;\n            break;\n          case 15:\n            _context3.prev = 15;\n            _context3.t0 = _context3[\"catch\"](3);\n            _didIteratorError = true;\n            _iteratorError = _context3.t0;\n          case 19:\n            _context3.prev = 19;\n            _context3.prev = 20;\n            if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n              _context3.next = 24;\n              break;\n            }\n            _context3.next = 24;\n            return _iterator.return();\n          case 24:\n            _context3.prev = 24;\n            if (!_didIteratorError) {\n              _context3.next = 27;\n              break;\n            }\n            throw _iteratorError;\n          case 27:\n            return _context3.finish(24);\n          case 28:\n            return _context3.finish(19);\n          case 29:\n            return _context3.abrupt(\"return\", results);\n          case 30:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[3, 15, 19, 29], [20,, 24, 28]]);\n    }));\n    return function (_x4, _x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  // For those who like very descriptive names\n  got.paginate.each = paginateEach;\n  // Stream API\n  got.stream = function (url, options) {\n    return got(url, _objectSpread({}, options, {\n      isStream: true\n    }));\n  };\n  // Shortcuts\n  var _loop = function _loop() {\n    var method = _aliases[_i3];\n    got[method] = function (url, options) {\n      return got(url, _objectSpread({}, options, {\n        method: method\n      }));\n    };\n    got.stream[method] = function (url, options) {\n      return got(url, _objectSpread({}, options, {\n        method: method,\n        isStream: true\n      }));\n    };\n  };\n  for (var _i3 = 0, _aliases = aliases; _i3 < _aliases.length; _i3++) {\n    _loop();\n  }\n  Object.assign(got, errors);\n  Object.defineProperty(got, 'defaults', {\n    value: defaults.mutableDefaults ? defaults : deep_freeze_1.default(defaults),\n    writable: defaults.mutableDefaults,\n    configurable: defaults.mutableDefaults,\n    enumerable: true\n  });\n  got.mergeOptions = mergeOptions;\n  return got;\n};\nexports.default = create;\n__exportStar(require(\"./types\"), exports);","map":null,"metadata":{},"sourceType":"script"}