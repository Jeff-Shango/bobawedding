{"ast":null,"code":"\"use strict\";\n\nimport _objectSpread from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MongoClient = exports.ServerApiVersion = void 0;\nvar fs_1 = require(\"fs\");\nvar util_1 = require(\"util\");\nvar bson_1 = require(\"./bson\");\nvar change_stream_1 = require(\"./change_stream\");\nvar mongo_credentials_1 = require(\"./cmap/auth/mongo_credentials\");\nvar providers_1 = require(\"./cmap/auth/providers\");\nvar connection_string_1 = require(\"./connection_string\");\nvar constants_1 = require(\"./constants\");\nvar db_1 = require(\"./db\");\nvar error_1 = require(\"./error\");\nvar mongo_logger_1 = require(\"./mongo_logger\");\nvar mongo_types_1 = require(\"./mongo_types\");\nvar execute_operation_1 = require(\"./operations/execute_operation\");\nvar run_command_1 = require(\"./operations/run_command\");\nvar read_preference_1 = require(\"./read_preference\");\nvar server_selection_1 = require(\"./sdam/server_selection\");\nvar topology_1 = require(\"./sdam/topology\");\nvar sessions_1 = require(\"./sessions\");\nvar utils_1 = require(\"./utils\");\n/** @public */\nexports.ServerApiVersion = Object.freeze({\n  v1: '1'\n});\n/** @internal */\nvar kOptions = Symbol('options');\n/**\n * The **MongoClient** class is a class that allows for making Connections to MongoDB.\n * @public\n *\n * @remarks\n * The programmatically provided options take precedence over the URI options.\n *\n * @example\n * ```ts\n * import { MongoClient } from 'mongodb';\n *\n * // Enable command monitoring for debugging\n * const client = new MongoClient('mongodb://localhost:27017', { monitorCommands: true });\n *\n * client.on('commandStarted', started => console.log(started));\n * client.db().collection('pets');\n * await client.insertOne({ name: 'spot', kind: 'dog' });\n * ```\n */\nvar MongoClient = /*#__PURE__*/function (_mongo_types_1$TypedE) {\n  _inherits(MongoClient, _mongo_types_1$TypedE);\n  function MongoClient(url, options) {\n    var _this;\n    _classCallCheck(this, MongoClient);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MongoClient).call(this));\n    _this[kOptions] = (0, connection_string_1.parseOptions)(url, _assertThisInitialized(_assertThisInitialized(_this)), options);\n    _this.mongoLogger = new mongo_logger_1.MongoLogger(_this[kOptions].mongoLoggerOptions);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    var client = _assertThisInitialized(_assertThisInitialized(_this));\n    // The internal state\n    _this.s = {\n      url: url,\n      bsonOptions: (0, bson_1.resolveBSONOptions)(_this[kOptions]),\n      namespace: (0, utils_1.ns)('admin'),\n      hasBeenClosed: false,\n      sessionPool: new sessions_1.ServerSessionPool(_assertThisInitialized(_assertThisInitialized(_this))),\n      activeSessions: new Set(),\n      get options() {\n        return client[kOptions];\n      },\n      get readConcern() {\n        return client[kOptions].readConcern;\n      },\n      get writeConcern() {\n        return client[kOptions].writeConcern;\n      },\n      get readPreference() {\n        return client[kOptions].readPreference;\n      },\n      get isMongoClient() {\n        return true;\n      }\n    };\n    return _this;\n  }\n  /** @see MongoOptions */\n  _createClass(MongoClient, [{\n    key: \"connect\",\n    /**\n     * Connect to MongoDB using a url\n     *\n     * @see docs.mongodb.org/manual/reference/connection-string/\n     */\n    value: function () {\n      var _connect2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!this.connectionLock) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\", this.connectionLock);\n            case 2:\n              _context.prev = 2;\n              this.connectionLock = this._connect();\n              _context.next = 6;\n              return this.connectionLock;\n            case 6:\n              _context.prev = 6;\n              // release\n              this.connectionLock = undefined;\n              return _context.finish(6);\n            case 9:\n              return _context.abrupt(\"return\", this);\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[2,, 6, 9]]);\n      }));\n      function connect() {\n        return _connect2.apply(this, arguments);\n      }\n      return connect;\n    }()\n    /**\n     * Create a topology to open the connection, must be locked to avoid topology leaks in concurrency scenario.\n     * Locking is enforced by the connect method.\n     *\n     * @internal\n     */\n  }, {\n    key: \"_connect\",\n    value: function () {\n      var _connect3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _this2 = this;\n        var options, contents, hosts, _iterator, _step, _ref, _ref2, index, host, allowedHosts, isServiceAuth, _iterator2, _step2, _host, _iterator3, _step3, _loop, topologyConnect;\n        return _regeneratorRuntime().wrap(function _callee3$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(this.topology && this.topology.isConnected())) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\", this);\n            case 2:\n              options = this[kOptions];\n              if (!options.tls) {\n                _context4.next = 21;\n                break;\n              }\n              if (!(typeof options.tlsCAFile === 'string')) {\n                _context4.next = 9;\n                break;\n              }\n              _context4.t0 = options.ca;\n              _context4.next = 8;\n              return fs_1.promises.readFile(options.tlsCAFile);\n            case 8:\n              options.ca = _context4.t0 ??= _context4.sent;\n            case 9:\n              if (!(typeof options.tlsCRLFile === 'string')) {\n                _context4.next = 14;\n                break;\n              }\n              _context4.t1 = options.crl;\n              _context4.next = 13;\n              return fs_1.promises.readFile(options.tlsCRLFile);\n            case 13:\n              options.crl = _context4.t1 ??= _context4.sent;\n            case 14:\n              if (!(typeof options.tlsCertificateKeyFile === 'string')) {\n                _context4.next = 21;\n                break;\n              }\n              if (!(!options.key || !options.cert)) {\n                _context4.next = 21;\n                break;\n              }\n              _context4.next = 18;\n              return fs_1.promises.readFile(options.tlsCertificateKeyFile);\n            case 18:\n              contents = _context4.sent;\n              options.key ??= contents;\n              options.cert ??= contents;\n            case 21:\n              if (!(typeof options.srvHost === 'string')) {\n                _context4.next = 27;\n                break;\n              }\n              _context4.next = 24;\n              return (0, connection_string_1.resolveSRVRecord)(options);\n            case 24:\n              hosts = _context4.sent;\n              _iterator = _createForOfIteratorHelper(hosts.entries());\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  _ref = _step.value;\n                  _ref2 = _slicedToArray(_ref, 2);\n                  index = _ref2[0];\n                  host = _ref2[1];\n                  options.hosts[index] = host;\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n            case 27:\n              if (!(options.credentials?.mechanism === providers_1.AuthMechanism.MONGODB_OIDC)) {\n                _context4.next = 48;\n                break;\n              }\n              allowedHosts = options.credentials?.mechanismProperties?.ALLOWED_HOSTS || mongo_credentials_1.DEFAULT_ALLOWED_HOSTS;\n              isServiceAuth = !!options.credentials?.mechanismProperties?.PROVIDER_NAME;\n              if (isServiceAuth) {\n                _context4.next = 48;\n                break;\n              }\n              _iterator2 = _createForOfIteratorHelper(options.hosts);\n              _context4.prev = 32;\n              _iterator2.s();\n            case 34:\n              if ((_step2 = _iterator2.n()).done) {\n                _context4.next = 40;\n                break;\n              }\n              _host = _step2.value;\n              if ((0, utils_1.hostMatchesWildcards)(_host.toHostPort().host, allowedHosts)) {\n                _context4.next = 38;\n                break;\n              }\n              throw new error_1.MongoInvalidArgumentError(\"Host '\".concat(_host, \"' is not valid for OIDC authentication with ALLOWED_HOSTS of '\").concat(allowedHosts.join(','), \"'\"));\n            case 38:\n              _context4.next = 34;\n              break;\n            case 40:\n              _context4.next = 45;\n              break;\n            case 42:\n              _context4.prev = 42;\n              _context4.t2 = _context4[\"catch\"](32);\n              _iterator2.e(_context4.t2);\n            case 45:\n              _context4.prev = 45;\n              _iterator2.f();\n              return _context4.finish(45);\n            case 48:\n              this.topology = new topology_1.Topology(this, options.hosts, options);\n              // Events can be emitted before initialization is complete so we have to\n              // save the reference to the topology on the client ASAP if the event handlers need to access it\n              this.topology.once(topology_1.Topology.OPEN, function () {\n                return _this2.emit('open', _this2);\n              });\n              _iterator3 = _createForOfIteratorHelper(constants_1.MONGO_CLIENT_EVENTS);\n              _context4.prev = 51;\n              _loop = /*#__PURE__*/_regeneratorRuntime().mark(function _loop() {\n                var event;\n                return _regeneratorRuntime().wrap(function _loop$(_context3) {\n                  while (1) switch (_context3.prev = _context3.next) {\n                    case 0:\n                      event = _step3.value;\n                      _this2.topology.on(event, function () {\n                        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n                          args[_key] = arguments[_key];\n                        }\n                        return _this2.emit.apply(_this2, [event].concat(args));\n                      });\n                    case 2:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }, _loop);\n              });\n              _iterator3.s();\n            case 54:\n              if ((_step3 = _iterator3.n()).done) {\n                _context4.next = 58;\n                break;\n              }\n              return _context4.delegateYield(_loop(), \"t3\", 56);\n            case 56:\n              _context4.next = 54;\n              break;\n            case 58:\n              _context4.next = 63;\n              break;\n            case 60:\n              _context4.prev = 60;\n              _context4.t4 = _context4[\"catch\"](51);\n              _iterator3.e(_context4.t4);\n            case 63:\n              _context4.prev = 63;\n              _iterator3.f();\n              return _context4.finish(63);\n            case 66:\n              topologyConnect = /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                  return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                    while (1) switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.prev = 0;\n                        _context2.next = 3;\n                        return (0, util_1.promisify)(function (callback) {\n                          return _this2.topology?.connect(options, callback);\n                        })();\n                      case 3:\n                        _context2.next = 9;\n                        break;\n                      case 5:\n                        _context2.prev = 5;\n                        _context2.t0 = _context2[\"catch\"](0);\n                        _this2.topology?.close({\n                          force: true\n                        });\n                        throw _context2.t0;\n                      case 9:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }, _callee2, null, [[0, 5]]);\n                }));\n                return function topologyConnect() {\n                  return _ref3.apply(this, arguments);\n                };\n              }();\n              if (!this.autoEncrypter) {\n                _context4.next = 76;\n                break;\n              }\n              _context4.next = 70;\n              return this.autoEncrypter?.init();\n            case 70:\n              _context4.next = 72;\n              return topologyConnect();\n            case 72:\n              _context4.next = 74;\n              return options.encrypter.connectInternalClient();\n            case 74:\n              _context4.next = 78;\n              break;\n            case 76:\n              _context4.next = 78;\n              return topologyConnect();\n            case 78:\n              return _context4.abrupt(\"return\", this);\n            case 79:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee3, this, [[32, 42, 45, 48], [51, 60, 63, 66]]);\n      }));\n      function _connect() {\n        return _connect3.apply(this, arguments);\n      }\n      return _connect;\n    }()\n    /**\n     * Close the client and its underlying connections\n     *\n     * @param force - Force close, emitting no events\n     */\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _this3 = this;\n        var force,\n          activeSessionEnds,\n          selector,\n          topologyDescription,\n          serverDescriptions,\n          servers,\n          endSessions,\n          topology,\n          _args5 = arguments;\n        return _regeneratorRuntime().wrap(function _callee4$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              force = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : false;\n              // There's no way to set hasBeenClosed back to false\n              Object.defineProperty(this.s, 'hasBeenClosed', {\n                value: true,\n                enumerable: true,\n                configurable: false,\n                writable: false\n              });\n              activeSessionEnds = Array.from(this.s.activeSessions, function (session) {\n                return session.endSession();\n              });\n              this.s.activeSessions.clear();\n              _context5.next = 6;\n              return Promise.all(activeSessionEnds);\n            case 6:\n              if (!(this.topology == null)) {\n                _context5.next = 8;\n                break;\n              }\n              return _context5.abrupt(\"return\");\n            case 8:\n              // If we would attempt to select a server and get nothing back we short circuit\n              // to avoid the server selection timeout.\n              selector = (0, server_selection_1.readPreferenceServerSelector)(read_preference_1.ReadPreference.primaryPreferred);\n              topologyDescription = this.topology.description;\n              serverDescriptions = Array.from(topologyDescription.servers.values());\n              servers = selector(topologyDescription, serverDescriptions);\n              if (!(servers.length !== 0)) {\n                _context5.next = 17;\n                break;\n              }\n              endSessions = Array.from(this.s.sessionPool.sessions, function (_ref4) {\n                var id = _ref4.id;\n                return id;\n              });\n              if (!(endSessions.length !== 0)) {\n                _context5.next = 17;\n                break;\n              }\n              _context5.next = 17;\n              return (0, execute_operation_1.executeOperation)(this, new run_command_1.RunAdminCommandOperation({\n                endSessions: endSessions\n              }, {\n                readPreference: read_preference_1.ReadPreference.primaryPreferred,\n                noResponse: true\n              })).catch(function () {\n                return null;\n              });\n            case 17:\n              // clear out references to old topology\n              topology = this.topology;\n              this.topology = undefined;\n              _context5.next = 21;\n              return new Promise(function (resolve, reject) {\n                topology.close({\n                  force: force\n                }, function (error) {\n                  if (error) return reject(error);\n                  var encrypter = _this3[kOptions].encrypter;\n                  if (encrypter) {\n                    return encrypter.closeCallback(_this3, force, function (error) {\n                      if (error) return reject(error);\n                      resolve();\n                    });\n                  }\n                  resolve();\n                });\n              });\n            case 21:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee4, this);\n      }));\n      function close() {\n        return _close.apply(this, arguments);\n      }\n      return close;\n    }()\n    /**\n     * Create a new Db instance sharing the current socket connections.\n     *\n     * @param dbName - The name of the database we want to use. If not provided, use database name from connection string.\n     * @param options - Optional settings for Db construction\n     */\n  }, {\n    key: \"db\",\n    value: function db(dbName, options) {\n      options = options ?? {};\n      // Default to db from connection string if not provided\n      if (!dbName) {\n        dbName = this.options.dbName;\n      }\n      // Copy the options and add out internal override of the not shared flag\n      var finalOptions = Object.assign({}, this[kOptions], options);\n      // Return the db object\n      var db = new db_1.Db(this, dbName, finalOptions);\n      // Return the database\n      return db;\n    }\n    /**\n     * Connect to MongoDB using a url\n     *\n     * @remarks\n     * The programmatically provided options take precedence over the URI options.\n     *\n     * @see https://www.mongodb.com/docs/manual/reference/connection-string/\n     */\n  }, {\n    key: \"startSession\",\n    /**\n     * Creates a new ClientSession. When using the returned session in an operation\n     * a corresponding ServerSession will be created.\n     *\n     * @remarks\n     * A ClientSession instance may only be passed to operations being performed on the same\n     * MongoClient it was started from.\n     */\n    value: function startSession(options) {\n      var _this4 = this;\n      var session = new sessions_1.ClientSession(this, this.s.sessionPool, _objectSpread({\n        explicit: true\n      }, options), this[kOptions]);\n      this.s.activeSessions.add(session);\n      session.once('ended', function () {\n        _this4.s.activeSessions.delete(session);\n      });\n      return session;\n    }\n  }, {\n    key: \"withSession\",\n    value: function () {\n      var _withSession = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(optionsOrExecutor, executor) {\n        var options, withSessionCallback, session;\n        return _regeneratorRuntime().wrap(function _callee5$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              options = _objectSpread({\n                // Always define an owner\n                owner: Symbol()\n              }, typeof optionsOrExecutor === 'object' ? optionsOrExecutor : {});\n              withSessionCallback = typeof optionsOrExecutor === 'function' ? optionsOrExecutor : executor;\n              if (!(withSessionCallback == null)) {\n                _context6.next = 4;\n                break;\n              }\n              throw new error_1.MongoInvalidArgumentError('Missing required callback parameter');\n            case 4:\n              session = this.startSession(options);\n              _context6.prev = 5;\n              _context6.next = 8;\n              return withSessionCallback(session);\n            case 8:\n              return _context6.abrupt(\"return\", _context6.sent);\n            case 9:\n              _context6.prev = 9;\n              _context6.prev = 10;\n              _context6.next = 13;\n              return session.endSession();\n            case 13:\n              _context6.next = 17;\n              break;\n            case 15:\n              _context6.prev = 15;\n              _context6.t0 = _context6[\"catch\"](10);\n            case 17:\n              return _context6.finish(9);\n            case 18:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee5, this, [[5,, 9, 18], [10, 15]]);\n      }));\n      function withSession(_x, _x2) {\n        return _withSession.apply(this, arguments);\n      }\n      return withSession;\n    }()\n    /**\n     * Create a new Change Stream, watching for new changes (insertions, updates,\n     * replacements, deletions, and invalidations) in this cluster. Will ignore all\n     * changes to system collections, as well as the local, admin, and config databases.\n     *\n     * @remarks\n     * watch() accepts two generic arguments for distinct use cases:\n     * - The first is to provide the schema that may be defined for all the data within the current cluster\n     * - The second is to override the shape of the change stream document entirely, if it is not provided the type will default to ChangeStreamDocument of the first argument\n     *\n     * @param pipeline - An array of {@link https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents. This allows for filtering (using $match) and manipulating the change stream documents.\n     * @param options - Optional settings for the command\n     * @typeParam TSchema - Type of the data being detected by the change stream\n     * @typeParam TChange - Type of the whole change stream document emitted\n     */\n  }, {\n    key: \"watch\",\n    value: function watch() {\n      var pipeline = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // Allow optionally not specifying a pipeline\n      if (!Array.isArray(pipeline)) {\n        options = pipeline;\n        pipeline = [];\n      }\n      return new change_stream_1.ChangeStream(this, pipeline, (0, utils_1.resolveOptions)(this, options));\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return Object.freeze(_objectSpread({}, this[kOptions]));\n    }\n  }, {\n    key: \"serverApi\",\n    get: function get() {\n      return this[kOptions].serverApi && Object.freeze(_objectSpread({}, this[kOptions].serverApi));\n    }\n    /**\n     * Intended for APM use only\n     * @internal\n     */\n  }, {\n    key: \"monitorCommands\",\n    get: function get() {\n      return this[kOptions].monitorCommands;\n    },\n    set: function set(value) {\n      this[kOptions].monitorCommands = value;\n    } /** @internal */\n  }, {\n    key: \"autoEncrypter\",\n    get: function get() {\n      return this[kOptions].autoEncrypter;\n    }\n  }, {\n    key: \"readConcern\",\n    get: function get() {\n      return this.s.readConcern;\n    }\n  }, {\n    key: \"writeConcern\",\n    get: function get() {\n      return this.s.writeConcern;\n    }\n  }, {\n    key: \"readPreference\",\n    get: function get() {\n      return this.s.readPreference;\n    }\n  }, {\n    key: \"bsonOptions\",\n    get: function get() {\n      return this.s.bsonOptions;\n    }\n  }], [{\n    key: \"connect\",\n    value: function () {\n      var _connect4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(url, options) {\n        var client;\n        return _regeneratorRuntime().wrap(function _callee6$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              client = new this(url, options);\n              return _context7.abrupt(\"return\", client.connect());\n            case 2:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee6, this);\n      }));\n      function connect(_x3, _x4) {\n        return _connect4.apply(this, arguments);\n      }\n      return connect;\n    }()\n  }]);\n  return MongoClient;\n}(mongo_types_1.TypedEventEmitter);\nexports.MongoClient = MongoClient;","map":{"version":3,"names":["fs_1","require","util_1","bson_1","change_stream_1","mongo_credentials_1","providers_1","connection_string_1","constants_1","db_1","error_1","mongo_logger_1","mongo_types_1","execute_operation_1","run_command_1","read_preference_1","server_selection_1","topology_1","sessions_1","utils_1","exports","ServerApiVersion","Object","freeze","v1","kOptions","Symbol","MongoClient","_mongo_types_1$TypedE","_inherits","url","options","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","parseOptions","_assertThisInitialized","mongoLogger","MongoLogger","mongoLoggerOptions","client","s","bsonOptions","resolveBSONOptions","namespace","ns","hasBeenClosed","sessionPool","ServerSessionPool","activeSessions","Set","readConcern","writeConcern","readPreference","isMongoClient","_createClass","key","value","_connect2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","connectionLock","abrupt","_connect","undefined","finish","stop","connect","apply","arguments","_connect3","_callee3","_this2","contents","hosts","_iterator","_step","_ref","_ref2","index","host","allowedHosts","isServiceAuth","_iterator2","_step2","_host","_iterator3","_step3","_loop","topologyConnect","_callee3$","_context4","topology","isConnected","tls","tlsCAFile","t0","ca","promises","readFile","sent","tlsCRLFile","t1","crl","tlsCertificateKeyFile","cert","srvHost","resolveSRVRecord","_createForOfIteratorHelper","entries","n","done","_slicedToArray","err","e","f","credentials","mechanism","AuthMechanism","MONGODB_OIDC","mechanismProperties","ALLOWED_HOSTS","DEFAULT_ALLOWED_HOSTS","PROVIDER_NAME","hostMatchesWildcards","toHostPort","MongoInvalidArgumentError","concat","join","t2","Topology","once","OPEN","emit","MONGO_CLIENT_EVENTS","event","_loop$","_context3","on","_len","length","args","Array","_key","delegateYield","t4","_ref3","_callee2","_callee2$","_context2","promisify","callback","close","force","autoEncrypter","init","encrypter","connectInternalClient","_close","_callee4","_this3","activeSessionEnds","selector","topologyDescription","serverDescriptions","servers","endSessions","_args5","_callee4$","_context5","defineProperty","enumerable","configurable","writable","from","session","endSession","clear","Promise","all","readPreferenceServerSelector","ReadPreference","primaryPreferred","description","values","sessions","_ref4","id","executeOperation","RunAdminCommandOperation","noResponse","catch","resolve","reject","error","closeCallback","db","dbName","finalOptions","assign","Db","startSession","_this4","ClientSession","_objectSpread","explicit","add","delete","_withSession","_callee5","optionsOrExecutor","executor","withSessionCallback","_callee5$","_context6","owner","withSession","_x","_x2","watch","pipeline","isArray","ChangeStream","resolveOptions","get","serverApi","monitorCommands","set","_connect4","_callee6","_callee6$","_context7","_x3","_x4","TypedEventEmitter"],"sources":["../src/mongo_client.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAAA,IAAA,GAAAC,OAAA;AAGA,IAAAC,MAAA,GAAAD,OAAA;AAEA,IAAAE,MAAA,GAAAF,OAAA;AACA,IAAAG,eAAA,GAAAH,OAAA;AAEA,IAAAI,mBAAA,GAAAJ,OAAA;AAKA,IAAAK,WAAA,GAAAL,OAAA;AAKA,IAAAM,mBAAA,GAAAN,OAAA;AACA,IAAAO,WAAA,GAAAP,OAAA;AACA,IAAAQ,IAAA,GAAAR,OAAA;AAEA,IAAAS,OAAA,GAAAT,OAAA;AACA,IAAAU,cAAA,GAAAV,OAAA;AACA,IAAAW,aAAA,GAAAX,OAAA;AACA,IAAAY,mBAAA,GAAAZ,OAAA;AACA,IAAAa,aAAA,GAAAb,OAAA;AAEA,IAAAc,iBAAA,GAAAd,OAAA;AAEA,IAAAe,kBAAA,GAAAf,OAAA;AAEA,IAAAgB,UAAA,GAAAhB,OAAA;AACA,IAAAiB,UAAA,GAAAjB,OAAA;AACA,IAAAkB,OAAA,GAAAlB,OAAA;AASA;AACamB,OAAA,CAAAC,gBAAgB,GAAGC,MAAM,CAACC,MAAM,CAAC;EAC5CC,EAAE,EAAE;CACI,CAAC;AAmPX;AACA,IAAMC,QAAQ,GAAGC,MAAM,CAAC,SAAS,CAAC;AAElC;;;;;;;;;;;;;;;;;;;AAAA,IAmBaC,WAAY,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,WAAA,EAAAC,qBAAA;EAgBvB,SAAAD,YAAYG,GAAW,EAAEC,OAA4B;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAN,WAAA;IACnDK,KAAA,GAAAE,0BAAA,OAAAC,eAAA,CAAAR,WAAA,EAAAS,IAAA;IAEAJ,KAAA,CAAKP,QAAQ,CAAC,GAAG,IAAAlB,mBAAA,CAAA8B,YAAY,EAACP,GAAG,EAAAQ,sBAAA,CAAAA,sBAAA,CAAAN,KAAA,IAAQD,OAAO,CAAC;IACjDC,KAAA,CAAKO,WAAW,GAAG,IAAI5B,cAAA,CAAA6B,WAAW,CAACR,KAAA,CAAKP,QAAQ,CAAC,CAACgB,kBAAkB,CAAC;IAErE;IACA,IAAMC,MAAM,GAAAJ,sBAAA,CAAAA,sBAAA,CAAAN,KAAA,EAAO;IAEnB;IACAA,KAAA,CAAKW,CAAC,GAAG;MACPb,GAAG,EAAHA,GAAG;MACHc,WAAW,EAAE,IAAAzC,MAAA,CAAA0C,kBAAkB,EAACb,KAAA,CAAKP,QAAQ,CAAC,CAAC;MAC/CqB,SAAS,EAAE,IAAA3B,OAAA,CAAA4B,EAAE,EAAC,OAAO,CAAC;MACtBC,aAAa,EAAE,KAAK;MACpBC,WAAW,EAAE,IAAI/B,UAAA,CAAAgC,iBAAiB,CAAAZ,sBAAA,CAAAA,sBAAA,CAAAN,KAAA,EAAK,CAAC;MACxCmB,cAAc,EAAE,IAAIC,GAAG,EAAE;MAEzB,IAAIrB,OAAOA,CAAA;QACT,OAAOW,MAAM,CAACjB,QAAQ,CAAC;MACzB,CAAC;MACD,IAAI4B,WAAWA,CAAA;QACb,OAAOX,MAAM,CAACjB,QAAQ,CAAC,CAAC4B,WAAW;MACrC,CAAC;MACD,IAAIC,YAAYA,CAAA;QACd,OAAOZ,MAAM,CAACjB,QAAQ,CAAC,CAAC6B,YAAY;MACtC,CAAC;MACD,IAAIC,cAAcA,CAAA;QAChB,OAAOb,MAAM,CAACjB,QAAQ,CAAC,CAAC8B,cAAc;MACxC,CAAC;MACD,IAAIC,aAAaA,CAAA;QACf,OAAO,IAAI;MACb;KACD;IAAC,OAAAxB,KAAA;EACJ;EAEA;EAAAyB,YAAA,CAAA9B,WAAA;IAAA+B,GAAA;IAwCA;;;;;IAAAC,KAAA;MAAA,IAAAC,SAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,KAMM,IAAI,CAACC,cAAc;gBAAAH,QAAA,CAAAE,IAAA;gBAAA;cAAA;cAAA,OAAAF,QAAA,CAAAI,MAAA,WACd,IAAI,CAACD,cAAc;YAAA;cAAAH,QAAA,CAAAC,IAAA;cAI1B,IAAI,CAACE,cAAc,GAAG,IAAI,CAACE,QAAQ,EAAE;cAACL,QAAA,CAAAE,IAAA;cAAA,OAChC,IAAI,CAACC,cAAc;YAAA;cAAAH,QAAA,CAAAC,IAAA;cAEzB;cACA,IAAI,CAACE,cAAc,GAAGG,SAAS;cAAC,OAAAN,QAAA,CAAAO,MAAA;YAAA;cAAA,OAAAP,QAAA,CAAAI,MAAA,WAG3B,IAAI;YAAA;YAAA;cAAA,OAAAJ,QAAA,CAAAQ,IAAA;UAAA;QAAA,GAAAX,OAAA;MAAA;MAAA,SAAAY,QAAA;QAAA,OAAAhB,SAAA,CAAAiB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAF,OAAA;IAAA;IAGb;;;;;;EAAA;IAAAlB,GAAA;IAAAC,KAAA;MAAA,IAAAoB,SAAA,GAAAlB,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAiB,SAAA;QAAA,IAAAC,MAAA;QAAA,IAAAlD,OAAA,EAAAmD,QAAA,EAAAC,KAAA,EAAAC,SAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,YAAA,EAAAC,aAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,UAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,eAAA;QAAA,OAAApC,mBAAA,GAAAG,IAAA,UAAAkC,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAhC,IAAA,GAAAgC,SAAA,CAAA/B,IAAA;YAAA;cAAA,MAOM,IAAI,CAACgC,QAAQ,IAAI,IAAI,CAACA,QAAQ,CAACC,WAAW,EAAE;gBAAAF,SAAA,CAAA/B,IAAA;gBAAA;cAAA;cAAA,OAAA+B,SAAA,CAAA7B,MAAA,WACvC,IAAI;YAAA;cAGPxC,OAAO,GAAG,IAAI,CAACN,QAAQ,CAAC;cAAA,KAE1BM,OAAO,CAACwE,GAAG;gBAAAH,SAAA,CAAA/B,IAAA;gBAAA;cAAA;cAAA,MACT,OAAOtC,OAAO,CAACyE,SAAS,KAAK,QAAQ;gBAAAJ,SAAA,CAAA/B,IAAA;gBAAA;cAAA;cAAA+B,SAAA,CAAAK,EAAA,GACvC1E,OAAO,CAAC2E,EAAE;cAAAN,SAAA,CAAA/B,IAAA;cAAA,OAAWrE,IAAA,CAAA2G,QAAE,CAACC,QAAQ,CAAC7E,OAAO,CAACyE,SAAS,CAAC;YAAA;cAAnDzE,OAAO,CAAC2E,EAAE,GAAAN,SAAA,CAAAK,EAAA,KAAAL,SAAA,CAAAS,IAAA;YAAA;cAAA,MAER,OAAO9E,OAAO,CAAC+E,UAAU,KAAK,QAAQ;gBAAAV,SAAA,CAAA/B,IAAA;gBAAA;cAAA;cAAA+B,SAAA,CAAAW,EAAA,GACxChF,OAAO,CAACiF,GAAG;cAAAZ,SAAA,CAAA/B,IAAA;cAAA,OAAWrE,IAAA,CAAA2G,QAAE,CAACC,QAAQ,CAAC7E,OAAO,CAAC+E,UAAU,CAAC;YAAA;cAArD/E,OAAO,CAACiF,GAAG,GAAAZ,SAAA,CAAAW,EAAA,KAAAX,SAAA,CAAAS,IAAA;YAAA;cAAA,MAET,OAAO9E,OAAO,CAACkF,qBAAqB,KAAK,QAAQ;gBAAAb,SAAA,CAAA/B,IAAA;gBAAA;cAAA;cAAA,MAC/C,CAACtC,OAAO,CAAC2B,GAAG,IAAI,CAAC3B,OAAO,CAACmF,IAAI;gBAAAd,SAAA,CAAA/B,IAAA;gBAAA;cAAA;cAAA+B,SAAA,CAAA/B,IAAA;cAAA,OACRrE,IAAA,CAAA2G,QAAE,CAACC,QAAQ,CAAC7E,OAAO,CAACkF,qBAAqB,CAAC;YAAA;cAA3D/B,QAAQ,GAAAkB,SAAA,CAAAS,IAAA;cACd9E,OAAO,CAAC2B,GAAG,KAAKwB,QAAQ;cACxBnD,OAAO,CAACmF,IAAI,KAAKhC,QAAQ;YAAC;cAAA,MAI5B,OAAOnD,OAAO,CAACoF,OAAO,KAAK,QAAQ;gBAAAf,SAAA,CAAA/B,IAAA;gBAAA;cAAA;cAAA+B,SAAA,CAAA/B,IAAA;cAAA,OACjB,IAAA9D,mBAAA,CAAA6G,gBAAgB,EAACrF,OAAO,CAAC;YAAA;cAAvCoD,KAAK,GAAAiB,SAAA,CAAAS,IAAA;cAAAzB,SAAA,GAAAiC,0BAAA,CAEiBlC,KAAK,CAACmC,OAAO,EAAE;cAAA;gBAA3C,KAAAlC,SAAA,CAAAzC,CAAA,MAAA0C,KAAA,GAAAD,SAAA,CAAAmC,CAAA,IAAAC,IAAA,GAA6C;kBAAAlC,IAAA,GAAAD,KAAA,CAAA1B,KAAA;kBAAA4B,KAAA,GAAAkC,cAAA,CAAAnC,IAAA;kBAAjCE,KAAK,GAAAD,KAAA;kBAAEE,IAAI,GAAAF,KAAA;kBACrBxD,OAAO,CAACoD,KAAK,CAACK,KAAK,CAAC,GAAGC,IAAI;;cAC5B,SAAAiC,GAAA;gBAAAtC,SAAA,CAAAuC,CAAA,CAAAD,GAAA;cAAA;gBAAAtC,SAAA,CAAAwC,CAAA;cAAA;YAAA;cAAA,MAKC7F,OAAO,CAAC8F,WAAW,EAAEC,SAAS,KAAKxH,WAAA,CAAAyH,aAAa,CAACC,YAAY;gBAAA5B,SAAA,CAAA/B,IAAA;gBAAA;cAAA;cACzDqB,YAAY,GAChB3D,OAAO,CAAC8F,WAAW,EAAEI,mBAAmB,EAAEC,aAAa,IAAI7H,mBAAA,CAAA8H,qBAAqB;cAC5ExC,aAAa,GAAG,CAAC,CAAC5D,OAAO,CAAC8F,WAAW,EAAEI,mBAAmB,EAAEG,aAAa;cAAA,IAC1EzC,aAAa;gBAAAS,SAAA,CAAA/B,IAAA;gBAAA;cAAA;cAAAuB,UAAA,GAAAyB,0BAAA,CACGtF,OAAO,CAACoD,KAAK;cAAAiB,SAAA,CAAAhC,IAAA;cAAAwB,UAAA,CAAAjD,CAAA;YAAA;cAAA,KAAAkD,MAAA,GAAAD,UAAA,CAAA2B,CAAA,IAAAC,IAAA;gBAAApB,SAAA,CAAA/B,IAAA;gBAAA;cAAA;cAArBoB,KAAI,GAAAI,MAAA,CAAAlC,KAAA;cAAA,IACR,IAAAxC,OAAA,CAAAkH,oBAAoB,EAAC5C,KAAI,CAAC6C,UAAU,EAAE,CAAC7C,IAAI,EAAEC,YAAY,CAAC;gBAAAU,SAAA,CAAA/B,IAAA;gBAAA;cAAA;cAAA,MACvD,IAAI3D,OAAA,CAAA6H,yBAAyB,UAAAC,MAAA,CACxB/C,KAAI,oEAAA+C,MAAA,CAAiE9C,YAAY,CAAC+C,IAAI,CAC7F,GAAG,CACJ,MAAG,CACL;YAAA;cAAArC,SAAA,CAAA/B,IAAA;cAAA;YAAA;cAAA+B,SAAA,CAAA/B,IAAA;cAAA;YAAA;cAAA+B,SAAA,CAAAhC,IAAA;cAAAgC,SAAA,CAAAsC,EAAA,GAAAtC,SAAA;cAAAR,UAAA,CAAA+B,CAAA,CAAAvB,SAAA,CAAAsC,EAAA;YAAA;cAAAtC,SAAA,CAAAhC,IAAA;cAAAwB,UAAA,CAAAgC,CAAA;cAAA,OAAAxB,SAAA,CAAA1B,MAAA;YAAA;cAMT,IAAI,CAAC2B,QAAQ,GAAG,IAAIpF,UAAA,CAAA0H,QAAQ,CAAC,IAAI,EAAE5G,OAAO,CAACoD,KAAK,EAAEpD,OAAO,CAAC;cAC1D;cACA;cAEA,IAAI,CAACsE,QAAQ,CAACuC,IAAI,CAAC3H,UAAA,CAAA0H,QAAQ,CAACE,IAAI,EAAE;gBAAA,OAAM5D,MAAI,CAAC6D,IAAI,CAAC,MAAM,EAAE7D,MAAI,CAAC;cAAA,EAAC;cAACc,UAAA,GAAAsB,0BAAA,CAE7C7G,WAAA,CAAAuI,mBAAmB;cAAA3C,SAAA,CAAAhC,IAAA;cAAA6B,KAAA,gBAAAnC,mBAAA,GAAAC,IAAA,UAAAkC,MAAA;gBAAA,IAAA+C,KAAA;gBAAA,OAAAlF,mBAAA,GAAAG,IAAA,UAAAgF,OAAAC,SAAA;kBAAA,kBAAAA,SAAA,CAAA9E,IAAA,GAAA8E,SAAA,CAAA7E,IAAA;oBAAA;sBAA5B2E,KAAK,GAAAhD,MAAA,CAAArC,KAAA;sBACdsB,MAAI,CAACoB,QAAQ,CAAC8C,EAAE,CAACH,KAAK,EAAE;wBAAA,SAAAI,IAAA,GAAAtE,SAAA,CAAAuE,MAAA,EAAIC,IAAW,OAAAC,KAAA,CAAAH,IAAA,GAAAI,IAAA,MAAAA,IAAA,GAAAJ,IAAA,EAAAI,IAAA;0BAAXF,IAAW,CAAAE,IAAA,IAAA1E,SAAA,CAAA0E,IAAA;wBAAA;wBAAA,OAAKvE,MAAI,CAAC6D,IAAI,CAAAjE,KAAA,CAATI,MAAI,GAAM+D,KAAK,EAAAR,MAAA,CAAMc,IAAY,EAAC;sBAAA,EAAC;oBAAC;oBAAA;sBAAA,OAAAJ,SAAA,CAAAvE,IAAA;kBAAA;gBAAA,GAAAsB,KAAA;cAAA;cAAAF,UAAA,CAAApD,CAAA;YAAA;cAAA,KAAAqD,MAAA,GAAAD,UAAA,CAAAwB,CAAA,IAAAC,IAAA;gBAAApB,SAAA,CAAA/B,IAAA;gBAAA;cAAA;cAAA,OAAA+B,SAAA,CAAAqD,aAAA,CAAAxD,KAAA;YAAA;cAAAG,SAAA,CAAA/B,IAAA;cAAA;YAAA;cAAA+B,SAAA,CAAA/B,IAAA;cAAA;YAAA;cAAA+B,SAAA,CAAAhC,IAAA;cAAAgC,SAAA,CAAAsD,EAAA,GAAAtD,SAAA;cAAAL,UAAA,CAAA4B,CAAA,CAAAvB,SAAA,CAAAsD,EAAA;YAAA;cAAAtD,SAAA,CAAAhC,IAAA;cAAA2B,UAAA,CAAA6B,CAAA;cAAA,OAAAxB,SAAA,CAAA1B,MAAA;YAAA;cAG5EwB,eAAe;gBAAA,IAAAyD,KAAA,GAAA9F,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA6F,SAAA;kBAAA,OAAA9F,mBAAA,GAAAG,IAAA,UAAA4F,UAAAC,SAAA;oBAAA,kBAAAA,SAAA,CAAA1F,IAAA,GAAA0F,SAAA,CAAAzF,IAAA;sBAAA;wBAAAyF,SAAA,CAAA1F,IAAA;wBAAA0F,SAAA,CAAAzF,IAAA;wBAAA,OAEd,IAAAnE,MAAA,CAAA6J,SAAS,EAAC,UAAAC,QAAQ;0BAAA,OAAI/E,MAAI,CAACoB,QAAQ,EAAEzB,OAAO,CAAC7C,OAAO,EAAEiI,QAAQ,CAAC;wBAAA,EAAC,EAAE;sBAAA;wBAAAF,SAAA,CAAAzF,IAAA;wBAAA;sBAAA;wBAAAyF,SAAA,CAAA1F,IAAA;wBAAA0F,SAAA,CAAArD,EAAA,GAAAqD,SAAA;wBAExE7E,MAAI,CAACoB,QAAQ,EAAE4D,KAAK,CAAC;0BAAEC,KAAK,EAAE;wBAAI,CAAE,CAAC;wBAAC,MAAAJ,SAAA,CAAArD,EAAA;sBAAA;sBAAA;wBAAA,OAAAqD,SAAA,CAAAnF,IAAA;oBAAA;kBAAA,GAAAiF,QAAA;gBAAA,CAGzC;gBAAA,gBAPK1D,eAAeA,CAAA;kBAAA,OAAAyD,KAAA,CAAA9E,KAAA,OAAAC,SAAA;gBAAA;cAAA;cAAA,KASjB,IAAI,CAACqF,aAAa;gBAAA/D,SAAA,CAAA/B,IAAA;gBAAA;cAAA;cAAA+B,SAAA,CAAA/B,IAAA;cAAA,OACd,IAAI,CAAC8F,aAAa,EAAEC,IAAI,EAAE;YAAA;cAAAhE,SAAA,CAAA/B,IAAA;cAAA,OAC1B6B,eAAe,EAAE;YAAA;cAAAE,SAAA,CAAA/B,IAAA;cAAA,OACjBtC,OAAO,CAACsI,SAAS,CAACC,qBAAqB,EAAE;YAAA;cAAAlE,SAAA,CAAA/B,IAAA;cAAA;YAAA;cAAA+B,SAAA,CAAA/B,IAAA;cAAA,OAEzC6B,eAAe,EAAE;YAAA;cAAA,OAAAE,SAAA,CAAA7B,MAAA,WAGlB,IAAI;YAAA;YAAA;cAAA,OAAA6B,SAAA,CAAAzB,IAAA;UAAA;QAAA,GAAAK,QAAA;MAAA;MAAA,SAAAR,SAAA;QAAA,OAAAO,SAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAN,QAAA;IAAA;IAGb;;;;;EAAA;IAAAd,GAAA;IAAAC,KAAA;MAAA,IAAA4G,MAAA,GAAA1G,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAyG,SAAA;QAAA,IAAAC,MAAA;QAAA,IAAAP,KAAA;UAAAQ,iBAAA;UAAAC,QAAA;UAAAC,mBAAA;UAAAC,kBAAA;UAAAC,OAAA;UAAAC,WAAA;UAAA1E,QAAA;UAAA2E,MAAA,GAAAlG,SAAA;QAAA,OAAAhB,mBAAA,GAAAG,IAAA,UAAAgH,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA9G,IAAA,GAAA8G,SAAA,CAAA7G,IAAA;YAAA;cAKY6F,KAAK,GAAAc,MAAA,CAAA3B,MAAA,QAAA2B,MAAA,QAAAvG,SAAA,GAAAuG,MAAA,MAAG,KAAK;cACvB;cACA1J,MAAM,CAAC6J,cAAc,CAAC,IAAI,CAACxI,CAAC,EAAE,eAAe,EAAE;gBAC7CgB,KAAK,EAAE,IAAI;gBACXyH,UAAU,EAAE,IAAI;gBAChBC,YAAY,EAAE,KAAK;gBACnBC,QAAQ,EAAE;eACX,CAAC;cAEIZ,iBAAiB,GAAGnB,KAAK,CAACgC,IAAI,CAAC,IAAI,CAAC5I,CAAC,CAACQ,cAAc,EAAE,UAAAqI,OAAO;gBAAA,OAAIA,OAAO,CAACC,UAAU,EAAE;cAAA,EAAC;cAC5F,IAAI,CAAC9I,CAAC,CAACQ,cAAc,CAACuI,KAAK,EAAE;cAACR,SAAA,CAAA7G,IAAA;cAAA,OAExBsH,OAAO,CAACC,GAAG,CAAClB,iBAAiB,CAAC;YAAA;cAAA,MAEhC,IAAI,CAACrE,QAAQ,IAAI,IAAI;gBAAA6E,SAAA,CAAA7G,IAAA;gBAAA;cAAA;cAAA,OAAA6G,SAAA,CAAA3G,MAAA;YAAA;cAIzB;cACA;cACMoG,QAAQ,GAAG,IAAA3J,kBAAA,CAAA6K,4BAA4B,EAAC9K,iBAAA,CAAA+K,cAAc,CAACC,gBAAgB,CAAC;cACxEnB,mBAAmB,GAAG,IAAI,CAACvE,QAAQ,CAAC2F,WAAW;cAC/CnB,kBAAkB,GAAGtB,KAAK,CAACgC,IAAI,CAACX,mBAAmB,CAACE,OAAO,CAACmB,MAAM,EAAE,CAAC;cACrEnB,OAAO,GAAGH,QAAQ,CAACC,mBAAmB,EAAEC,kBAAkB,CAAC;cAAA,MAC7DC,OAAO,CAACzB,MAAM,KAAK,CAAC;gBAAA6B,SAAA,CAAA7G,IAAA;gBAAA;cAAA;cAChB0G,WAAW,GAAGxB,KAAK,CAACgC,IAAI,CAAC,IAAI,CAAC5I,CAAC,CAACM,WAAW,CAACiJ,QAAQ,EAAE,UAAAC,KAAA;gBAAA,IAAGC,EAAE,GAAAD,KAAA,CAAFC,EAAE;gBAAA,OAAOA,EAAE;cAAA,EAAC;cAAA,MACvErB,WAAW,CAAC1B,MAAM,KAAK,CAAC;gBAAA6B,SAAA,CAAA7G,IAAA;gBAAA;cAAA;cAAA6G,SAAA,CAAA7G,IAAA;cAAA,OACpB,IAAAxD,mBAAA,CAAAwL,gBAAgB,EACpB,IAAI,EACJ,IAAIvL,aAAA,CAAAwL,wBAAwB,CAC1B;gBAAEvB,WAAW,EAAXA;cAAW,CAAE,EACf;gBAAExH,cAAc,EAAExC,iBAAA,CAAA+K,cAAc,CAACC,gBAAgB;gBAAEQ,UAAU,EAAE;cAAI,CAAE,CACtE,CACF,CAACC,KAAK,CAAC;gBAAA,OAAM,IAAI;cAAA,EAAC;YAAA;cAIvB;cACMnG,QAAQ,GAAG,IAAI,CAACA,QAAQ;cAC9B,IAAI,CAACA,QAAQ,GAAG5B,SAAS;cAACyG,SAAA,CAAA7G,IAAA;cAAA,OAEpB,IAAIsH,OAAO,CAAO,UAACc,OAAO,EAAEC,MAAM,EAAI;gBAC1CrG,QAAQ,CAAC4D,KAAK,CAAC;kBAAEC,KAAK,EAALA;gBAAK,CAAE,EAAE,UAAAyC,KAAK,EAAG;kBAChC,IAAIA,KAAK,EAAE,OAAOD,MAAM,CAACC,KAAK,CAAC;kBAAC,IACxBtC,SAAS,GAAKI,MAAI,CAAChJ,QAAQ,CAAC,CAA5B4I,SAAS;kBACjB,IAAIA,SAAS,EAAE;oBACb,OAAOA,SAAS,CAACuC,aAAa,CAACnC,MAAI,EAAEP,KAAK,EAAE,UAAAyC,KAAK,EAAG;sBAClD,IAAIA,KAAK,EAAE,OAAOD,MAAM,CAACC,KAAK,CAAC;sBAC/BF,OAAO,EAAE;oBACX,CAAC,CAAC;;kBAEJA,OAAO,EAAE;gBACX,CAAC,CAAC;cACJ,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAvB,SAAA,CAAAvG,IAAA;UAAA;QAAA,GAAA6F,QAAA;MAAA;MAAA,SAAAP,MAAA;QAAA,OAAAM,MAAA,CAAA1F,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAmF,KAAA;IAAA;IAGJ;;;;;;EAAA;IAAAvG,GAAA;IAAAC,KAAA,WAAAkJ,GAMGC,MAAe,EAAE/K,OAAmB;MACrCA,OAAO,GAAGA,OAAO,IAAI,EAAE;MAEvB;MACA,IAAI,CAAC+K,MAAM,EAAE;QACXA,MAAM,GAAG,IAAI,CAAC/K,OAAO,CAAC+K,MAAM;;MAG9B;MACA,IAAMC,YAAY,GAAGzL,MAAM,CAAC0L,MAAM,CAAC,EAAE,EAAE,IAAI,CAACvL,QAAQ,CAAC,EAAEM,OAAO,CAAC;MAE/D;MACA,IAAM8K,EAAE,GAAG,IAAIpM,IAAA,CAAAwM,EAAE,CAAC,IAAI,EAAEH,MAAM,EAAEC,YAAY,CAAC;MAE7C;MACA,OAAOF,EAAE;IACX;IAEA;;;;;;;;EAAA;IAAAnJ,GAAA;IAaA;;;;;;;;IAAAC,KAAA,WAAAuJ,aAQanL,OAA8B;MAAA,IAAAoL,MAAA;MACzC,IAAM3B,OAAO,GAAG,IAAItK,UAAA,CAAAkM,aAAa,CAC/B,IAAI,EACJ,IAAI,CAACzK,CAAC,CAACM,WAAW,EAAAoK,aAAA;QAChBC,QAAQ,EAAE;MAAI,GAAKvL,OAAO,GAC5B,IAAI,CAACN,QAAQ,CAAC,CACf;MACD,IAAI,CAACkB,CAAC,CAACQ,cAAc,CAACoK,GAAG,CAAC/B,OAAO,CAAC;MAClCA,OAAO,CAAC5C,IAAI,CAAC,OAAO,EAAE,YAAK;QACzBuE,MAAI,CAACxK,CAAC,CAACQ,cAAc,CAACqK,MAAM,CAAChC,OAAO,CAAC;MACvC,CAAC,CAAC;MACF,OAAOA,OAAO;IAChB;EAAC;IAAA9H,GAAA;IAAAC,KAAA;MAAA,IAAA8J,YAAA,GAAA5J,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAA2J,SAeCC,iBAAgE,EAChEC,QAAiC;QAAA,IAAA7L,OAAA,EAAA8L,mBAAA,EAAArC,OAAA;QAAA,OAAA1H,mBAAA,GAAAG,IAAA,UAAA6J,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA3J,IAAA,GAAA2J,SAAA,CAAA1J,IAAA;YAAA;cAE3BtC,OAAO,GAAAsL,aAAA;gBACX;gBACAW,KAAK,EAAEtM,MAAM;cAAE,GAEX,OAAOiM,iBAAiB,KAAK,QAAQ,GAAGA,iBAAiB,GAAG,EAAE;cAG9DE,mBAAmB,GACvB,OAAOF,iBAAiB,KAAK,UAAU,GAAGA,iBAAiB,GAAGC,QAAQ;cAAA,MAEpEC,mBAAmB,IAAI,IAAI;gBAAAE,SAAA,CAAA1J,IAAA;gBAAA;cAAA;cAAA,MACvB,IAAI3D,OAAA,CAAA6H,yBAAyB,CAAC,qCAAqC,CAAC;YAAA;cAGtEiD,OAAO,GAAG,IAAI,CAAC0B,YAAY,CAACnL,OAAO,CAAC;cAAAgM,SAAA,CAAA3J,IAAA;cAAA2J,SAAA,CAAA1J,IAAA;cAAA,OAG3BwJ,mBAAmB,CAACrC,OAAO,CAAC;YAAA;cAAA,OAAAuC,SAAA,CAAAxJ,MAAA,WAAAwJ,SAAA,CAAAlH,IAAA;YAAA;cAAAkH,SAAA,CAAA3J,IAAA;cAAA2J,SAAA,CAAA3J,IAAA;cAAA2J,SAAA,CAAA1J,IAAA;cAAA,OAGjCmH,OAAO,CAACC,UAAU,EAAE;YAAA;cAAAsC,SAAA,CAAA1J,IAAA;cAAA;YAAA;cAAA0J,SAAA,CAAA3J,IAAA;cAAA2J,SAAA,CAAAtH,EAAA,GAAAsH,SAAA;YAAA;cAAA,OAAAA,SAAA,CAAArJ,MAAA;YAAA;YAAA;cAAA,OAAAqJ,SAAA,CAAApJ,IAAA;UAAA;QAAA,GAAA+I,QAAA;MAAA;MAAA,SAAAO,YAAAC,EAAA,EAAAC,GAAA;QAAA,OAAAV,YAAA,CAAA5I,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAmJ,WAAA;IAAA;IAOhC;;;;;;;;;;;;;;;EAAA;IAAAvK,GAAA;IAAAC,KAAA,WAAAyK,MAAA,EAkB8D;MAAA,IAA5DC,QAAA,GAAAvJ,SAAA,CAAAuE,MAAA,QAAAvE,SAAA,QAAAL,SAAA,GAAAK,SAAA,MAAuB,EAAE;MAAA,IAAE/C,OAAA,GAAA+C,SAAA,CAAAuE,MAAA,QAAAvE,SAAA,QAAAL,SAAA,GAAAK,SAAA,MAA+B,EAAE;MAC5D;MACA,IAAI,CAACyE,KAAK,CAAC+E,OAAO,CAACD,QAAQ,CAAC,EAAE;QAC5BtM,OAAO,GAAGsM,QAAQ;QAClBA,QAAQ,GAAG,EAAE;;MAGf,OAAO,IAAIjO,eAAA,CAAAmO,YAAY,CAAmB,IAAI,EAAEF,QAAQ,EAAE,IAAAlN,OAAA,CAAAqN,cAAc,EAAC,IAAI,EAAEzM,OAAO,CAAC,CAAC;IAC1F;EAAC;IAAA2B,GAAA;IAAA+K,GAAA,WAAAA,IAAA,EA9UU;MACT,OAAOnN,MAAM,CAACC,MAAM,CAAA8L,aAAA,KAAM,IAAI,CAAC5L,QAAQ,CAAC,CAAE,CAAC;IAC7C;EAAC;IAAAiC,GAAA;IAAA+K,GAAA,WAAAA,IAAA,EAEY;MACX,OAAO,IAAI,CAAChN,QAAQ,CAAC,CAACiN,SAAS,IAAIpN,MAAM,CAACC,MAAM,CAAA8L,aAAA,KAAM,IAAI,CAAC5L,QAAQ,CAAC,CAACiN,SAAS,CAAE,CAAC;IACnF;IACA;;;;EAAA;IAAAhL,GAAA;IAAA+K,GAAA,WAAAA,IAAA,EAImB;MACjB,OAAO,IAAI,CAAChN,QAAQ,CAAC,CAACkN,eAAe;IACvC,CAAC;IAAAC,GAAA,WAAAA,IACmBjL,KAAc;MAChC,IAAI,CAAClC,QAAQ,CAAC,CAACkN,eAAe,GAAGhL,KAAK;IACxC,CAAC,CAED;EAAA;IAAAD,GAAA;IAAA+K,GAAA,WAAAA,IAAA,EACiB;MACf,OAAO,IAAI,CAAChN,QAAQ,CAAC,CAAC0I,aAAa;IACrC;EAAC;IAAAzG,GAAA;IAAA+K,GAAA,WAAAA,IAAA,EAEc;MACb,OAAO,IAAI,CAAC9L,CAAC,CAACU,WAAW;IAC3B;EAAC;IAAAK,GAAA;IAAA+K,GAAA,WAAAA,IAAA,EAEe;MACd,OAAO,IAAI,CAAC9L,CAAC,CAACW,YAAY;IAC5B;EAAC;IAAAI,GAAA;IAAA+K,GAAA,WAAAA,IAAA,EAEiB;MAChB,OAAO,IAAI,CAAC9L,CAAC,CAACY,cAAc;IAC9B;EAAC;IAAAG,GAAA;IAAA+K,GAAA,WAAAA,IAAA,EAEc;MACb,OAAO,IAAI,CAAC9L,CAAC,CAACC,WAAW;IAC3B;EAAC;IAAAc,GAAA;IAAAC,KAAA;MAAA,IAAAkL,SAAA,GAAAhL,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAA+K,SAyMoBhN,GAAW,EAAEC,OAA4B;QAAA,IAAAW,MAAA;QAAA,OAAAoB,mBAAA,GAAAG,IAAA,UAAA8K,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA5K,IAAA,GAAA4K,SAAA,CAAA3K,IAAA;YAAA;cACtD3B,MAAM,GAAG,IAAI,IAAI,CAACZ,GAAG,EAAEC,OAAO,CAAC;cAAA,OAAAiN,SAAA,CAAAzK,MAAA,WAC9B7B,MAAM,CAACkC,OAAO,EAAE;YAAA;YAAA;cAAA,OAAAoK,SAAA,CAAArK,IAAA;UAAA;QAAA,GAAAmK,QAAA;MAAA;MAAA,SAAAlK,QAAAqK,GAAA,EAAAC,GAAA;QAAA,OAAAL,SAAA,CAAAhK,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAF,OAAA;IAAA;EAAA;EAAA,OAAAjD,WAAA;AAAA,EArSMf,aAAA,CAAAuO,iBAAoC;AAArE/N,OAAA,CAAAO,WAAA,GAAAA,WAAA"},"metadata":{},"sourceType":"module"}