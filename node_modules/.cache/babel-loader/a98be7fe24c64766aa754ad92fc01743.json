{"ast":null,"code":"var _require = require('http'),\n  STATUS_CODES = _require.STATUS_CODES;\nvar _require2 = require('util'),\n  format = _require2.format;\nvar _require3 = require('../errors'),\n  OPError = _require3.OPError;\nvar REGEXP = /(\\w+)=(\"[^\"]*\")/g;\nvar throwAuthenticateErrors = function throwAuthenticateErrors(response) {\n  var params = {};\n  try {\n    while (REGEXP.exec(response.headers['www-authenticate']) !== null) {\n      if (RegExp.$1 && RegExp.$2) {\n        params[RegExp.$1] = RegExp.$2.slice(1, -1);\n      }\n    }\n  } catch (err) {}\n  if (params.error) {\n    throw new OPError(params, response);\n  }\n};\nvar isStandardBodyError = function isStandardBodyError(response) {\n  var result = false;\n  try {\n    var jsonbody;\n    if (typeof response.body !== 'object' || Buffer.isBuffer(response.body)) {\n      jsonbody = JSON.parse(response.body);\n    } else {\n      jsonbody = response.body;\n    }\n    result = typeof jsonbody.error === 'string' && jsonbody.error.length;\n    if (result) response.body = jsonbody;\n  } catch (err) {}\n  return result;\n};\nfunction processResponse(response) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$statusCode = _ref.statusCode,\n    statusCode = _ref$statusCode === void 0 ? 200 : _ref$statusCode,\n    _ref$body = _ref.body,\n    body = _ref$body === void 0 ? true : _ref$body,\n    _ref$bearer = _ref.bearer,\n    bearer = _ref$bearer === void 0 ? false : _ref$bearer;\n  if (response.statusCode !== statusCode) {\n    if (bearer) {\n      throwAuthenticateErrors(response);\n    }\n    if (isStandardBodyError(response)) {\n      throw new OPError(response.body, response);\n    }\n    throw new OPError({\n      error: format('expected %i %s, got: %i %s', statusCode, STATUS_CODES[statusCode], response.statusCode, STATUS_CODES[response.statusCode])\n    }, response);\n  }\n  if (body && !response.body) {\n    throw new OPError({\n      error: format('expected %i %s with body but no body was returned', statusCode, STATUS_CODES[statusCode])\n    }, response);\n  }\n  return response.body;\n}\nmodule.exports = processResponse;","map":null,"metadata":{},"sourceType":"script"}