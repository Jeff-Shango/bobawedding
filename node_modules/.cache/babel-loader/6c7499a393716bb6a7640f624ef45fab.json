{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.resolveBSONOptions = exports.pluckBSONSerializeOptions = exports.UUID = exports.Timestamp = exports.serialize = exports.ObjectId = exports.MinKey = exports.MaxKey = exports.Long = exports.Int32 = exports.Double = exports.deserialize = exports.Decimal128 = exports.DBRef = exports.Code = exports.calculateObjectSize = exports.BSONType = exports.BSONSymbol = exports.BSONRegExp = exports.BSON = exports.Binary = void 0;\nvar bson_1 = require(\"bson\");\nObject.defineProperty(exports, \"Binary\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.Binary;\n  }\n});\nObject.defineProperty(exports, \"BSON\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.BSON;\n  }\n});\nObject.defineProperty(exports, \"BSONRegExp\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.BSONRegExp;\n  }\n});\nObject.defineProperty(exports, \"BSONSymbol\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.BSONSymbol;\n  }\n});\nObject.defineProperty(exports, \"BSONType\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.BSONType;\n  }\n});\nObject.defineProperty(exports, \"calculateObjectSize\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.calculateObjectSize;\n  }\n});\nObject.defineProperty(exports, \"Code\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.Code;\n  }\n});\nObject.defineProperty(exports, \"DBRef\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.DBRef;\n  }\n});\nObject.defineProperty(exports, \"Decimal128\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.Decimal128;\n  }\n});\nObject.defineProperty(exports, \"deserialize\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.deserialize;\n  }\n});\nObject.defineProperty(exports, \"Double\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.Double;\n  }\n});\nObject.defineProperty(exports, \"Int32\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.Int32;\n  }\n});\nObject.defineProperty(exports, \"Long\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.Long;\n  }\n});\nObject.defineProperty(exports, \"MaxKey\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.MaxKey;\n  }\n});\nObject.defineProperty(exports, \"MinKey\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.MinKey;\n  }\n});\nObject.defineProperty(exports, \"ObjectId\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.ObjectId;\n  }\n});\nObject.defineProperty(exports, \"serialize\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.serialize;\n  }\n});\nObject.defineProperty(exports, \"Timestamp\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.Timestamp;\n  }\n});\nObject.defineProperty(exports, \"UUID\", {\n  enumerable: true,\n  get: function get() {\n    return bson_1.UUID;\n  }\n});\nfunction pluckBSONSerializeOptions(options) {\n  var fieldsAsRaw = options.fieldsAsRaw,\n    useBigInt64 = options.useBigInt64,\n    promoteValues = options.promoteValues,\n    promoteBuffers = options.promoteBuffers,\n    promoteLongs = options.promoteLongs,\n    serializeFunctions = options.serializeFunctions,\n    ignoreUndefined = options.ignoreUndefined,\n    bsonRegExp = options.bsonRegExp,\n    raw = options.raw,\n    enableUtf8Validation = options.enableUtf8Validation;\n  return {\n    fieldsAsRaw: fieldsAsRaw,\n    useBigInt64: useBigInt64,\n    promoteValues: promoteValues,\n    promoteBuffers: promoteBuffers,\n    promoteLongs: promoteLongs,\n    serializeFunctions: serializeFunctions,\n    ignoreUndefined: ignoreUndefined,\n    bsonRegExp: bsonRegExp,\n    raw: raw,\n    enableUtf8Validation: enableUtf8Validation\n  };\n}\nexports.pluckBSONSerializeOptions = pluckBSONSerializeOptions;\n/**\n * Merge the given BSONSerializeOptions, preferring options over the parent's options, and\n * substituting defaults for values not set.\n *\n * @internal\n */\nfunction resolveBSONOptions(options, parent) {\n  var parentOptions = parent?.bsonOptions;\n  return {\n    raw: options?.raw ?? parentOptions?.raw ?? false,\n    useBigInt64: options?.useBigInt64 ?? parentOptions?.useBigInt64 ?? false,\n    promoteLongs: options?.promoteLongs ?? parentOptions?.promoteLongs ?? true,\n    promoteValues: options?.promoteValues ?? parentOptions?.promoteValues ?? true,\n    promoteBuffers: options?.promoteBuffers ?? parentOptions?.promoteBuffers ?? false,\n    ignoreUndefined: options?.ignoreUndefined ?? parentOptions?.ignoreUndefined ?? false,\n    bsonRegExp: options?.bsonRegExp ?? parentOptions?.bsonRegExp ?? false,\n    serializeFunctions: options?.serializeFunctions ?? parentOptions?.serializeFunctions ?? false,\n    fieldsAsRaw: options?.fieldsAsRaw ?? parentOptions?.fieldsAsRaw ?? {},\n    enableUtf8Validation: options?.enableUtf8Validation ?? parentOptions?.enableUtf8Validation ?? true\n  };\n}\nexports.resolveBSONOptions = resolveBSONOptions;","map":{"version":3,"names":["bson_1","require","Object","defineProperty","exports","enumerable","get","Binary","BSON","BSONRegExp","BSONSymbol","BSONType","calculateObjectSize","Code","DBRef","Decimal128","deserialize","Double","Int32","Long","MaxKey","MinKey","ObjectId","serialize","Timestamp","UUID","pluckBSONSerializeOptions","options","fieldsAsRaw","useBigInt64","promoteValues","promoteBuffers","promoteLongs","serializeFunctions","ignoreUndefined","bsonRegExp","raw","enableUtf8Validation","resolveBSONOptions","parent","parentOptions","bsonOptions"],"sources":["../src/bson.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}