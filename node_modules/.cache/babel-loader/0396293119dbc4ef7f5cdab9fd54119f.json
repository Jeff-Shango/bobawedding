{"ast":null,"code":"\"use strict\";\n\nimport _asyncToGenerator from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _awaitAsyncGenerator from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator\";\nimport _wrapAsyncGenerator from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _asyncIterator(r) { var n, t, o, e = 2; for (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) { if (t && null != (n = r[t])) return n.call(r); if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r)); t = \"@@asyncIterator\", o = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\nfunction AsyncFromSyncIterator(r) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var n = r.done; return Promise.resolve(r.value).then(function (r) { return { value: r, done: n }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) { this.s = r, this.n = r.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(r) { var n = this.s.return; return void 0 === n ? Promise.resolve({ value: r, done: !0 }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments)); }, throw: function _throw(r) { var n = this.s.return; return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(r); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertUninitialized = exports.AbstractCursor = exports.CURSOR_FLAGS = void 0;\nvar stream_1 = require(\"stream\");\nvar bson_1 = require(\"../bson\");\nvar error_1 = require(\"../error\");\nvar mongo_types_1 = require(\"../mongo_types\");\nvar execute_operation_1 = require(\"../operations/execute_operation\");\nvar get_more_1 = require(\"../operations/get_more\");\nvar kill_cursors_1 = require(\"../operations/kill_cursors\");\nvar read_concern_1 = require(\"../read_concern\");\nvar read_preference_1 = require(\"../read_preference\");\nvar sessions_1 = require(\"../sessions\");\nvar utils_1 = require(\"../utils\");\n/** @internal */\nvar kId = Symbol('id');\n/** @internal */\nvar kDocuments = Symbol('documents');\n/** @internal */\nvar kServer = Symbol('server');\n/** @internal */\nvar kNamespace = Symbol('namespace');\n/** @internal */\nvar kClient = Symbol('client');\n/** @internal */\nvar kSession = Symbol('session');\n/** @internal */\nvar kOptions = Symbol('options');\n/** @internal */\nvar kTransform = Symbol('transform');\n/** @internal */\nvar kInitialized = Symbol('initialized');\n/** @internal */\nvar kClosed = Symbol('closed');\n/** @internal */\nvar kKilled = Symbol('killed');\n/** @internal */\nvar kInit = Symbol('kInit');\n/** @public */\nexports.CURSOR_FLAGS = ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'exhaust', 'partial'];\n/** @public */\nvar AbstractCursor = /*#__PURE__*/function (_mongo_types_1$TypedE) {\n  _inherits(AbstractCursor, _mongo_types_1$TypedE);\n  /** @internal */\n  function AbstractCursor(client, namespace) {\n    var _this2;\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, AbstractCursor);\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(AbstractCursor).call(this));\n    if (!client.s.isMongoClient) {\n      throw new error_1.MongoRuntimeError('Cursor must be constructed with MongoClient');\n    }\n    _this2[kClient] = client;\n    _this2[kNamespace] = namespace;\n    _this2[kId] = null;\n    _this2[kDocuments] = new utils_1.List();\n    _this2[kInitialized] = false;\n    _this2[kClosed] = false;\n    _this2[kKilled] = false;\n    _this2[kOptions] = _objectSpread({\n      readPreference: options.readPreference && options.readPreference instanceof read_preference_1.ReadPreference ? options.readPreference : read_preference_1.ReadPreference.primary\n    }, (0, bson_1.pluckBSONSerializeOptions)(options));\n    var readConcern = read_concern_1.ReadConcern.fromOptions(options);\n    if (readConcern) {\n      _this2[kOptions].readConcern = readConcern;\n    }\n    if (typeof options.batchSize === 'number') {\n      _this2[kOptions].batchSize = options.batchSize;\n    }\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n      _this2[kOptions].comment = options.comment;\n    }\n    if (typeof options.maxTimeMS === 'number') {\n      _this2[kOptions].maxTimeMS = options.maxTimeMS;\n    }\n    if (typeof options.maxAwaitTimeMS === 'number') {\n      _this2[kOptions].maxAwaitTimeMS = options.maxAwaitTimeMS;\n    }\n    if (options.session instanceof sessions_1.ClientSession) {\n      _this2[kSession] = options.session;\n    } else {\n      _this2[kSession] = _this2[kClient].startSession({\n        owner: _assertThisInitialized(_assertThisInitialized(_this2)),\n        explicit: false\n      });\n    }\n    return _this2;\n  }\n  _createClass(AbstractCursor, [{\n    key: \"bufferedCount\",\n    /** Returns current buffered documents length */value: function bufferedCount() {\n      return this[kDocuments].length;\n    } /** Returns current buffered documents */\n  }, {\n    key: \"readBufferedDocuments\",\n    value: function readBufferedDocuments(number) {\n      var bufferedDocs = [];\n      var documentsToRead = Math.min(number ?? this[kDocuments].length, this[kDocuments].length);\n      for (var count = 0; count < documentsToRead; count++) {\n        var document = this[kDocuments].shift();\n        if (document != null) {\n          bufferedDocs.push(document);\n        }\n      }\n      return bufferedDocs;\n    }\n  }, {\n    key: Symbol.asyncIterator,\n    value: function value() {\n      var _this = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var document, message;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this.closed) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _context.prev = 2;\n            case 3:\n              if (!true) {\n                _context.next = 20;\n                break;\n              }\n              _context.next = 6;\n              return _awaitAsyncGenerator(_this.next());\n            case 6:\n              document = _context.sent;\n              if (!(document === null)) {\n                _context.next = 14;\n                break;\n              }\n              if (_this.closed) {\n                _context.next = 13;\n                break;\n              }\n              message = 'Cursor returned a `null` document, but the cursor is not exhausted.  Mapping documents to `null` is not supported in the cursor transform.';\n              _context.next = 12;\n              return _awaitAsyncGenerator(cleanupCursor(_this, {\n                needsToEmitClosed: true\n              }).catch(function () {\n                return null;\n              }));\n            case 12:\n              throw new error_1.MongoAPIError(message);\n            case 13:\n              return _context.abrupt(\"break\", 20);\n            case 14:\n              _context.next = 16;\n              return document;\n            case 16:\n              if (!(_this[kId] === bson_1.Long.ZERO)) {\n                _context.next = 18;\n                break;\n              }\n              return _context.abrupt(\"break\", 20);\n            case 18:\n              _context.next = 3;\n              break;\n            case 20:\n              _context.prev = 20;\n              if (_this.closed) {\n                _context.next = 24;\n                break;\n              }\n              _context.next = 24;\n              return _awaitAsyncGenerator(_this.close().catch(function () {\n                return null;\n              }));\n            case 24:\n              return _context.finish(20);\n            case 25:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2,, 20, 25]]);\n      }))();\n    }\n  }, {\n    key: \"stream\",\n    value: function stream(options) {\n      if (options?.transform) {\n        var _transform = options.transform;\n        var readable = new ReadableCursorStream(this);\n        return readable.pipe(new stream_1.Transform({\n          objectMode: true,\n          highWaterMark: 1,\n          transform: function transform(chunk, _, callback) {\n            try {\n              var transformed = _transform(chunk);\n              callback(undefined, transformed);\n            } catch (err) {\n              callback(err);\n            }\n          }\n        }));\n      }\n      return new ReadableCursorStream(this);\n    }\n  }, {\n    key: \"hasNext\",\n    value: function () {\n      var _hasNext = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var doc;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(this[kId] === bson_1.Long.ZERO)) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", false);\n            case 2:\n              if (!(this[kDocuments].length !== 0)) {\n                _context2.next = 4;\n                break;\n              }\n              return _context2.abrupt(\"return\", true);\n            case 4:\n              _context2.next = 6;\n              return _next(this, {\n                blocking: true,\n                transform: false\n              });\n            case 6:\n              doc = _context2.sent;\n              if (!doc) {\n                _context2.next = 10;\n                break;\n              }\n              this[kDocuments].unshift(doc);\n              return _context2.abrupt(\"return\", true);\n            case 10:\n              return _context2.abrupt(\"return\", false);\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function hasNext() {\n        return _hasNext.apply(this, arguments);\n      }\n      return hasNext;\n    }() /** Get the next available document from the cursor, returns null if no more documents are available. */\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(this[kId] === bson_1.Long.ZERO)) {\n                _context3.next = 2;\n                break;\n              }\n              throw new error_1.MongoCursorExhaustedError();\n            case 2:\n              return _context3.abrupt(\"return\", _next(this, {\n                blocking: true,\n                transform: true\n              }));\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function next() {\n        return _next2.apply(this, arguments);\n      }\n      return next;\n    }()\n    /**\n     * Try to get the next available document from the cursor or `null` if an empty batch is returned\n     */\n  }, {\n    key: \"tryNext\",\n    value: function () {\n      var _tryNext = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(this[kId] === bson_1.Long.ZERO)) {\n                _context4.next = 2;\n                break;\n              }\n              throw new error_1.MongoCursorExhaustedError();\n            case 2:\n              return _context4.abrupt(\"return\", _next(this, {\n                blocking: false,\n                transform: true\n              }));\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function tryNext() {\n        return _tryNext.apply(this, arguments);\n      }\n      return tryNext;\n    }()\n    /**\n     * Iterates over all the documents for this cursor using the iterator, callback pattern.\n     *\n     * If the iterator returns `false`, iteration will stop.\n     *\n     * @param iterator - The iteration callback.\n     * @deprecated - Will be removed in a future release. Use for await...of instead.\n     */\n  }, {\n    key: \"forEach\",\n    value: function () {\n      var _forEach = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(iterator) {\n        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, document, result;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              if (!(typeof iterator !== 'function')) {\n                _context5.next = 2;\n                break;\n              }\n              throw new error_1.MongoInvalidArgumentError('Argument \"iterator\" must be a function');\n            case 2:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context5.prev = 4;\n              _iterator = _asyncIterator(this);\n            case 6:\n              _context5.next = 8;\n              return _iterator.next();\n            case 8:\n              if (!(_iteratorAbruptCompletion = !(_step = _context5.sent).done)) {\n                _context5.next = 16;\n                break;\n              }\n              document = _step.value;\n              result = iterator(document);\n              if (!(result === false)) {\n                _context5.next = 13;\n                break;\n              }\n              return _context5.abrupt(\"break\", 16);\n            case 13:\n              _iteratorAbruptCompletion = false;\n              _context5.next = 6;\n              break;\n            case 16:\n              _context5.next = 22;\n              break;\n            case 18:\n              _context5.prev = 18;\n              _context5.t0 = _context5[\"catch\"](4);\n              _didIteratorError = true;\n              _iteratorError = _context5.t0;\n            case 22:\n              _context5.prev = 22;\n              _context5.prev = 23;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context5.next = 27;\n                break;\n              }\n              _context5.next = 27;\n              return _iterator.return();\n            case 27:\n              _context5.prev = 27;\n              if (!_didIteratorError) {\n                _context5.next = 30;\n                break;\n              }\n              throw _iteratorError;\n            case 30:\n              return _context5.finish(27);\n            case 31:\n              return _context5.finish(22);\n            case 32:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[4, 18, 22, 32], [23,, 27, 31]]);\n      }));\n      function forEach(_x) {\n        return _forEach.apply(this, arguments);\n      }\n      return forEach;\n    }()\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        var needsToEmitClosed;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              needsToEmitClosed = !this[kClosed];\n              this[kClosed] = true;\n              _context6.next = 4;\n              return cleanupCursor(this, {\n                needsToEmitClosed: needsToEmitClosed\n              });\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function close() {\n        return _close.apply(this, arguments);\n      }\n      return close;\n    }()\n    /**\n     * Returns an array of documents. The caller is responsible for making sure that there\n     * is enough memory to store the results. Note that the array only contains partial\n     * results when this cursor had been previously accessed. In that case,\n     * cursor.rewind() can be used to reset the cursor.\n     */\n  }, {\n    key: \"toArray\",\n    value: function () {\n      var _toArray = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        var array, _iteratorAbruptCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, document;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              array = [];\n              _iteratorAbruptCompletion2 = false;\n              _didIteratorError2 = false;\n              _context7.prev = 3;\n              _iterator2 = _asyncIterator(this);\n            case 5:\n              _context7.next = 7;\n              return _iterator2.next();\n            case 7:\n              if (!(_iteratorAbruptCompletion2 = !(_step2 = _context7.sent).done)) {\n                _context7.next = 13;\n                break;\n              }\n              document = _step2.value;\n              array.push(document);\n            case 10:\n              _iteratorAbruptCompletion2 = false;\n              _context7.next = 5;\n              break;\n            case 13:\n              _context7.next = 19;\n              break;\n            case 15:\n              _context7.prev = 15;\n              _context7.t0 = _context7[\"catch\"](3);\n              _didIteratorError2 = true;\n              _iteratorError2 = _context7.t0;\n            case 19:\n              _context7.prev = 19;\n              _context7.prev = 20;\n              if (!(_iteratorAbruptCompletion2 && _iterator2.return != null)) {\n                _context7.next = 24;\n                break;\n              }\n              _context7.next = 24;\n              return _iterator2.return();\n            case 24:\n              _context7.prev = 24;\n              if (!_didIteratorError2) {\n                _context7.next = 27;\n                break;\n              }\n              throw _iteratorError2;\n            case 27:\n              return _context7.finish(24);\n            case 28:\n              return _context7.finish(19);\n            case 29:\n              return _context7.abrupt(\"return\", array);\n            case 30:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[3, 15, 19, 29], [20,, 24, 28]]);\n      }));\n      function toArray() {\n        return _toArray.apply(this, arguments);\n      }\n      return toArray;\n    }()\n    /**\n     * Add a cursor flag to the cursor\n     *\n     * @param flag - The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'partial' -.\n     * @param value - The flag boolean value.\n     */\n  }, {\n    key: \"addCursorFlag\",\n    value: function addCursorFlag(flag, value) {\n      assertUninitialized(this);\n      if (!exports.CURSOR_FLAGS.includes(flag)) {\n        throw new error_1.MongoInvalidArgumentError(\"Flag \".concat(flag, \" is not one of \").concat(exports.CURSOR_FLAGS));\n      }\n      if (typeof value !== 'boolean') {\n        throw new error_1.MongoInvalidArgumentError(\"Flag \".concat(flag, \" must be a boolean value\"));\n      }\n      this[kOptions][flag] = value;\n      return this;\n    }\n    /**\n     * Map all documents using the provided function\n     * If there is a transform set on the cursor, that will be called first and the result passed to\n     * this function's transform.\n     *\n     * @remarks\n     *\n     * **Note** Cursors use `null` internally to indicate that there are no more documents in the cursor. Providing a mapping\n     * function that maps values to `null` will result in the cursor closing itself before it has finished iterating\n     * all documents.  This will **not** result in a memory leak, just surprising behavior.  For example:\n     *\n     * ```typescript\n     * const cursor = collection.find({});\n     * cursor.map(() => null);\n     *\n     * const documents = await cursor.toArray();\n     * // documents is always [], regardless of how many documents are in the collection.\n     * ```\n     *\n     * Other falsey values are allowed:\n     *\n     * ```typescript\n     * const cursor = collection.find({});\n     * cursor.map(() => '');\n     *\n     * const documents = await cursor.toArray();\n     * // documents is now an array of empty strings\n     * ```\n     *\n     * **Note for Typescript Users:** adding a transform changes the return type of the iteration of this cursor,\n     * it **does not** return a new instance of a cursor. This means when calling map,\n     * you should always assign the result to a new variable in order to get a correctly typed cursor variable.\n     * Take note of the following example:\n     *\n     * @example\n     * ```typescript\n     * const cursor: FindCursor<Document> = coll.find();\n     * const mappedCursor: FindCursor<number> = cursor.map(doc => Object.keys(doc).length);\n     * const keyCounts: number[] = await mappedCursor.toArray(); // cursor.toArray() still returns Document[]\n     * ```\n     * @param transform - The mapping transformation method.\n     */\n  }, {\n    key: \"map\",\n    value: function map(transform) {\n      assertUninitialized(this);\n      var oldTransform = this[kTransform]; // TODO(NODE-3283): Improve transform typing\n      if (oldTransform) {\n        this[kTransform] = function (doc) {\n          return transform(oldTransform(doc));\n        };\n      } else {\n        this[kTransform] = transform;\n      }\n      return this;\n    }\n    /**\n     * Set the ReadPreference for the cursor.\n     *\n     * @param readPreference - The new read preference for the cursor.\n     */\n  }, {\n    key: \"withReadPreference\",\n    value: function withReadPreference(readPreference) {\n      assertUninitialized(this);\n      if (readPreference instanceof read_preference_1.ReadPreference) {\n        this[kOptions].readPreference = readPreference;\n      } else if (typeof readPreference === 'string') {\n        this[kOptions].readPreference = read_preference_1.ReadPreference.fromString(readPreference);\n      } else {\n        throw new error_1.MongoInvalidArgumentError(\"Invalid read preference: \".concat(readPreference));\n      }\n      return this;\n    }\n    /**\n     * Set the ReadPreference for the cursor.\n     *\n     * @param readPreference - The new read preference for the cursor.\n     */\n  }, {\n    key: \"withReadConcern\",\n    value: function withReadConcern(readConcern) {\n      assertUninitialized(this);\n      var resolvedReadConcern = read_concern_1.ReadConcern.fromOptions({\n        readConcern: readConcern\n      });\n      if (resolvedReadConcern) {\n        this[kOptions].readConcern = resolvedReadConcern;\n      }\n      return this;\n    }\n    /**\n     * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n     *\n     * @param value - Number of milliseconds to wait before aborting the query.\n     */\n  }, {\n    key: \"maxTimeMS\",\n    value: function maxTimeMS(value) {\n      assertUninitialized(this);\n      if (typeof value !== 'number') {\n        throw new error_1.MongoInvalidArgumentError('Argument for maxTimeMS must be a number');\n      }\n      this[kOptions].maxTimeMS = value;\n      return this;\n    }\n    /**\n     * Set the batch size for the cursor.\n     *\n     * @param value - The number of documents to return per batch. See {@link https://www.mongodb.com/docs/manual/reference/command/find/|find command documentation}.\n     */\n  }, {\n    key: \"batchSize\",\n    value: function batchSize(value) {\n      assertUninitialized(this);\n      if (this[kOptions].tailable) {\n        throw new error_1.MongoTailableCursorError('Tailable cursor does not support batchSize');\n      }\n      if (typeof value !== 'number') {\n        throw new error_1.MongoInvalidArgumentError('Operation \"batchSize\" requires an integer');\n      }\n      this[kOptions].batchSize = value;\n      return this;\n    }\n    /**\n     * Rewind this cursor to its uninitialized state. Any options that are present on the cursor will\n     * remain in effect. Iterating this cursor will cause new queries to be sent to the server, even\n     * if the resultant data has already been retrieved by this cursor.\n     */\n  }, {\n    key: \"rewind\",\n    value: function rewind() {\n      if (!this[kInitialized]) {\n        return;\n      }\n      this[kId] = null;\n      this[kDocuments].clear();\n      this[kClosed] = false;\n      this[kKilled] = false;\n      this[kInitialized] = false;\n      var session = this[kSession];\n      if (session) {\n        // We only want to end this session if we created it, and it hasn't ended yet\n        if (session.explicit === false) {\n          if (!session.hasEnded) {\n            session.endSession().catch(function () {\n              return null;\n            });\n          }\n          this[kSession] = this.client.startSession({\n            owner: this,\n            explicit: false\n          });\n        }\n      }\n    } /** @internal */\n  }, {\n    key: \"getMore\",\n    value: function () {\n      var _getMore = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(batchSize) {\n        var getMoreOperation;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              getMoreOperation = new get_more_1.GetMoreOperation(this[kNamespace], this[kId], this[kServer], _objectSpread({}, this[kOptions], {\n                session: this[kSession],\n                batchSize: batchSize\n              }));\n              return _context8.abrupt(\"return\", (0, execute_operation_1.executeOperation)(this[kClient], getMoreOperation));\n            case 2:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function getMore(_x2) {\n        return _getMore.apply(this, arguments);\n      }\n      return getMore;\n    }()\n    /**\n     * @internal\n     *\n     * This function is exposed for the unified test runner's createChangeStream\n     * operation.  We cannot refactor to use the abstract _initialize method without\n     * a significant refactor.\n     */\n  }, {\n    key: kInit,\n    value: function () {\n      var _value = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n        var state, response;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.prev = 0;\n              _context9.next = 3;\n              return this._initialize(this[kSession]);\n            case 3:\n              state = _context9.sent;\n              response = state.response;\n              this[kServer] = state.server;\n              if (response.cursor) {\n                // TODO(NODE-2674): Preserve int64 sent from MongoDB\n                this[kId] = typeof response.cursor.id === 'number' ? bson_1.Long.fromNumber(response.cursor.id) : typeof response.cursor.id === 'bigint' ? bson_1.Long.fromBigInt(response.cursor.id) : response.cursor.id;\n                if (response.cursor.ns) {\n                  this[kNamespace] = (0, utils_1.ns)(response.cursor.ns);\n                }\n                this[kDocuments].pushMany(response.cursor.firstBatch);\n              }\n              // When server responses return without a cursor document, we close this cursor\n              // and return the raw server response. This is often the case for explain commands\n              // for example\n              if (this[kId] == null) {\n                this[kId] = bson_1.Long.ZERO;\n                // TODO(NODE-3286): ExecutionResult needs to accept a generic parameter\n                this[kDocuments].push(state.response);\n              }\n              // the cursor is now initialized, even if it is dead\n              this[kInitialized] = true;\n              _context9.next = 17;\n              break;\n            case 11:\n              _context9.prev = 11;\n              _context9.t0 = _context9[\"catch\"](0);\n              // the cursor is now initialized, even if an error occurred\n              this[kInitialized] = true;\n              _context9.next = 16;\n              return cleanupCursor(this, {\n                error: _context9.t0\n              });\n            case 16:\n              throw _context9.t0;\n            case 17:\n              if (!this.isDead) {\n                _context9.next = 20;\n                break;\n              }\n              _context9.next = 20;\n              return cleanupCursor(this, undefined);\n            case 20:\n              return _context9.abrupt(\"return\");\n            case 21:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this, [[0, 11]]);\n      }));\n      function value() {\n        return _value.apply(this, arguments);\n      }\n      return value;\n    }()\n  }, {\n    key: \"id\",\n    get: function get() {\n      return this[kId] ?? undefined;\n    } /** @internal */\n  }, {\n    key: \"isDead\",\n    get: function get() {\n      return (this[kId]?.isZero() ?? false) || this[kClosed] || this[kKilled];\n    } /** @internal */\n  }, {\n    key: \"client\",\n    get: function get() {\n      return this[kClient];\n    } /** @internal */\n  }, {\n    key: \"server\",\n    get: function get() {\n      return this[kServer];\n    }\n  }, {\n    key: \"namespace\",\n    get: function get() {\n      return this[kNamespace];\n    }\n  }, {\n    key: \"readPreference\",\n    get: function get() {\n      return this[kOptions].readPreference;\n    }\n  }, {\n    key: \"readConcern\",\n    get: function get() {\n      return this[kOptions].readConcern;\n    } /** @internal */\n  }, {\n    key: \"session\",\n    get: function get() {\n      return this[kSession];\n    },\n    set: function set(clientSession) {\n      this[kSession] = clientSession;\n    } /** @internal */\n  }, {\n    key: \"cursorOptions\",\n    get: function get() {\n      return this[kOptions];\n    }\n  }, {\n    key: \"closed\",\n    get: function get() {\n      return this[kClosed];\n    }\n  }, {\n    key: \"killed\",\n    get: function get() {\n      return this[kKilled];\n    }\n  }, {\n    key: \"loadBalanced\",\n    get: function get() {\n      return !!this[kClient].topology?.loadBalanced;\n    }\n  }]);\n  return AbstractCursor;\n}(mongo_types_1.TypedEventEmitter);\n/** @event */\nAbstractCursor.CLOSE = 'close';\nexports.AbstractCursor = AbstractCursor;\n/**\n * @param cursor - the cursor on which to call `next`\n * @param blocking - a boolean indicating whether or not the cursor should `block` until data\n *     is available.  Generally, this flag is set to `false` because if the getMore returns no documents,\n *     the cursor has been exhausted.  In certain scenarios (ChangeStreams, tailable await cursors and\n *     `tryNext`, for example) blocking is necessary because a getMore returning no documents does\n *     not indicate the end of the cursor.\n * @param transform - if true, the cursor's transform function is applied to the result document (if the transform exists)\n * @returns the next document in the cursor, or `null`.  When `blocking` is `true`, a `null` document means\n * the cursor has been exhausted.  Otherwise, it means that there is no document available in the cursor's buffer.\n */\nfunction _next(_x3, _x4) {\n  return _next3.apply(this, arguments);\n}\nfunction _next3() {\n  _next3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(cursor, _ref) {\n    var blocking, transform, doc, batchSize, response, cursorId;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          blocking = _ref.blocking, transform = _ref.transform;\n          if (!cursor.closed) {\n            _context10.next = 3;\n            break;\n          }\n          return _context10.abrupt(\"return\", null);\n        case 3:\n          if (!(cursor[kId] == null)) {\n            _context10.next = 6;\n            break;\n          }\n          _context10.next = 6;\n          return cursor[kInit]();\n        case 6:\n          if (!(cursor[kDocuments].length !== 0)) {\n            _context10.next = 19;\n            break;\n          }\n          doc = cursor[kDocuments].shift();\n          if (!(doc != null && transform && cursor[kTransform])) {\n            _context10.next = 18;\n            break;\n          }\n          _context10.prev = 9;\n          return _context10.abrupt(\"return\", cursor[kTransform](doc));\n        case 13:\n          _context10.prev = 13;\n          _context10.t0 = _context10[\"catch\"](9);\n          _context10.next = 17;\n          return cleanupCursor(cursor, {\n            error: _context10.t0,\n            needsToEmitClosed: true\n          }).catch(function () {\n            return null;\n          });\n        case 17:\n          throw _context10.t0;\n        case 18:\n          return _context10.abrupt(\"return\", doc);\n        case 19:\n          if (!cursor.isDead) {\n            _context10.next = 23;\n            break;\n          }\n          _context10.next = 22;\n          return cleanupCursor(cursor, {});\n        case 22:\n          return _context10.abrupt(\"return\", null);\n        case 23:\n          // otherwise need to call getMore\n          batchSize = cursor[kOptions].batchSize || 1000;\n          _context10.prev = 24;\n          _context10.next = 27;\n          return cursor.getMore(batchSize);\n        case 27:\n          response = _context10.sent;\n          if (response) {\n            cursorId = typeof response.cursor.id === 'number' ? bson_1.Long.fromNumber(response.cursor.id) : typeof response.cursor.id === 'bigint' ? bson_1.Long.fromBigInt(response.cursor.id) : response.cursor.id;\n            cursor[kDocuments].pushMany(response.cursor.nextBatch);\n            cursor[kId] = cursorId;\n          }\n          _context10.next = 36;\n          break;\n        case 31:\n          _context10.prev = 31;\n          _context10.t1 = _context10[\"catch\"](24);\n          _context10.next = 35;\n          return cleanupCursor(cursor, {\n            error: _context10.t1\n          }).catch(function () {\n            return null;\n          });\n        case 35:\n          throw _context10.t1;\n        case 36:\n          if (!cursor.isDead) {\n            _context10.next = 39;\n            break;\n          }\n          _context10.next = 39;\n          return cleanupCursor(cursor, {});\n        case 39:\n          if (!(cursor[kDocuments].length === 0 && blocking === false)) {\n            _context10.next = 41;\n            break;\n          }\n          return _context10.abrupt(\"return\", null);\n        case 41:\n          if (!cursor.isDead || cursor[kDocuments].length !== 0) {\n            _context10.next = 3;\n            break;\n          }\n        case 42:\n          return _context10.abrupt(\"return\", null);\n        case 43:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10, null, [[9, 13], [24, 31]]);\n  }));\n  return _next3.apply(this, arguments);\n}\nfunction cleanupCursor(_x5, _x6) {\n  return _cleanupCursor.apply(this, arguments);\n}\n/** @internal */\nfunction _cleanupCursor() {\n  _cleanupCursor = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(cursor, options) {\n    var cursorId, cursorNs, server, session, error, needsToEmitClosed, completeCleanup, _completeCleanup;\n    return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n      while (1) switch (_context12.prev = _context12.next) {\n        case 0:\n          _completeCleanup = function _completeCleanup3() {\n            _completeCleanup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n              return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n                while (1) switch (_context11.prev = _context11.next) {\n                  case 0:\n                    if (!session) {\n                      _context11.next = 10;\n                      break;\n                    }\n                    if (!(session.owner === cursor)) {\n                      _context11.next = 9;\n                      break;\n                    }\n                    _context11.prev = 2;\n                    _context11.next = 5;\n                    return session.endSession({\n                      error: error\n                    });\n                  case 5:\n                    _context11.prev = 5;\n                    cursor.emit(AbstractCursor.CLOSE);\n                    return _context11.finish(5);\n                  case 8:\n                    return _context11.abrupt(\"return\");\n                  case 9:\n                    if (!session.inTransaction()) {\n                      (0, sessions_1.maybeClearPinnedConnection)(session, {\n                        error: error\n                      });\n                    }\n                  case 10:\n                    cursor.emit(AbstractCursor.CLOSE);\n                    return _context11.abrupt(\"return\");\n                  case 12:\n                  case \"end\":\n                    return _context11.stop();\n                }\n              }, _callee11, null, [[2,, 5, 8]]);\n            }));\n            return _completeCleanup.apply(this, arguments);\n          };\n          completeCleanup = function _completeCleanup2() {\n            return _completeCleanup.apply(this, arguments);\n          };\n          cursorId = cursor[kId];\n          cursorNs = cursor[kNamespace];\n          server = cursor[kServer];\n          session = cursor[kSession];\n          error = options?.error; // Cursors only emit closed events once the client-side cursor has been exhausted fully or there\n          // was an error.  Notably, when the server returns a cursor id of 0 and a non-empty batch, we\n          // cleanup the cursor but don't emit a `close` event.\n          needsToEmitClosed = options?.needsToEmitClosed ?? cursor[kDocuments].length === 0;\n          if (!error) {\n            _context12.next = 11;\n            break;\n          }\n          if (!(cursor.loadBalanced && error instanceof error_1.MongoNetworkError)) {\n            _context12.next = 11;\n            break;\n          }\n          return _context12.abrupt(\"return\", completeCleanup());\n        case 11:\n          if (!(cursorId == null || server == null || cursorId.isZero() || cursorNs == null)) {\n            _context12.next = 20;\n            break;\n          }\n          if (needsToEmitClosed) {\n            cursor[kClosed] = true;\n            cursor[kId] = bson_1.Long.ZERO;\n            cursor.emit(AbstractCursor.CLOSE);\n          }\n          if (!session) {\n            _context12.next = 19;\n            break;\n          }\n          if (!(session.owner === cursor)) {\n            _context12.next = 18;\n            break;\n          }\n          _context12.next = 17;\n          return session.endSession({\n            error: error\n          });\n        case 17:\n          return _context12.abrupt(\"return\");\n        case 18:\n          if (!session.inTransaction()) {\n            (0, sessions_1.maybeClearPinnedConnection)(session, {\n              error: error\n            });\n          }\n        case 19:\n          return _context12.abrupt(\"return\");\n        case 20:\n          cursor[kKilled] = true;\n          if (!session.hasEnded) {\n            _context12.next = 23;\n            break;\n          }\n          return _context12.abrupt(\"return\", completeCleanup());\n        case 23:\n          _context12.prev = 23;\n          _context12.next = 26;\n          return (0, execute_operation_1.executeOperation)(cursor[kClient], new kill_cursors_1.KillCursorsOperation(cursorId, cursorNs, server, {\n            session: session\n          })).catch(function () {\n            return null;\n          });\n        case 26:\n          _context12.prev = 26;\n          _context12.next = 29;\n          return completeCleanup();\n        case 29:\n          return _context12.finish(26);\n        case 30:\n        case \"end\":\n          return _context12.stop();\n      }\n    }, _callee12, null, [[23,, 26, 30]]);\n  }));\n  return _cleanupCursor.apply(this, arguments);\n}\nfunction assertUninitialized(cursor) {\n  if (cursor[kInitialized]) {\n    throw new error_1.MongoCursorInUseError();\n  }\n}\nexports.assertUninitialized = assertUninitialized;\nvar ReadableCursorStream = /*#__PURE__*/function (_stream_1$Readable) {\n  _inherits(ReadableCursorStream, _stream_1$Readable);\n  function ReadableCursorStream(cursor) {\n    var _this3;\n    _classCallCheck(this, ReadableCursorStream);\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(ReadableCursorStream).call(this, {\n      objectMode: true,\n      autoDestroy: false,\n      highWaterMark: 1\n    }));\n    _this3._readInProgress = false;\n    _this3._cursor = cursor;\n    return _this3;\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  _createClass(ReadableCursorStream, [{\n    key: \"_read\",\n    value: function _read(size) {\n      if (!this._readInProgress) {\n        this._readInProgress = true;\n        this._readNext();\n      }\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy(error, callback) {\n      this._cursor.close().then(function () {\n        return callback(error);\n      }, function (closeError) {\n        return callback(closeError);\n      });\n    }\n  }, {\n    key: \"_readNext\",\n    value: function _readNext() {\n      var _this4 = this;\n      _next(this._cursor, {\n        blocking: true,\n        transform: true\n      }).then(function (result) {\n        if (result == null) {\n          _this4.push(null);\n        } else if (_this4.destroyed) {\n          _this4._cursor.close().catch(function () {\n            return null;\n          });\n        } else {\n          if (_this4.push(result)) {\n            return _this4._readNext();\n          }\n          _this4._readInProgress = false;\n        }\n      }, function (err) {\n        // NOTE: This is questionable, but we have a test backing the behavior. It seems the\n        //       desired behavior is that a stream ends cleanly when a user explicitly closes\n        //       a client during iteration. Alternatively, we could do the \"right\" thing and\n        //       propagate the error message by removing this special case.\n        if (err.message.match(/server is closed/)) {\n          _this4._cursor.close().catch(function () {\n            return null;\n          });\n          return _this4.push(null);\n        }\n        // NOTE: This is also perhaps questionable. The rationale here is that these errors tend\n        //       to be \"operation was interrupted\", where a cursor has been closed but there is an\n        //       active getMore in-flight. This used to check if the cursor was killed but once\n        //       that changed to happen in cleanup legitimate errors would not destroy the\n        //       stream. There are change streams test specifically test these cases.\n        if (err.message.match(/operation was interrupted/)) {\n          return _this4.push(null);\n        }\n        // NOTE: The two above checks on the message of the error will cause a null to be pushed\n        //       to the stream, thus closing the stream before the destroy call happens. This means\n        //       that either of those error messages on a change stream will not get a proper\n        //       'error' event to be emitted (the error passed to destroy). Change stream resumability\n        //       relies on that error event to be emitted to create its new cursor and thus was not\n        //       working on 4.4 servers because the error emitted on failover was \"interrupted at\n        //       shutdown\" while on 5.0+ it is \"The server is in quiesce mode and will shut down\".\n        //       See NODE-4475.\n        return _this4.destroy(err);\n      });\n    }\n  }]);\n  return ReadableCursorStream;\n}(stream_1.Readable);","map":{"version":3,"names":["stream_1","require","bson_1","error_1","mongo_types_1","execute_operation_1","get_more_1","kill_cursors_1","read_concern_1","read_preference_1","sessions_1","utils_1","kId","Symbol","kDocuments","kServer","kNamespace","kClient","kSession","kOptions","kTransform","kInitialized","kClosed","kKilled","kInit","exports","CURSOR_FLAGS","AbstractCursor","_mongo_types_1$TypedE","_inherits","client","namespace","_this2","options","arguments","length","undefined","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","s","isMongoClient","MongoRuntimeError","List","_objectSpread","readPreference","ReadPreference","primary","pluckBSONSerializeOptions","readConcern","ReadConcern","fromOptions","batchSize","comment","maxTimeMS","maxAwaitTimeMS","session","ClientSession","startSession","owner","_assertThisInitialized","explicit","_createClass","key","value","bufferedCount","readBufferedDocuments","number","bufferedDocs","documentsToRead","Math","min","count","document","shift","push","asyncIterator","_this","_wrapAsyncGenerator","_regeneratorRuntime","mark","_callee","message","wrap","_callee$","_context","prev","next","closed","abrupt","_awaitAsyncGenerator","sent","cleanupCursor","needsToEmitClosed","catch","MongoAPIError","Long","ZERO","close","finish","stop","stream","transform","readable","ReadableCursorStream","pipe","Transform","objectMode","highWaterMark","chunk","_","callback","transformed","err","_hasNext","_asyncToGenerator","_callee2","doc","_callee2$","_context2","blocking","unshift","hasNext","apply","_next2","_callee3","_callee3$","_context3","MongoCursorExhaustedError","_tryNext","_callee4","_callee4$","_context4","tryNext","_forEach","_callee5","iterator","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","result","_callee5$","_context5","MongoInvalidArgumentError","_asyncIterator","done","t0","return","forEach","_x","_close","_callee6","_callee6$","_context6","_toArray","_callee7","array","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_callee7$","_context7","toArray","addCursorFlag","flag","assertUninitialized","includes","concat","map","oldTransform","withReadPreference","fromString","withReadConcern","resolvedReadConcern","tailable","MongoTailableCursorError","rewind","clear","hasEnded","endSession","_getMore","_callee8","getMoreOperation","_callee8$","_context8","GetMoreOperation","executeOperation","getMore","_x2","_value","_callee9","state","response","_callee9$","_context9","_initialize","server","cursor","id","fromNumber","fromBigInt","ns","pushMany","firstBatch","error","isDead","get","isZero","set","clientSession","topology","loadBalanced","TypedEventEmitter","CLOSE","_x3","_x4","_next3","_callee10","_ref","cursorId","_callee10$","_context10","nextBatch","t1","_x5","_x6","_cleanupCursor","_callee12","cursorNs","completeCleanup","_completeCleanup","_callee12$","_context12","_completeCleanup3","_callee11","_callee11$","_context11","emit","inTransaction","maybeClearPinnedConnection","_completeCleanup2","MongoNetworkError","KillCursorsOperation","MongoCursorInUseError","_stream_1$Readable","_this3","autoDestroy","_readInProgress","_cursor","_read","size","_readNext","_destroy","then","closeError","_this4","destroyed","match","destroy","Readable"],"sources":["../../src/cursor/abstract_cursor.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}