{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _objectSpread = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar is_1 = require(\"@sindresorhus/is\");\nvar normalizeArguments = function normalizeArguments(options, defaults) {\n  if (is_1.default.null_(options.encoding)) {\n    throw new TypeError('To get a Buffer, set `options.responseType` to `buffer` instead');\n  }\n  is_1.assert.any([is_1.default.string, is_1.default.undefined], options.encoding);\n  is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.resolveBodyOnly);\n  is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.methodRewriting);\n  is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.isStream);\n  is_1.assert.any([is_1.default.string, is_1.default.undefined], options.responseType);\n  // `options.responseType`\n  if (options.responseType === undefined) {\n    options.responseType = 'text';\n  }\n  // `options.retry`\n  var retry = options.retry;\n  if (defaults) {\n    options.retry = _objectSpread({}, defaults.retry);\n  } else {\n    options.retry = {\n      calculateDelay: function calculateDelay(retryObject) {\n        return retryObject.computedValue;\n      },\n      limit: 0,\n      methods: [],\n      statusCodes: [],\n      errorCodes: [],\n      maxRetryAfter: undefined\n    };\n  }\n  if (is_1.default.object(retry)) {\n    options.retry = _objectSpread({}, options.retry, retry);\n    options.retry.methods = _toConsumableArray(new Set(options.retry.methods.map(function (method) {\n      return method.toUpperCase();\n    })));\n    options.retry.statusCodes = _toConsumableArray(new Set(options.retry.statusCodes));\n    options.retry.errorCodes = _toConsumableArray(new Set(options.retry.errorCodes));\n  } else if (is_1.default.number(retry)) {\n    options.retry.limit = retry;\n  }\n  if (is_1.default.undefined(options.retry.maxRetryAfter)) {\n    options.retry.maxRetryAfter = Math.min.apply(Math, _toConsumableArray([options.timeout.request, options.timeout.connect].filter(is_1.default.number)));\n  }\n  // `options.pagination`\n  if (is_1.default.object(options.pagination)) {\n    if (defaults) {\n      options.pagination = _objectSpread({}, defaults.pagination, options.pagination);\n    }\n    var pagination = options.pagination;\n    if (!is_1.default.function_(pagination.transform)) {\n      throw new Error('`options.pagination.transform` must be implemented');\n    }\n    if (!is_1.default.function_(pagination.shouldContinue)) {\n      throw new Error('`options.pagination.shouldContinue` must be implemented');\n    }\n    if (!is_1.default.function_(pagination.filter)) {\n      throw new TypeError('`options.pagination.filter` must be implemented');\n    }\n    if (!is_1.default.function_(pagination.paginate)) {\n      throw new Error('`options.pagination.paginate` must be implemented');\n    }\n  }\n  // JSON mode\n  if (options.responseType === 'json' && options.headers.accept === undefined) {\n    options.headers.accept = 'application/json';\n  }\n  return options;\n};\nexports.default = normalizeArguments;","map":null,"metadata":{},"sourceType":"script"}