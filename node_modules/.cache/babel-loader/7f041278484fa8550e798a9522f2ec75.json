{"ast":null,"code":"var _construct = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/construct\");\nvar _asyncToGenerator = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nvar _toConsumableArray = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _classCallCheck = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nvar _require = require('util'),\n  inspect = _require.inspect;\nvar isObject = require('../help/is_object');\nvar _require2 = require('../jwk/generate'),\n  _generate = _require2.generate,\n  _generateSync = _require2.generateSync;\nvar _require3 = require('../help/consts'),\n  USES_MAPPING = _require3.USES_MAPPING;\nvar _require4 = require('../jwk'),\n  isKey = _require4.isKey,\n  importKey = _require4.asKey;\nvar keyscore = function keyscore(key, _ref) {\n  var alg = _ref.alg,\n    use = _ref.use,\n    ops = _ref.ops;\n  var score = 0;\n  if (alg && key.alg) {\n    score++;\n  }\n  if (use && key.use) {\n    score++;\n  }\n  if (ops && key.key_ops) {\n    score++;\n  }\n  return score;\n};\nvar KeyStore = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function KeyStore() {\n    for (var _len = arguments.length, keys = new Array(_len), _key = 0; _key < _len; _key++) {\n      keys[_key] = arguments[_key];\n    }\n    _classCallCheck(this, KeyStore);\n    while (keys.some(Array.isArray)) {\n      keys = keys.flat ? keys.flat() : keys.reduce(function (acc, val) {\n        if (Array.isArray(val)) {\n          return [].concat(_toConsumableArray(acc), _toConsumableArray(val));\n        }\n        acc.push(val);\n        return acc;\n      }, []);\n    }\n    if (keys.some(function (k) {\n      return !isKey(k) || !k.kty;\n    })) {\n      throw new TypeError('all keys must be instances of a key instantiated by JWK.asKey');\n    }\n    this._keys = new Set(keys);\n  }\n  _createClass(KeyStore, [{\n    key: \"all\",\n    value: function all() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        alg = _ref2.alg,\n        kid = _ref2.kid,\n        thumbprint = _ref2.thumbprint,\n        use = _ref2.use,\n        kty = _ref2.kty,\n        ops = _ref2.key_ops,\n        x5t = _ref2.x5t,\n        x5t256 = _ref2['x5t#S256'],\n        crv = _ref2.crv;\n      if (ops !== undefined && (!Array.isArray(ops) || !ops.length || ops.some(function (x) {\n        return typeof x !== 'string';\n      }))) {\n        throw new TypeError('`key_ops` must be a non-empty array of strings');\n      }\n      var search = {\n        alg: alg,\n        use: use,\n        ops: ops\n      };\n      return _toConsumableArray(this._keys).filter(function (key) {\n        var candidate = true;\n        if (candidate && kid !== undefined && key.kid !== kid) {\n          candidate = false;\n        }\n        if (candidate && thumbprint !== undefined && key.thumbprint !== thumbprint) {\n          candidate = false;\n        }\n        if (candidate && x5t !== undefined && key.x5t !== x5t) {\n          candidate = false;\n        }\n        if (candidate && x5t256 !== undefined && key['x5t#S256'] !== x5t256) {\n          candidate = false;\n        }\n        if (candidate && kty !== undefined && key.kty !== kty) {\n          candidate = false;\n        }\n        if (candidate && crv !== undefined && key.crv !== crv) {\n          candidate = false;\n        }\n        if (alg !== undefined && !key.algorithms().has(alg)) {\n          candidate = false;\n        }\n        if (candidate && use !== undefined && key.use !== undefined && key.use !== use) {\n          candidate = false;\n        }\n\n        // TODO:\n        if (candidate && ops !== undefined && (key.key_ops !== undefined || key.use !== undefined)) {\n          var keyOps;\n          if (key.key_ops) {\n            keyOps = new Set(key.key_ops);\n          } else {\n            keyOps = USES_MAPPING[key.use];\n          }\n          if (ops.some(function (x) {\n            return !keyOps.has(x);\n          })) {\n            candidate = false;\n          }\n        }\n        return candidate;\n      }).sort(function (first, second) {\n        return keyscore(second, search) - keyscore(first, search);\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function get() {\n      return this.all.apply(this, arguments)[0];\n    }\n  }, {\n    key: \"add\",\n    value: function add(key) {\n      if (!isKey(key) || !key.kty) {\n        throw new TypeError('key must be an instance of a key instantiated by JWK.asKey');\n      }\n      this._keys.add(key);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(key) {\n      if (!isKey(key)) {\n        throw new TypeError('key must be an instance of a key instantiated by JWK.asKey');\n      }\n      this._keys.delete(key);\n    }\n  }, {\n    key: \"toJWKS\",\n    value: function toJWKS() {\n      var priv = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      return {\n        keys: _toConsumableArray(this._keys.values()).map(function (key) {\n          return key.toJWK(priv && (key.private || key.secret && key.k));\n        })\n      };\n    }\n  }, {\n    key: \"generate\",\n    value: function () {\n      var _generate2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.t0 = this._keys;\n              _context.next = 3;\n              return _generate.apply(void 0, _args);\n            case 3:\n              _context.t1 = _context.sent;\n              _context.t0.add.call(_context.t0, _context.t1);\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function generate() {\n        return _generate2.apply(this, arguments);\n      }\n      return generate;\n    }()\n  }, {\n    key: \"generateSync\",\n    value: function generateSync() {\n      this._keys.add(_generateSync.apply(void 0, arguments));\n    }\n  }, {\n    key: inspect.custom,\n    /* c8 ignore next 8 */value: function value() {\n      return \"\".concat(this.constructor.name, \" \").concat(inspect(this.toJWKS(false), {\n        depth: Infinity,\n        colors: process.stdout.isTTY,\n        compact: false,\n        sorted: true\n      }));\n    }\n  }, {\n    key: Symbol.iterator,\n    value: /*#__PURE__*/_regeneratorRuntime().mark(function value() {\n      var _iterator, _step, key;\n      return _regeneratorRuntime().wrap(function value$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _iterator = _createForOfIteratorHelper(this._keys);\n            _context2.prev = 1;\n            _iterator.s();\n          case 3:\n            if ((_step = _iterator.n()).done) {\n              _context2.next = 9;\n              break;\n            }\n            key = _step.value;\n            _context2.next = 7;\n            return key;\n          case 7:\n            _context2.next = 3;\n            break;\n          case 9:\n            _context2.next = 14;\n            break;\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](1);\n            _iterator.e(_context2.t0);\n          case 14:\n            _context2.prev = 14;\n            _iterator.f();\n            return _context2.finish(14);\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, value, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: \"size\",\n    get: function get() {\n      return this._keys.size;\n    }\n  }]);\n  return KeyStore;\n}();\nfunction asKeyStore(jwks) {\n  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref3$ignoreErrors = _ref3.ignoreErrors,\n    ignoreErrors = _ref3$ignoreErrors === void 0 ? false : _ref3$ignoreErrors,\n    _ref3$calculateMissin = _ref3.calculateMissingRSAPrimes,\n    calculateMissingRSAPrimes = _ref3$calculateMissin === void 0 ? false : _ref3$calculateMissin;\n  if (!isObject(jwks) || !Array.isArray(jwks.keys) || jwks.keys.some(function (k) {\n    return !isObject(k) || !('kty' in k);\n  })) {\n    throw new TypeError('jwks must be a JSON Web Key Set formatted object');\n  }\n  var keys = jwks.keys.map(function (jwk) {\n    try {\n      return importKey(jwk, {\n        calculateMissingRSAPrimes: calculateMissingRSAPrimes\n      });\n    } catch (err) {\n      if (!ignoreErrors) {\n        throw err;\n      }\n      return undefined;\n    }\n  }).filter(Boolean);\n  return _construct(KeyStore, _toConsumableArray(keys));\n}\nmodule.exports = {\n  KeyStore: KeyStore,\n  asKeyStore: asKeyStore\n};","map":null,"metadata":{},"sourceType":"script"}