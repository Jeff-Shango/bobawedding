{"ast":null,"code":"// ablyFunctions.js\n\nconst Ably = require('ably');\nconst express = require('express');\nconst app = express();\nconst dotenv = require('dotenv');\ndotenv.config(); // Load environment variables from .env\n\nconst ably = new Ably.Realtime({\n  key: process.env.REACT_APP_ABLY_API_KEY // Use the environment variable\n});\n\n// Route to generate Ably tokens\napp.post('/generate-token', (req, res) => {\n  const tokenRequestData = {\n    clientId: req.body.clientId // You can pass client-specific data here\n  };\n\n  ably.auth.createTokenRequest(tokenRequestData, (err, tokenRequest) => {\n    if (err) {\n      return res.status(500).json({\n        error: 'Token generation failed'\n      });\n    }\n    res.json({\n      tokenRequest\n    });\n  });\n});\n\n// Function to generate Ably token\nconst generateAblyToken = async clientId => {\n  return new Promise((resolve, reject) => {\n    const tokenRequestData = {\n      clientId // Pass the client ID as an argument\n    };\n\n    ably.auth.createTokenRequest(tokenRequestData, (err, tokenRequest) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve({\n          tokenRequest\n        });\n      }\n    });\n  });\n};\nmodule.exports = {\n  generateAblyToken // Export the function so you can import it in other files\n};","map":{"version":3,"names":["Ably","require","express","app","dotenv","config","ably","Realtime","key","process","env","REACT_APP_ABLY_API_KEY","post","req","res","tokenRequestData","clientId","body","auth","createTokenRequest","err","tokenRequest","status","json","error","generateAblyToken","Promise","resolve","reject","module","exports"],"sources":["/home/jeff/bobawedding/src/serverFunctions/ablyFunctions.js"],"sourcesContent":["// ablyFunctions.js\n\nconst Ably = require('ably');\nconst express = require('express');\nconst app = express();\n\nconst dotenv = require('dotenv');\ndotenv.config(); // Load environment variables from .env\n\nconst ably = new Ably.Realtime({\n  key: process.env.REACT_APP_ABLY_API_KEY, // Use the environment variable\n});\n\n// Route to generate Ably tokens\napp.post('/generate-token', (req, res) => {\n  const tokenRequestData = {\n    clientId: req.body.clientId, // You can pass client-specific data here\n  };\n\n  ably.auth.createTokenRequest(tokenRequestData, (err, tokenRequest) => {\n    if (err) {\n      return res.status(500).json({ error: 'Token generation failed' });\n    }\n\n    res.json({ tokenRequest });\n  });\n});\n\n// Function to generate Ably token\nconst generateAblyToken = async (clientId) => {\n  return new Promise((resolve, reject) => {\n    const tokenRequestData = {\n      clientId, // Pass the client ID as an argument\n    };\n\n    ably.auth.createTokenRequest(tokenRequestData, (err, tokenRequest) => {\n      if (err) {\n        reject(err);\n      } else {\n        resolve({ tokenRequest });\n      }\n    });\n  });\n};\n\nmodule.exports = {\n  generateAblyToken, // Export the function so you can import it in other files\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAS,CAAC;AAClC,MAAME,GAAG,GAAGD,OAAO,CAAC,CAAC;AAErB,MAAME,MAAM,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAChCG,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;;AAEjB,MAAMC,IAAI,GAAG,IAAIN,IAAI,CAACO,QAAQ,CAAC;EAC7BC,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CAAE;AAC3C,CAAC,CAAC;;AAEF;AACAR,GAAG,CAACS,IAAI,CAAC,iBAAiB,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACxC,MAAMC,gBAAgB,GAAG;IACvBC,QAAQ,EAAEH,GAAG,CAACI,IAAI,CAACD,QAAQ,CAAE;EAC/B,CAAC;;EAEDV,IAAI,CAACY,IAAI,CAACC,kBAAkB,CAACJ,gBAAgB,EAAE,CAACK,GAAG,EAAEC,YAAY,KAAK;IACpE,IAAID,GAAG,EAAE;MACP,OAAON,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAAEC,KAAK,EAAE;MAA0B,CAAC,CAAC;IACnE;IAEAV,GAAG,CAACS,IAAI,CAAC;MAAEF;IAAa,CAAC,CAAC;EAC5B,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA,MAAMI,iBAAiB,GAAG,MAAOT,QAAQ,IAAK;EAC5C,OAAO,IAAIU,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMb,gBAAgB,GAAG;MACvBC,QAAQ,CAAE;IACZ,CAAC;;IAEDV,IAAI,CAACY,IAAI,CAACC,kBAAkB,CAACJ,gBAAgB,EAAE,CAACK,GAAG,EAAEC,YAAY,KAAK;MACpE,IAAID,GAAG,EAAE;QACPQ,MAAM,CAACR,GAAG,CAAC;MACb,CAAC,MAAM;QACLO,OAAO,CAAC;UAAEN;QAAa,CAAC,CAAC;MAC3B;IACF,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC;AAEDQ,MAAM,CAACC,OAAO,GAAG;EACfL,iBAAiB,CAAE;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}