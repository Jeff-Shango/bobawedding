{"ast":null,"code":"import _objectSpread from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/jeff/bobawedding/src/weddingCommentServer/Comments.jsx\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nimport React, { useEffect, useState } from 'react';\nimport WedComment from './Comment.jsx';\nimport CommentForm from './CommentForm.jsx';\nimport axios from 'axios';\nvar WedComments = function WedComments(_ref) {\n  var imageId = _ref.imageId,\n    currentUserId = _ref.currentUserId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    backendComments = _useState2[0],\n    setBackendComments = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    activeComment = _useState4[0],\n    setActiveComment = _useState4[1]; // const getReplies = commentId => {\n  //     return backendComments\n  //     .filter((backendComment) => backendComment.comment === commentId)\n  //     .sort( \n  //         (a, b) => \n  //             new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime())\n  // };\n  var getReplies = function getReplies(commendId) {\n    return backendComments.filter(function (backendComment) {\n      return backendComment.parentId === commendId;\n    }).sort(function (a, b) {\n      return new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime();\n    });\n  };\n  //     const addComment = (text, parentId) => {\n  //         console.log(\"addComment\", text, parentId);\n  //         createCommentApi(text, parentId).then(comment => {\n  //             setBackendComments([comment, ...backendComments])\n  //             setActiveComment(null)\n  //         })\n  //     };\n\n  //     const deleteComment = (commentId) => {\n  // if (window.confirm('Sure about deleting this?')) {\n  //     deleteCommentApi(commentId).then(() => {\n  //         const updatedBackendComments = backendComments.filter((backendComment) => backendComment.id !== commentId);\n  //         setBackendComments(updatedBackendComments);\n  //     })\n  // }\n  //     }\n\n  //     const updateComment = (text, commentId) => {\n  //         updateCommentApi(text, commentId).then(() => {\n  //             const updatedBackendComments = backendComments.map(backendComment => {\n  //                 if (backendComment.id === commentId) {\n  //                     return { ...backendComment, body: text };\n  //                 }\n  //                 return backendComment;\n  //             });\n  //             setBackendComments(updatedBackendComments);\n  //             setActiveComment(null)\n  //         });\n  //     };\n\n  // useEffect(() => {\n  // getCommentsApi().then((data) => {\n  //     setBackendComments(data);\n  // });\n  // }, []);\n\n  // useEffect(() => {\n  //     getComments().then((data) => {\n  //         setBackendComments(data);\n  //     });\n  // }, []);\n\n  //     useEffect(() => {\n  //         const fetchComments = async () => {\n  //             try {\n  //                 const response = await fetch(`/comments/${imageId}`);\n  //                 if (response.ok) {\n  //                     const comments = await response.json();\n  //                     setBackendComments(comments);\n  //                 } else {\n  //                 console.error('Failed to fetch the wedding comments');\n  //             }\n  //         } catch (error) {\n  //                 console.error('error with fetching the wedding comments:', error);\n  //             }\n  //     };\n\n  //     fetchComments();\n  // }, []);\n\n  useEffect(function () {\n    var fetchComments = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var response, comments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              console.log(\"Sending GET request to fetch comments with imageId:\", imageId);\n              _context.next = 4;\n              return axios.get(\"http://localhost:3012/comments/\".concat(imageId), {\n                // Request body goes here, if you have any data to send\n              });\n            case 4:\n              response = _context.sent;\n              console.log(\"Response status:\", response.status);\n              if (response.status === 200) {\n                comments = response.data;\n                console.log(\"Received comments:\", comments);\n                setBackendComments(comments);\n              } else {\n                console.error('Failed to fetch the wedding comments');\n              }\n              _context.next = 12;\n              break;\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.error('Error with fetching the wedding comments:', _context.t0);\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 9]]);\n      }));\n      return function fetchComments() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    fetchComments();\n  }, [imageId]);\n\n  // useEffect(() => {\n  //   const fetchComments = async () => {\n  //       try {\n  //           const response = await fetch(`/comments/${imageId}`); // Use the provided imageId\n  //           if (response.ok) {\n  //               const comments = await response.json();\n  //               setBackendComments(comments);\n  //           } else {\n  //               console.error('Failed to fetch the wedding comments');\n  //           }\n  //       } catch (error) {\n  //           console.error('Error with fetching the wedding comments:', error);\n\n  //       }\n\n  //   };\n\n  //   fetchComments();\n  // }, [imageId]); // Include 'imageId' as a dependency\n\n  // const rootComments = backendComments.filter(\n  // (backendComment) => backendComment.parentId === null\n  // );\n\n  var addComment = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(text, commentator) {\n      var response, newComment;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return fetch('http://localhost:3012/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                comment: text,\n                commentator: commentator\n              })\n            });\n          case 3:\n            response = _context2.sent;\n            if (!response.ok) {\n              _context2.next = 12;\n              break;\n            }\n            _context2.next = 7;\n            return response.json();\n          case 7:\n            newComment = _context2.sent;\n            setBackendComments([newComment].concat(_toConsumableArray(backendComments)));\n            setActiveComment(null);\n            _context2.next = 13;\n            break;\n          case 12:\n            console.error('Failed to add comment');\n          case 13:\n            _context2.next = 18;\n            break;\n          case 15:\n            _context2.prev = 15;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error('Error adding comment:', _context2.t0);\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[0, 15]]);\n    }));\n    return function addComment(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var deleteComment = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(commentId) {\n      var response, updatedBackendComments;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return fetch(\"http://localhost:3012/\".concat(commentId), {\n              method: 'DELETE'\n            });\n          case 3:\n            response = _context3.sent;\n            if (response.ok) {\n              updatedBackendComments = backendComments.filter(function (backendComment) {\n                return backendComment.id !== commentId;\n              });\n              setBackendComments(updatedBackendComments);\n            } else {\n              console.error('Failed to delete comment');\n            }\n            _context3.next = 10;\n            break;\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error('Error deleting comment:', _context3.t0);\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[0, 7]]);\n    }));\n    return function deleteComment(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var updateComment = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(text, commentId) {\n      var response, updatedComment, updatedBackendComments;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return fetch(\"http://localhost:3012/\".concat(commentId), {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                comment: text,\n                commentator: currentUserId\n              })\n            });\n          case 3:\n            response = _context4.sent;\n            if (!response.ok) {\n              _context4.next = 14;\n              break;\n            }\n            _context4.next = 7;\n            return response.json();\n          case 7:\n            updatedComment = _context4.sent;\n            console.log('Updated comment from server:', updatedComment);\n            updatedBackendComments = backendComments.map(function (backendComment) {\n              if (backendComment.id === commentId) {\n                return _objectSpread({}, backendComment, {\n                  comment: text\n                });\n              }\n              return backendComment;\n            });\n            setBackendComments(updatedBackendComments);\n            setActiveComment(null);\n            _context4.next = 15;\n            break;\n          case 14:\n            console.error('Failed to update comment');\n          case 15:\n            _context4.next = 20;\n            break;\n          case 17:\n            _context4.prev = 17;\n            _context4.t0 = _context4[\"catch\"](0);\n            console.error('Error updating comment:', _context4.t0);\n          case 20:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[0, 17]]);\n    }));\n    return function updateComment(_x4, _x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"comments-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-form-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, \"Write Comment\"), /*#__PURE__*/React.createElement(CommentForm, {\n    submitLabel: \"Write\",\n    handleSubmit: addComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, backendComments.map(function (comment) {\n    return /*#__PURE__*/React.createElement(WedComment, {\n      key: comment.id,\n      comment: comment.comment,\n      commentator: comment.commentator,\n      replies: getReplies(comment.id),\n      currentUserId: currentUserId,\n      deleteComment: deleteComment,\n      updateComment: updateComment,\n      activeComment: activeComment,\n      setActiveComment: setActiveComment\n      // addComment={addComment}\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    });\n  })));\n};\nexport default WedComments;","map":{"version":3,"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","React","useEffect","useState","WedComment","CommentForm","axios","WedComments","_ref","imageId","currentUserId","_useState","_useState2","_slicedToArray","backendComments","setBackendComments","_useState3","_useState4","activeComment","setActiveComment","getReplies","commendId","filter","backendComment","parentId","sort","b","Date","createdAt","getTime","fetchComments","_ref2","_asyncToGenerator","_callee","response","comments","_callee$","_context","console","log","get","concat","status","data","error","t0","apply","arguments","addComment","_ref3","_callee2","text","commentator","newComment","_callee2$","_context2","fetch","headers","body","JSON","stringify","comment","ok","json","_toConsumableArray","_x","_x2","deleteComment","_ref4","_callee3","commentId","updatedBackendComments","_callee3$","_context3","id","_x3","updateComment","_ref5","_callee4","updatedComment","_callee4$","_context4","map","_objectSpread","_x4","_x5","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","submitLabel","handleSubmit","key","replies"],"sources":["/home/jeff/bobawedding/src/weddingCommentServer/Comments.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport WedComment from './Comment.jsx';\nimport CommentForm from './CommentForm.jsx';\nimport axios from 'axios'\n\nconst WedComments = ({ imageId, currentUserId }) => {\n    const [backendComments, setBackendComments] = useState([]);\n    const [activeComment, setActiveComment] = useState(null)\n\n    // const getReplies = commentId => {\n    //     return backendComments\n    //     .filter((backendComment) => backendComment.comment === commentId)\n    //     .sort( \n    //         (a, b) => \n    //             new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime())\n    // };\n    const getReplies = commendId => {\n        return backendComments\n        .filter((backendComment) => backendComment.parentId === commendId)\n        .sort(\n            (a, b) => \n                new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n        );\n    };\n//     const addComment = (text, parentId) => {\n//         console.log(\"addComment\", text, parentId);\n//         createCommentApi(text, parentId).then(comment => {\n//             setBackendComments([comment, ...backendComments])\n//             setActiveComment(null)\n//         })\n//     };\n    \n//     const deleteComment = (commentId) => {\n// if (window.confirm('Sure about deleting this?')) {\n//     deleteCommentApi(commentId).then(() => {\n//         const updatedBackendComments = backendComments.filter((backendComment) => backendComment.id !== commentId);\n//         setBackendComments(updatedBackendComments);\n//     })\n// }\n//     }\n\n//     const updateComment = (text, commentId) => {\n//         updateCommentApi(text, commentId).then(() => {\n//             const updatedBackendComments = backendComments.map(backendComment => {\n//                 if (backendComment.id === commentId) {\n//                     return { ...backendComment, body: text };\n//                 }\n//                 return backendComment;\n//             });\n//             setBackendComments(updatedBackendComments);\n//             setActiveComment(null)\n//         });\n//     };\n\n    // useEffect(() => {\n    // getCommentsApi().then((data) => {\n    //     setBackendComments(data);\n    // });\n    // }, []);\n\n    // useEffect(() => {\n    //     getComments().then((data) => {\n    //         setBackendComments(data);\n    //     });\n    // }, []);\n\n//     useEffect(() => {\n//         const fetchComments = async () => {\n//             try {\n//                 const response = await fetch(`/comments/${imageId}`);\n//                 if (response.ok) {\n//                     const comments = await response.json();\n//                     setBackendComments(comments);\n//                 } else {\n//                 console.error('Failed to fetch the wedding comments');\n//             }\n//         } catch (error) {\n//                 console.error('error with fetching the wedding comments:', error);\n//             }\n//     };\n\n//     fetchComments();\n// }, []);\n\nuseEffect(() => {\n  const fetchComments = async () => {\n    try {\n      console.log(\"Sending GET request to fetch comments with imageId:\", imageId);\n      const response = await axios.get(`http://localhost:3012/comments/${imageId}`, {\n        // Request body goes here, if you have any data to send\n      });\n\n      console.log(\"Response status:\", response.status);\n\n      if (response.status === 200) {\n        const comments = response.data;\n        console.log(\"Received comments:\", comments);\n        setBackendComments(comments);\n      } else {\n        console.error('Failed to fetch the wedding comments');\n      }\n    } catch (error) {\n      console.error('Error with fetching the wedding comments:', error);\n    }\n  };\n\n  fetchComments();\n}, [imageId]);\n\n\n// useEffect(() => {\n//   const fetchComments = async () => {\n//       try {\n//           const response = await fetch(`/comments/${imageId}`); // Use the provided imageId\n//           if (response.ok) {\n//               const comments = await response.json();\n//               setBackendComments(comments);\n//           } else {\n//               console.error('Failed to fetch the wedding comments');\n//           }\n//       } catch (error) {\n//           console.error('Error with fetching the wedding comments:', error);\n          \n//       }\n      \n//   };\n\n//   fetchComments();\n// }, [imageId]); // Include 'imageId' as a dependency\n\n\n    // const rootComments = backendComments.filter(\n    // (backendComment) => backendComment.parentId === null\n    // );\n\n    const addComment = async (text, commentator) => {\n        try {\n          const response = await fetch('http://localhost:3012/', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ comment: text, commentator }),\n          });\n\n          if (response.ok) {\n            const newComment = await response.json();\n            setBackendComments([newComment, ...backendComments]);\n            setActiveComment(null);\n          } else {\n            console.error('Failed to add comment');\n          }\n        } catch (error) {\n          console.error('Error adding comment:', error);\n        }\n      };\n    \n      const deleteComment = async (commentId) => {\n        try {\n          const response = await fetch(`http://localhost:3012/${commentId}`, {\n            method: 'DELETE',\n          });\n          if (response.ok) {\n            const updatedBackendComments = backendComments.filter(\n              (backendComment) => backendComment.id !== commentId\n            );\n            setBackendComments(updatedBackendComments);\n          } else {\n            console.error('Failed to delete comment');\n          }\n        } catch (error) {\n          console.error('Error deleting comment:', error);\n        }\n      };\n    \n      const updateComment = async (text, commentId) => {\n        try {\n          const response = await fetch(`http://localhost:3012/${commentId}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ comment: text, commentator: currentUserId }),\n          });\n          if (response.ok) {\n            const updatedComment = await response.json();\n            console.log('Updated comment from server:', updatedComment);\n            const updatedBackendComments = backendComments.map((backendComment) => {\n              if (backendComment.id === commentId) {\n                return { ...backendComment, comment: text };\n              }\n              return backendComment;\n            });\n            setBackendComments(updatedBackendComments);\n            setActiveComment(null);\n          } else {\n            console.error('Failed to update comment');\n          }\n        } catch (error) {\n          console.error('Error updating comment:', error);\n        }\n      };\n    \n\n  return (\n    <div className='comments'>\n        <h3 className=\"comments-title\">Comments</h3>\n        <div className=\"comment-form-title\">Write Comment</div>\n        <CommentForm \n          submitLabel=\"Write\" \n          handleSubmit={addComment} \n        />\n        <div className=\"comments-container\">\n            {backendComments.map((comment) => (\n                <WedComment \n                key={comment.id} \n                comment={comment.comment} \n                commentator={comment.commentator}\n                replies={getReplies(comment.id)} \n                currentUserId={currentUserId}\n                deleteComment={deleteComment}\n                updateComment={updateComment}\n                activeComment={activeComment}\n                setActiveComment={setActiveComment}\n                // addComment={addComment}\n                />\n                \n            ))}\n        </div>\n    </div>\n  )\n}\n\nexport default WedComments"],"mappings":"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"},"metadata":{},"sourceType":"module"}