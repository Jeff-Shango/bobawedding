{"ast":null,"code":"'use strict';\n\nvar _possibleConstructorReturn = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _assertThisInitialized = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\nvar _wrapNativeSuper = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\nvar _asyncToGenerator = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nvar _objectSpread = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _toArray = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toArray\");\nvar _classCallCheck = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nvar EventEmitter = require('events');\nvar urlLib = require('url');\nvar normalizeUrl = require('normalize-url');\nvar getStream = require('get-stream');\nvar CachePolicy = require('http-cache-semantics');\nvar Response = require('responselike');\nvar lowercaseKeys = require('lowercase-keys');\nvar cloneResponse = require('clone-response');\nvar Keyv = require('keyv');\nvar CacheableRequest = /*#__PURE__*/function () {\n  function CacheableRequest(request, cacheAdapter) {\n    _classCallCheck(this, CacheableRequest);\n    if (typeof request !== 'function') {\n      throw new TypeError('Parameter `request` must be a function');\n    }\n    this.cache = new Keyv({\n      uri: typeof cacheAdapter === 'string' && cacheAdapter,\n      store: typeof cacheAdapter !== 'string' && cacheAdapter,\n      namespace: 'cacheable-request'\n    });\n    return this.createCacheableRequest(request);\n  }\n  _createClass(CacheableRequest, [{\n    key: \"createCacheableRequest\",\n    value: function createCacheableRequest(request) {\n      var _this = this;\n      return function (opts, cb) {\n        var url;\n        if (typeof opts === 'string') {\n          url = normalizeUrlObject(urlLib.parse(opts));\n          opts = {};\n        } else if (opts instanceof urlLib.URL) {\n          url = normalizeUrlObject(urlLib.parse(opts.toString()));\n          opts = {};\n        } else {\n          var _split = (opts.path || '').split('?'),\n            _split2 = _toArray(_split),\n            pathname = _split2[0],\n            searchParts = _split2.slice(1);\n          var search = searchParts.length > 0 ? \"?\".concat(searchParts.join('?')) : '';\n          url = normalizeUrlObject(_objectSpread({}, opts, {\n            pathname: pathname,\n            search: search\n          }));\n        }\n        opts = _objectSpread({\n          headers: {},\n          method: 'GET',\n          cache: true,\n          strictTtl: false,\n          automaticFailover: false\n        }, opts, urlObjectToRequestOptions(url));\n        opts.headers = lowercaseKeys(opts.headers);\n        var ee = new EventEmitter();\n        var normalizedUrlString = normalizeUrl(urlLib.format(url), {\n          stripWWW: false,\n          removeTrailingSlash: false,\n          stripAuthentication: false\n        });\n        var key = \"\".concat(opts.method, \":\").concat(normalizedUrlString);\n        var revalidate = false;\n        var madeRequest = false;\n        var makeRequest = function makeRequest(opts) {\n          madeRequest = true;\n          var requestErrored = false;\n          var requestErrorCallback;\n          var requestErrorPromise = new Promise(function (resolve) {\n            requestErrorCallback = function requestErrorCallback() {\n              if (!requestErrored) {\n                requestErrored = true;\n                resolve();\n              }\n            };\n          });\n          var handler = function handler(response) {\n            if (revalidate && !opts.forceRefresh) {\n              response.status = response.statusCode;\n              var revalidatedPolicy = CachePolicy.fromObject(revalidate.cachePolicy).revalidatedPolicy(opts, response);\n              if (!revalidatedPolicy.modified) {\n                var headers = revalidatedPolicy.policy.responseHeaders();\n                response = new Response(revalidate.statusCode, headers, revalidate.body, revalidate.url);\n                response.cachePolicy = revalidatedPolicy.policy;\n                response.fromCache = true;\n              }\n            }\n            if (!response.fromCache) {\n              response.cachePolicy = new CachePolicy(opts, response, opts);\n              response.fromCache = false;\n            }\n            var clonedResponse;\n            if (opts.cache && response.cachePolicy.storable()) {\n              clonedResponse = cloneResponse(response);\n              _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                var bodyPromise, body, value, ttl;\n                return _regeneratorRuntime().wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.prev = 0;\n                      bodyPromise = getStream.buffer(response);\n                      _context.next = 4;\n                      return Promise.race([requestErrorPromise, new Promise(function (resolve) {\n                        return response.once('end', resolve);\n                      })]);\n                    case 4:\n                      if (!requestErrored) {\n                        _context.next = 6;\n                        break;\n                      }\n                      return _context.abrupt(\"return\");\n                    case 6:\n                      _context.next = 8;\n                      return bodyPromise;\n                    case 8:\n                      body = _context.sent;\n                      value = {\n                        cachePolicy: response.cachePolicy.toObject(),\n                        url: response.url,\n                        statusCode: response.fromCache ? revalidate.statusCode : response.statusCode,\n                        body: body\n                      };\n                      ttl = opts.strictTtl ? response.cachePolicy.timeToLive() : undefined;\n                      if (opts.maxTtl) {\n                        ttl = ttl ? Math.min(ttl, opts.maxTtl) : opts.maxTtl;\n                      }\n                      _context.next = 14;\n                      return _this.cache.set(key, value, ttl);\n                    case 14:\n                      _context.next = 19;\n                      break;\n                    case 16:\n                      _context.prev = 16;\n                      _context.t0 = _context[\"catch\"](0);\n                      ee.emit('error', new CacheableRequest.CacheError(_context.t0));\n                    case 19:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee, null, [[0, 16]]);\n              }))();\n            } else if (opts.cache && revalidate) {\n              _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n                return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                  while (1) switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.prev = 0;\n                      _context2.next = 3;\n                      return _this.cache.delete(key);\n                    case 3:\n                      _context2.next = 8;\n                      break;\n                    case 5:\n                      _context2.prev = 5;\n                      _context2.t0 = _context2[\"catch\"](0);\n                      ee.emit('error', new CacheableRequest.CacheError(_context2.t0));\n                    case 8:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }, _callee2, null, [[0, 5]]);\n              }))();\n            }\n            ee.emit('response', clonedResponse || response);\n            if (typeof cb === 'function') {\n              cb(clonedResponse || response);\n            }\n          };\n          try {\n            var req = request(opts, handler);\n            req.once('error', requestErrorCallback);\n            req.once('abort', requestErrorCallback);\n            ee.emit('request', req);\n          } catch (error) {\n            ee.emit('error', new CacheableRequest.RequestError(error));\n          }\n        };\n        _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n          var get, errorHandler;\n          return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n            while (1) switch (_context4.prev = _context4.next) {\n              case 0:\n                get = /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(opts) {\n                    var cacheEntry, policy, headers, response;\n                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                      while (1) switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.next = 2;\n                          return Promise.resolve();\n                        case 2:\n                          if (!opts.cache) {\n                            _context3.next = 8;\n                            break;\n                          }\n                          _context3.next = 5;\n                          return _this.cache.get(key);\n                        case 5:\n                          _context3.t0 = _context3.sent;\n                          _context3.next = 9;\n                          break;\n                        case 8:\n                          _context3.t0 = undefined;\n                        case 9:\n                          cacheEntry = _context3.t0;\n                          if (!(typeof cacheEntry === 'undefined')) {\n                            _context3.next = 12;\n                            break;\n                          }\n                          return _context3.abrupt(\"return\", makeRequest(opts));\n                        case 12:\n                          policy = CachePolicy.fromObject(cacheEntry.cachePolicy);\n                          if (policy.satisfiesWithoutRevalidation(opts) && !opts.forceRefresh) {\n                            headers = policy.responseHeaders();\n                            response = new Response(cacheEntry.statusCode, headers, cacheEntry.body, cacheEntry.url);\n                            response.cachePolicy = policy;\n                            response.fromCache = true;\n                            ee.emit('response', response);\n                            if (typeof cb === 'function') {\n                              cb(response);\n                            }\n                          } else {\n                            revalidate = cacheEntry;\n                            opts.headers = policy.revalidationHeaders(opts);\n                            makeRequest(opts);\n                          }\n                        case 14:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }, _callee3);\n                  }));\n                  return function get(_x) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }();\n                errorHandler = function errorHandler(error) {\n                  return ee.emit('error', new CacheableRequest.CacheError(error));\n                };\n                _this.cache.once('error', errorHandler);\n                ee.on('response', function () {\n                  return _this.cache.removeListener('error', errorHandler);\n                });\n                _context4.prev = 4;\n                _context4.next = 7;\n                return get(opts);\n              case 7:\n                _context4.next = 13;\n                break;\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4[\"catch\"](4);\n                if (opts.automaticFailover && !madeRequest) {\n                  makeRequest(opts);\n                }\n                ee.emit('error', new CacheableRequest.CacheError(_context4.t0));\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }, _callee4, null, [[4, 9]]);\n        }))();\n        return ee;\n      };\n    }\n  }]);\n  return CacheableRequest;\n}();\nfunction urlObjectToRequestOptions(url) {\n  var options = _objectSpread({}, url);\n  options.path = \"\".concat(url.pathname || '/').concat(url.search || '');\n  delete options.pathname;\n  delete options.search;\n  return options;\n}\nfunction normalizeUrlObject(url) {\n  // If url was parsed by url.parse or new URL:\n  // - hostname will be set\n  // - host will be hostname[:port]\n  // - port will be set if it was explicit in the parsed string\n  // Otherwise, url was from request options:\n  // - hostname or host may be set\n  // - host shall not have port encoded\n  return {\n    protocol: url.protocol,\n    auth: url.auth,\n    hostname: url.hostname || url.host || 'localhost',\n    port: url.port,\n    pathname: url.pathname,\n    search: url.search\n  };\n}\nCacheableRequest.RequestError = /*#__PURE__*/function (_Error) {\n  _inherits(_class, _Error);\n  function _class(error) {\n    var _this2;\n    _classCallCheck(this, _class);\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, error.message));\n    _this2.name = 'RequestError';\n    Object.assign(_assertThisInitialized(_assertThisInitialized(_this2)), error);\n    return _this2;\n  }\n  return _class;\n}(_wrapNativeSuper(Error));\nCacheableRequest.CacheError = /*#__PURE__*/function (_Error2) {\n  _inherits(_class2, _Error2);\n  function _class2(error) {\n    var _this3;\n    _classCallCheck(this, _class2);\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(_class2).call(this, error.message));\n    _this3.name = 'CacheError';\n    Object.assign(_assertThisInitialized(_assertThisInitialized(_this3)), error);\n    return _this3;\n  }\n  return _class2;\n}(_wrapNativeSuper(Error));\nmodule.exports = CacheableRequest;","map":null,"metadata":{},"sourceType":"script"}