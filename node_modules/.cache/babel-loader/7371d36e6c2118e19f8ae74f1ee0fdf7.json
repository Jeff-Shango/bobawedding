{"ast":null,"code":"import _slicedToArray from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/home/jeff/bobawedding/src/weddingCommentServer/Comments.jsx\";\nimport React, { useState } from 'react';\nimport WedComment from './Comment.jsx';\nimport CommentForm from './CommentForm.jsx';\nvar WedComments = function WedComments(_ref) {\n  var currentUserId = _ref.currentUserId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    backendComments = _useState2[0],\n    setBackendComments = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    activeComment = _useState4[0],\n    setActiveComment = _useState4[1];\n  var rootComments = backendComments.filter(function (backendComment) {\n    return backendComment.parentId === null;\n  });\n  var getReplies = function getReplies(comments) {\n    return backendComments.filter(function (backendCOmment) {\n      return backendCOmment;\n    });\n  };\n  // const getReplies = commendId => {\n  //     return backendComments\n  //     .filter((backendComment) => backendComment.parentId === commendId)\n  //     .sort(\n  //         (a, b) => \n  //             new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n  //     );\n  // };\n  //     const addComment = (text, parentId) => {\n  //         console.log(\"addComment\", text, parentId);\n  //         createCommentApi(text, parentId).then(comment => {\n  //             setBackendComments([comment, ...backendComments])\n  //             setActiveComment(null)\n  //         })\n  //     };\n\n  //     const deleteComment = (commentId) => {\n  // if (window.confirm('Sure about deleting this?')) {\n  //     deleteCommentApi(commentId).then(() => {\n  //         const updatedBackendComments = backendComments.filter((backendComment) => backendComment.id !== commentId);\n  //         setBackendComments(updatedBackendComments);\n  //     })\n  // }\n  //     }\n\n  //     const updateComment = (text, commentId) => {\n  //         updateCommentApi(text, commentId).then(() => {\n  //             const updatedBackendComments = backendComments.map(backendComment => {\n  //                 if (backendComment.id === commentId) {\n  //                     return { ...backendComment, body: text };\n  //                 }\n  //                 return backendComment;\n  //             });\n  //             setBackendComments(updatedBackendComments);\n  //             setActiveComment(null)\n  //         });\n  //     };\n\n  // useEffect(() => {\n  // getCommentsApi().then((data) => {\n  //     setBackendComments(data);\n  // });\n  // }, []);\n\n  // useEffect(() => {\n  //     getComments().then((data) => {\n  //         setBackendComments(data);\n  //     });\n  // }, []);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"comments-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-form-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Write Comment\"), /*#__PURE__*/React.createElement(CommentForm, {\n    submitLabel: \"Write\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, rootComments.map(function (rootComment) {\n    return /*#__PURE__*/React.createElement(WedComment, {\n      key: rootComment.id,\n      comment: rootComment\n      // replies={getReplies(rootComment.id)} \n      ,\n      currentUserId: currentUserId\n      // deleteComment={deleteComment}\n      // updateComment={updateComment}\n      ,\n      activeComment: activeComment,\n      setActiveComment: setActiveComment\n      // addComment={addComment}\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    });\n  })));\n};\nexport default WedComments;","map":{"version":3,"names":["React","useState","WedComment","CommentForm","WedComments","_ref","currentUserId","_useState","_useState2","_slicedToArray","backendComments","setBackendComments","_useState3","_useState4","activeComment","setActiveComment","rootComments","filter","backendComment","parentId","getReplies","comments","backendCOmment","createElement","className","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","submitLabel","map","rootComment","key","id","comment"],"sources":["/home/jeff/bobawedding/src/weddingCommentServer/Comments.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport WedComment from './Comment.jsx';\nimport CommentForm from './CommentForm.jsx';\n\nconst WedComments = ({ currentUserId }) => {\n    const [backendComments, setBackendComments] = useState([]);\n    const [activeComment, setActiveComment] = useState(null)\n    const rootComments = backendComments.filter(\n        (backendComment) => backendComment.parentId === null\n    );\n\n    const getReplies = comments => {\n        return backendComments.filter((backendCOmment) => backendCOmment)\n    }\n    // const getReplies = commendId => {\n    //     return backendComments\n    //     .filter((backendComment) => backendComment.parentId === commendId)\n    //     .sort(\n    //         (a, b) => \n    //             new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime()\n    //     );\n    // };\n//     const addComment = (text, parentId) => {\n//         console.log(\"addComment\", text, parentId);\n//         createCommentApi(text, parentId).then(comment => {\n//             setBackendComments([comment, ...backendComments])\n//             setActiveComment(null)\n//         })\n//     };\n    \n//     const deleteComment = (commentId) => {\n// if (window.confirm('Sure about deleting this?')) {\n//     deleteCommentApi(commentId).then(() => {\n//         const updatedBackendComments = backendComments.filter((backendComment) => backendComment.id !== commentId);\n//         setBackendComments(updatedBackendComments);\n//     })\n// }\n//     }\n\n//     const updateComment = (text, commentId) => {\n//         updateCommentApi(text, commentId).then(() => {\n//             const updatedBackendComments = backendComments.map(backendComment => {\n//                 if (backendComment.id === commentId) {\n//                     return { ...backendComment, body: text };\n//                 }\n//                 return backendComment;\n//             });\n//             setBackendComments(updatedBackendComments);\n//             setActiveComment(null)\n//         });\n//     };\n\n    // useEffect(() => {\n    // getCommentsApi().then((data) => {\n    //     setBackendComments(data);\n    // });\n    // }, []);\n\n    // useEffect(() => {\n    //     getComments().then((data) => {\n    //         setBackendComments(data);\n    //     });\n    // }, []);\n\n  return (\n    <div className='comments'>\n        <h3 className=\"comments-title\">Comments</h3>\n        <div className=\"comment-form-title\">Write Comment</div>\n        {/* add handleSubmit below.. addcomment */}\n        <CommentForm submitLabel=\"Write\" />\n        <div className=\"comments-container\">\n            {rootComments.map((rootComment) => (\n                <WedComment \n                key={rootComment.id} \n                comment={rootComment} \n                // replies={getReplies(rootComment.id)} \n                currentUserId={currentUserId}\n                // deleteComment={deleteComment}\n                // updateComment={updateComment}\n                activeComment={activeComment}\n                setActiveComment={setActiveComment}\n                // addComment={addComment}\n                />\n                \n            ))}\n        </div>\n    </div>\n  )\n}\n\nexport default WedComments"],"mappings":"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"},"metadata":{},"sourceType":"module"}