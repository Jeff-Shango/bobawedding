{"ast":null,"code":"'use strict';\n\n/* istanbul ignore file: https://github.com/nodejs/node/blob/master/lib/internal/errors.js */\nvar _classCallCheck = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _assertThisInitialized = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/assertThisInitialized\");\nvar _possibleConstructorReturn = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _inherits = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _get = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\nvar _getPrototypeOf = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar makeError = function makeError(Base, key, getMessage) {\n  module.exports[key] = /*#__PURE__*/function (_Base) {\n    _inherits(NodeError, _Base);\n    function NodeError() {\n      var _thisSuper, _this;\n      _classCallCheck(this, NodeError);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(NodeError).call(this, typeof getMessage === 'string' ? getMessage : getMessage(args)));\n      _this.name = \"\".concat(_get((_thisSuper = _assertThisInitialized(_this), _getPrototypeOf(NodeError.prototype)), \"name\", _thisSuper), \" [\").concat(key, \"]\");\n      _this.code = key;\n      return _this;\n    }\n    return NodeError;\n  }(Base);\n};\nmakeError(TypeError, 'ERR_INVALID_ARG_TYPE', function (args) {\n  var type = args[0].includes('.') ? 'property' : 'argument';\n  var valid = args[1];\n  var isManyTypes = Array.isArray(valid);\n  if (isManyTypes) {\n    valid = \"\".concat(valid.slice(0, -1).join(', '), \" or \").concat(valid.slice(-1));\n  }\n  return \"The \\\"\".concat(args[0], \"\\\" \").concat(type, \" must be \").concat(isManyTypes ? 'one of' : 'of', \" type \").concat(valid, \". Received \").concat(typeof args[2]);\n});\nmakeError(TypeError, 'ERR_INVALID_PROTOCOL', function (args) {\n  return \"Protocol \\\"\".concat(args[0], \"\\\" not supported. Expected \\\"\").concat(args[1], \"\\\"\");\n});\nmakeError(Error, 'ERR_HTTP_HEADERS_SENT', function (args) {\n  return \"Cannot \".concat(args[0], \" headers after they are sent to the client\");\n});\nmakeError(TypeError, 'ERR_INVALID_HTTP_TOKEN', function (args) {\n  return \"\".concat(args[0], \" must be a valid HTTP token [\").concat(args[1], \"]\");\n});\nmakeError(TypeError, 'ERR_HTTP_INVALID_HEADER_VALUE', function (args) {\n  return \"Invalid value \\\"\".concat(args[0], \" for header \\\"\").concat(args[1], \"\\\"\");\n});\nmakeError(TypeError, 'ERR_INVALID_CHAR', function (args) {\n  return \"Invalid character in \".concat(args[0], \" [\").concat(args[1], \"]\");\n});","map":null,"metadata":{},"sourceType":"script"}