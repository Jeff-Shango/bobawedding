{"ast":null,"code":"var _toConsumableArray = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\nvar _objectWithoutProperties = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\n/* eslint-disable camelcase */\nvar _require = require('util'),\n  format = _require.format;\nvar makeError = require('make-error');\nfunction OPError(_ref, response) {\n  var error_description = _ref.error_description,\n    error = _ref.error,\n    error_uri = _ref.error_uri,\n    session_state = _ref.session_state,\n    state = _ref.state,\n    scope = _ref.scope;\n  OPError.super.call(this, !error_description ? error : \"\".concat(error, \" (\").concat(error_description, \")\"));\n  Object.assign(this, {\n    error: error\n  }, error_description && {\n    error_description: error_description\n  }, error_uri && {\n    error_uri: error_uri\n  }, state && {\n    state: state\n  }, scope && {\n    scope: scope\n  }, session_state && {\n    session_state: session_state\n  });\n  if (response) {\n    Object.defineProperty(this, 'response', {\n      value: response\n    });\n  }\n}\nmakeError(OPError);\nfunction RPError() {\n  if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string') {\n    RPError.super.call(this, format.apply(void 0, arguments));\n  } else {\n    var _ref2 = arguments.length <= 0 ? undefined : arguments[0],\n      message = _ref2.message,\n      printf = _ref2.printf,\n      response = _ref2.response,\n      rest = _objectWithoutProperties(_ref2, [\"message\", \"printf\", \"response\"]);\n    if (printf) {\n      RPError.super.call(this, format.apply(void 0, _toConsumableArray(printf)));\n    } else {\n      RPError.super.call(this, message);\n    }\n    Object.assign(this, rest);\n    if (response) {\n      Object.defineProperty(this, 'response', {\n        value: response\n      });\n    }\n  }\n}\nmakeError(RPError);\nmodule.exports = {\n  OPError: OPError,\n  RPError: RPError\n};","map":null,"metadata":{},"sourceType":"script"}