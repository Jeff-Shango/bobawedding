{"ast":null,"code":"var _slicedToArray = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n/* eslint-disable no-restricted-syntax, no-param-reassign, no-continue */\n\nvar isPlainObject = require('./is_plain_object');\nfunction merge(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n  for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n    var source = _sources[_i];\n    if (!isPlainObject(source)) {\n      continue;\n    }\n    for (var _i2 = 0, _Object$entries = Object.entries(source); _i2 < _Object$entries.length; _i2++) {\n      var _Object$entries$_i = _slicedToArray(_Object$entries[_i2], 2),\n        key = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n      /* istanbul ignore if */\n      if (key === '__proto__' || key === 'constructor') {\n        continue;\n      }\n      if (isPlainObject(target[key]) && isPlainObject(value)) {\n        target[key] = merge(target[key], value);\n      } else if (typeof value !== 'undefined') {\n        target[key] = value;\n      }\n    }\n  }\n  return target;\n}\nmodule.exports = merge;","map":null,"metadata":{},"sourceType":"script"}