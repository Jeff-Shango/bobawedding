{"ast":null,"code":"\"use strict\";\n\nimport _toConsumableArray from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _awaitAsyncGenerator from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/awaitAsyncGenerator\";\nimport _wrapAsyncGenerator from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapAsyncGenerator\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChangeStream = void 0;\nvar collection_1 = require(\"./collection\");\nvar constants_1 = require(\"./constants\");\nvar change_stream_cursor_1 = require(\"./cursor/change_stream_cursor\");\nvar db_1 = require(\"./db\");\nvar error_1 = require(\"./error\");\nvar mongo_client_1 = require(\"./mongo_client\");\nvar mongo_types_1 = require(\"./mongo_types\");\nvar utils_1 = require(\"./utils\");\n/** @internal */\nvar kCursorStream = Symbol('cursorStream');\n/** @internal */\nvar kClosed = Symbol('closed');\n/** @internal */\nvar kMode = Symbol('mode');\nvar CHANGE_STREAM_OPTIONS = ['resumeAfter', 'startAfter', 'startAtOperationTime', 'fullDocument', 'fullDocumentBeforeChange', 'showExpandedEvents'];\nvar CHANGE_DOMAIN_TYPES = {\n  COLLECTION: Symbol('Collection'),\n  DATABASE: Symbol('Database'),\n  CLUSTER: Symbol('Cluster')\n};\nvar CHANGE_STREAM_EVENTS = [constants_1.RESUME_TOKEN_CHANGED, constants_1.END, constants_1.CLOSE];\nvar NO_RESUME_TOKEN_ERROR = 'A change stream document has been received that lacks a resume token (_id).';\nvar CHANGESTREAM_CLOSED_ERROR = 'ChangeStream is closed';\n/**\n * Creates a new Change Stream instance. Normally created using {@link Collection#watch|Collection.watch()}.\n * @public\n */\nvar ChangeStream = /*#__PURE__*/function (_mongo_types_1$TypedE) {\n  _inherits(ChangeStream, _mongo_types_1$TypedE);\n  /**\n   * @internal\n   *\n   * @param parent - The parent object that created this change stream\n   * @param pipeline - An array of {@link https://www.mongodb.com/docs/manual/reference/operator/aggregation-pipeline/|aggregation pipeline stages} through which to pass change stream documents\n   */\n  function ChangeStream(parent) {\n    var _this2;\n    var pipeline = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, ChangeStream);\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(ChangeStream).call(this));\n    _this2.pipeline = pipeline;\n    _this2.options = _objectSpread({}, options);\n    delete _this2.options.writeConcern;\n    if (parent instanceof collection_1.Collection) {\n      _this2.type = CHANGE_DOMAIN_TYPES.COLLECTION;\n    } else if (parent instanceof db_1.Db) {\n      _this2.type = CHANGE_DOMAIN_TYPES.DATABASE;\n    } else if (parent instanceof mongo_client_1.MongoClient) {\n      _this2.type = CHANGE_DOMAIN_TYPES.CLUSTER;\n    } else {\n      throw new error_1.MongoChangeStreamError('Parent provided to ChangeStream constructor must be an instance of Collection, Db, or MongoClient');\n    }\n    _this2.parent = parent;\n    _this2.namespace = parent.s.namespace;\n    if (!_this2.options.readPreference && parent.readPreference) {\n      _this2.options.readPreference = parent.readPreference;\n    }\n    // Create contained Change Stream cursor\n    _this2.cursor = _this2._createChangeStreamCursor(options);\n    _this2[kClosed] = false;\n    _this2[kMode] = false;\n    // Listen for any `change` listeners being added to ChangeStream\n    _this2.on('newListener', function (eventName) {\n      if (eventName === 'change' && _this2.cursor && _this2.listenerCount('change') === 0) {\n        _this2._streamEvents(_this2.cursor);\n      }\n    });\n    _this2.on('removeListener', function (eventName) {\n      if (eventName === 'change' && _this2.listenerCount('change') === 0 && _this2.cursor) {\n        _this2[kCursorStream]?.removeAllListeners('data');\n      }\n    });\n    return _this2;\n  }\n  /** @internal */\n  _createClass(ChangeStream, [{\n    key: \"hasNext\",\n    /** Check if there is any document still available in the Change Stream */value: function () {\n      var _hasNext = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _hasNext2;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              this._setIsIterator();\n              // Change streams must resume indefinitely while each resume event succeeds.\n              // This loop continues until either a change event is received or until a resume attempt\n              // fails.\n              // eslint-disable-next-line no-constant-condition\n            case 1:\n              if (!true) {\n                _context.next = 28;\n                break;\n              }\n              _context.prev = 2;\n              _context.next = 5;\n              return this.cursor.hasNext();\n            case 5:\n              _hasNext2 = _context.sent;\n              return _context.abrupt(\"return\", _hasNext2);\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              _context.prev = 11;\n              _context.next = 14;\n              return this._processErrorIteratorMode(_context.t0);\n            case 14:\n              _context.next = 26;\n              break;\n            case 16:\n              _context.prev = 16;\n              _context.t1 = _context[\"catch\"](11);\n              _context.prev = 18;\n              _context.next = 21;\n              return this.close();\n            case 21:\n              _context.next = 25;\n              break;\n            case 23:\n              _context.prev = 23;\n              _context.t2 = _context[\"catch\"](18);\n            case 25:\n              throw _context.t1;\n            case 26:\n              _context.next = 1;\n              break;\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[2, 9], [11, 16], [18, 23]]);\n      }));\n      function hasNext() {\n        return _hasNext.apply(this, arguments);\n      }\n      return hasNext;\n    }() /** Get the next available document from the Change Stream. */\n  }, {\n    key: \"next\",\n    value: function () {\n      var _next = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var change, processedChange;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              this._setIsIterator();\n              // Change streams must resume indefinitely while each resume event succeeds.\n              // This loop continues until either a change event is received or until a resume attempt\n              // fails.\n              // eslint-disable-next-line no-constant-condition\n            case 1:\n              if (!true) {\n                _context2.next = 29;\n                break;\n              }\n              _context2.prev = 2;\n              _context2.next = 5;\n              return this.cursor.next();\n            case 5:\n              change = _context2.sent;\n              processedChange = this._processChange(change ?? null);\n              return _context2.abrupt(\"return\", processedChange);\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](2);\n              _context2.prev = 12;\n              _context2.next = 15;\n              return this._processErrorIteratorMode(_context2.t0);\n            case 15:\n              _context2.next = 27;\n              break;\n            case 17:\n              _context2.prev = 17;\n              _context2.t1 = _context2[\"catch\"](12);\n              _context2.prev = 19;\n              _context2.next = 22;\n              return this.close();\n            case 22:\n              _context2.next = 26;\n              break;\n            case 24:\n              _context2.prev = 24;\n              _context2.t2 = _context2[\"catch\"](19);\n            case 26:\n              throw _context2.t1;\n            case 27:\n              _context2.next = 1;\n              break;\n            case 29:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[2, 10], [12, 17], [19, 24]]);\n      }));\n      function next() {\n        return _next.apply(this, arguments);\n      }\n      return next;\n    }()\n    /**\n     * Try to get the next available document from the Change Stream's cursor or `null` if an empty batch is returned\n     */\n  }, {\n    key: \"tryNext\",\n    value: function () {\n      var _tryNext = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var change;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              this._setIsIterator();\n              // Change streams must resume indefinitely while each resume event succeeds.\n              // This loop continues until either a change event is received or until a resume attempt\n              // fails.\n              // eslint-disable-next-line no-constant-condition\n            case 1:\n              if (!true) {\n                _context3.next = 28;\n                break;\n              }\n              _context3.prev = 2;\n              _context3.next = 5;\n              return this.cursor.tryNext();\n            case 5:\n              change = _context3.sent;\n              return _context3.abrupt(\"return\", change ?? null);\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](2);\n              _context3.prev = 11;\n              _context3.next = 14;\n              return this._processErrorIteratorMode(_context3.t0);\n            case 14:\n              _context3.next = 26;\n              break;\n            case 16:\n              _context3.prev = 16;\n              _context3.t1 = _context3[\"catch\"](11);\n              _context3.prev = 18;\n              _context3.next = 21;\n              return this.close();\n            case 21:\n              _context3.next = 25;\n              break;\n            case 23:\n              _context3.prev = 23;\n              _context3.t2 = _context3[\"catch\"](18);\n            case 25:\n              throw _context3.t1;\n            case 26:\n              _context3.next = 1;\n              break;\n            case 28:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[2, 9], [11, 16], [18, 23]]);\n      }));\n      function tryNext() {\n        return _tryNext.apply(this, arguments);\n      }\n      return tryNext;\n    }()\n  }, {\n    key: Symbol.asyncIterator,\n    value: function value() {\n      var _this = this;\n      return _wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!_this.closed) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\");\n            case 2:\n              _context4.prev = 2;\n            case 3:\n              if (!true) {\n                _context4.next = 10;\n                break;\n              }\n              _context4.next = 6;\n              return _awaitAsyncGenerator(_this.next());\n            case 6:\n              _context4.next = 8;\n              return _context4.sent;\n            case 8:\n              _context4.next = 3;\n              break;\n            case 10:\n              _context4.prev = 10;\n              _context4.prev = 11;\n              _context4.next = 14;\n              return _awaitAsyncGenerator(_this.close());\n            case 14:\n              _context4.next = 18;\n              break;\n            case 16:\n              _context4.prev = 16;\n              _context4.t0 = _context4[\"catch\"](11);\n            case 18:\n              return _context4.finish(10);\n            case 19:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, null, [[2,, 10, 19], [11, 16]]);\n      }))();\n    } /** Is the cursor closed */\n  }, {\n    key: \"close\",\n    /** Close the Change Stream */value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var cursor;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              this[kClosed] = true;\n              cursor = this.cursor;\n              _context5.prev = 2;\n              _context5.next = 5;\n              return cursor.close();\n            case 5:\n              _context5.prev = 5;\n              this._endStream();\n              return _context5.finish(5);\n            case 8:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[2,, 5, 8]]);\n      }));\n      function close() {\n        return _close.apply(this, arguments);\n      }\n      return close;\n    }()\n    /**\n     * Return a modified Readable stream including a possible transform method.\n     *\n     * NOTE: When using a Stream to process change stream events, the stream will\n     * NOT automatically resume in the case a resumable error is encountered.\n     *\n     * @throws MongoChangeStreamError if the underlying cursor or the change stream is closed\n     */\n  }, {\n    key: \"stream\",\n    value: function stream(options) {\n      if (this.closed) {\n        throw new error_1.MongoChangeStreamError(CHANGESTREAM_CLOSED_ERROR);\n      }\n      this.streamOptions = options;\n      return this.cursor.stream(options);\n    } /** @internal */\n  }, {\n    key: \"_setIsEmitter\",\n    value: function _setIsEmitter() {\n      if (this[kMode] === 'iterator') {\n        // TODO(NODE-3485): Replace with MongoChangeStreamModeError\n        throw new error_1.MongoAPIError('ChangeStream cannot be used as an EventEmitter after being used as an iterator');\n      }\n      this[kMode] = 'emitter';\n    } /** @internal */\n  }, {\n    key: \"_setIsIterator\",\n    value: function _setIsIterator() {\n      if (this[kMode] === 'emitter') {\n        // TODO(NODE-3485): Replace with MongoChangeStreamModeError\n        throw new error_1.MongoAPIError('ChangeStream cannot be used as an iterator after being used as an EventEmitter');\n      }\n      this[kMode] = 'iterator';\n    }\n    /**\n     * Create a new change stream cursor based on self's configuration\n     * @internal\n     */\n  }, {\n    key: \"_createChangeStreamCursor\",\n    value: function _createChangeStreamCursor(options) {\n      var _this3 = this;\n      var changeStreamStageOptions = (0, utils_1.filterOptions)(options, CHANGE_STREAM_OPTIONS);\n      if (this.type === CHANGE_DOMAIN_TYPES.CLUSTER) {\n        changeStreamStageOptions.allChangesForCluster = true;\n      }\n      var pipeline = [{\n        $changeStream: changeStreamStageOptions\n      }].concat(_toConsumableArray(this.pipeline));\n      var client = this.type === CHANGE_DOMAIN_TYPES.CLUSTER ? this.parent : this.type === CHANGE_DOMAIN_TYPES.DATABASE ? this.parent.client : this.type === CHANGE_DOMAIN_TYPES.COLLECTION ? this.parent.client : null;\n      if (client == null) {\n        // This should never happen because of the assertion in the constructor\n        throw new error_1.MongoRuntimeError(\"Changestream type should only be one of cluster, database, collection. Found \".concat(this.type.toString()));\n      }\n      var changeStreamCursor = new change_stream_cursor_1.ChangeStreamCursor(client, this.namespace, pipeline, options);\n      var _loop = function _loop() {\n        var event = _CHANGE_STREAM_EVENTS[_i];\n        changeStreamCursor.on(event, function (e) {\n          return _this3.emit(event, e);\n        });\n      };\n      for (var _i = 0, _CHANGE_STREAM_EVENTS = CHANGE_STREAM_EVENTS; _i < _CHANGE_STREAM_EVENTS.length; _i++) {\n        _loop();\n      }\n      if (this.listenerCount(ChangeStream.CHANGE) > 0) {\n        this._streamEvents(changeStreamCursor);\n      }\n      return changeStreamCursor;\n    } /** @internal */\n  }, {\n    key: \"_closeEmitterModeWithError\",\n    value: function _closeEmitterModeWithError(error) {\n      this.emit(ChangeStream.ERROR, error);\n      this.close().catch(function () {\n        return null;\n      });\n    } /** @internal */\n  }, {\n    key: \"_streamEvents\",\n    value: function _streamEvents(cursor) {\n      var _this4 = this;\n      this._setIsEmitter();\n      var stream = this[kCursorStream] ?? cursor.stream();\n      this[kCursorStream] = stream;\n      stream.on('data', function (change) {\n        try {\n          var processedChange = _this4._processChange(change);\n          _this4.emit(ChangeStream.CHANGE, processedChange);\n        } catch (error) {\n          _this4.emit(ChangeStream.ERROR, error);\n        }\n      });\n      stream.on('error', function (error) {\n        return _this4._processErrorStreamMode(error);\n      });\n    } /** @internal */\n  }, {\n    key: \"_endStream\",\n    value: function _endStream() {\n      var cursorStream = this[kCursorStream];\n      if (cursorStream) {\n        ['data', 'close', 'end', 'error'].forEach(function (event) {\n          return cursorStream.removeAllListeners(event);\n        });\n        cursorStream.destroy();\n      }\n      this[kCursorStream] = undefined;\n    } /** @internal */\n  }, {\n    key: \"_processChange\",\n    value: function _processChange(change) {\n      if (this[kClosed]) {\n        // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n        throw new error_1.MongoAPIError(CHANGESTREAM_CLOSED_ERROR);\n      }\n      // a null change means the cursor has been notified, implicitly closing the change stream\n      if (change == null) {\n        // TODO(NODE-3485): Replace with MongoChangeStreamClosedError\n        throw new error_1.MongoRuntimeError(CHANGESTREAM_CLOSED_ERROR);\n      }\n      if (change && !change._id) {\n        throw new error_1.MongoChangeStreamError(NO_RESUME_TOKEN_ERROR);\n      }\n      // cache the resume token\n      this.cursor.cacheResumeToken(change._id);\n      // wipe the startAtOperationTime if there was one so that there won't be a conflict\n      // between resumeToken and startAtOperationTime if we need to reconnect the cursor\n      this.options.startAtOperationTime = undefined;\n      return change;\n    } /** @internal */\n  }, {\n    key: \"_processErrorStreamMode\",\n    value: function _processErrorStreamMode(changeStreamError) {\n      var _this5 = this;\n      // If the change stream has been closed explicitly, do not process error.\n      if (this[kClosed]) return;\n      if ((0, error_1.isResumableError)(changeStreamError, this.cursor.maxWireVersion)) {\n        this._endStream();\n        this.cursor.close().catch(function () {\n          return null;\n        });\n        var topology = (0, utils_1.getTopology)(this.parent);\n        topology.selectServer(this.cursor.readPreference, {}, function (serverSelectionError) {\n          if (serverSelectionError) return _this5._closeEmitterModeWithError(changeStreamError);\n          _this5.cursor = _this5._createChangeStreamCursor(_this5.cursor.resumeOptions);\n        });\n      } else {\n        this._closeEmitterModeWithError(changeStreamError);\n      }\n    } /** @internal */\n  }, {\n    key: \"_processErrorIteratorMode\",\n    value: function () {\n      var _processErrorIteratorMode2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(changeStreamError) {\n        var topology;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!this[kClosed]) {\n                _context6.next = 2;\n                break;\n              }\n              throw new error_1.MongoAPIError(CHANGESTREAM_CLOSED_ERROR);\n            case 2:\n              if ((0, error_1.isResumableError)(changeStreamError, this.cursor.maxWireVersion)) {\n                _context6.next = 11;\n                break;\n              }\n              _context6.prev = 3;\n              _context6.next = 6;\n              return this.close();\n            case 6:\n              _context6.next = 10;\n              break;\n            case 8:\n              _context6.prev = 8;\n              _context6.t0 = _context6[\"catch\"](3);\n            case 10:\n              throw changeStreamError;\n            case 11:\n              _context6.next = 13;\n              return this.cursor.close().catch(function () {\n                return null;\n              });\n            case 13:\n              topology = (0, utils_1.getTopology)(this.parent);\n              _context6.prev = 14;\n              _context6.next = 17;\n              return topology.selectServerAsync(this.cursor.readPreference, {});\n            case 17:\n              this.cursor = this._createChangeStreamCursor(this.cursor.resumeOptions);\n              _context6.next = 25;\n              break;\n            case 20:\n              _context6.prev = 20;\n              _context6.t1 = _context6[\"catch\"](14);\n              _context6.next = 24;\n              return this.close();\n            case 24:\n              throw changeStreamError;\n            case 25:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[3, 8], [14, 20]]);\n      }));\n      function _processErrorIteratorMode(_x) {\n        return _processErrorIteratorMode2.apply(this, arguments);\n      }\n      return _processErrorIteratorMode;\n    }()\n  }, {\n    key: \"cursorStream\",\n    get: function get() {\n      return this[kCursorStream];\n    } /** The cached resume token that is used to resume after the most recently returned change. */\n  }, {\n    key: \"resumeToken\",\n    get: function get() {\n      return this.cursor?.resumeToken;\n    }\n  }, {\n    key: \"closed\",\n    get: function get() {\n      return this[kClosed] || this.cursor.closed;\n    }\n  }]);\n  return ChangeStream;\n}(mongo_types_1.TypedEventEmitter);\n/** @event */\nChangeStream.RESPONSE = constants_1.RESPONSE;\n/** @event */\nChangeStream.MORE = constants_1.MORE;\n/** @event */\nChangeStream.INIT = constants_1.INIT;\n/** @event */\nChangeStream.CLOSE = constants_1.CLOSE;\n/**\n * Fired for each new matching change in the specified namespace. Attaching a `change`\n * event listener to a Change Stream will switch the stream into flowing mode. Data will\n * then be passed as soon as it is available.\n * @event\n */\nChangeStream.CHANGE = constants_1.CHANGE;\n/** @event */\nChangeStream.END = constants_1.END;\n/** @event */\nChangeStream.ERROR = constants_1.ERROR;\n/**\n * Emitted each time the change stream stores a new resume token.\n * @event\n */\nChangeStream.RESUME_TOKEN_CHANGED = constants_1.RESUME_TOKEN_CHANGED;\nexports.ChangeStream = ChangeStream;","map":{"version":3,"names":["collection_1","require","constants_1","change_stream_cursor_1","db_1","error_1","mongo_client_1","mongo_types_1","utils_1","kCursorStream","Symbol","kClosed","kMode","CHANGE_STREAM_OPTIONS","CHANGE_DOMAIN_TYPES","COLLECTION","DATABASE","CLUSTER","CHANGE_STREAM_EVENTS","RESUME_TOKEN_CHANGED","END","CLOSE","NO_RESUME_TOKEN_ERROR","CHANGESTREAM_CLOSED_ERROR","ChangeStream","_mongo_types_1$TypedE","_inherits","parent","_this2","pipeline","arguments","length","undefined","options","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","_objectSpread","writeConcern","Collection","type","Db","MongoClient","MongoChangeStreamError","namespace","s","readPreference","cursor","_createChangeStreamCursor","on","eventName","listenerCount","_streamEvents","removeAllListeners","_createClass","key","value","_hasNext","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_hasNext2","wrap","_callee$","_context","prev","next","_setIsIterator","hasNext","sent","abrupt","t0","_processErrorIteratorMode","t1","close","t2","stop","apply","_next","_callee2","change","processedChange","_callee2$","_context2","_processChange","_tryNext","_callee3","_callee3$","_context3","tryNext","asyncIterator","_this","_wrapAsyncGenerator","_callee4","_callee4$","_context4","closed","_awaitAsyncGenerator","finish","_close","_callee5","_callee5$","_context5","_endStream","stream","streamOptions","_setIsEmitter","MongoAPIError","_this3","changeStreamStageOptions","filterOptions","allChangesForCluster","$changeStream","concat","_toConsumableArray","client","MongoRuntimeError","toString","changeStreamCursor","ChangeStreamCursor","_loop","event","_CHANGE_STREAM_EVENTS","_i","e","emit","CHANGE","_closeEmitterModeWithError","error","ERROR","catch","_this4","_processErrorStreamMode","cursorStream","forEach","destroy","_id","cacheResumeToken","startAtOperationTime","changeStreamError","_this5","isResumableError","maxWireVersion","topology","getTopology","selectServer","serverSelectionError","resumeOptions","_processErrorIteratorMode2","_callee6","_callee6$","_context6","selectServerAsync","_x","get","resumeToken","TypedEventEmitter","RESPONSE","MORE","INIT","exports"],"sources":["../src/change_stream.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}