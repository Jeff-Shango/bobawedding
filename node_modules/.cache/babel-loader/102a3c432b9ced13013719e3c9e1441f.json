{"ast":null,"code":"var mongoose = require('mongoose');\nrequire('dotenv').config();\nvar connectionParams = {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n};\nvar uri = \"mongodb+srv://WeddingUser:\".concat(process.env.MONGO_PASS, \"@wedddingcluster.kzpprvp.mongodb.net/?retryWrites=true&w=majority\");\nvar connection = mongoose.connect(uri, connectionParams).then(function () {\n  return console.log('Connected to the Cloud atlas ');\n}).catch(function (err) {\n  return console.log(err);\n});\nmodule.exports = connection;\n// const {MongoClient} = require('mongodb')\n\n// const state = {\n//     db: null,\n// };\n\n// exports.connect = async (url, dbname) => {\n//     try{\n//         if(state.db) {\n//             return;\n//         }\n//         const client = new MongoClient(url, {\n//             useNewUrlParser: true,\n//             useUnifiedTopology: true,\n//         });\n\n//         await client.connect();\n\n//         state.db = client.db(dbname);\n//         console.log(\"Connected to the Atlas, mane!\")\n//     } catch (err) {\n//         console.error(err);\n//     }\n// };\n\n// exports.get = () => {\n//     return state.db;\n// }","map":{"version":3,"names":["mongoose","require","config","connectionParams","useNewUrlParser","useUnifiedTopology","uri","concat","process","env","MONGO_PASS","connection","connect","then","console","log","catch","err","module","exports"],"sources":["/home/jeff/bobawedding/src/weddingCommentServer/WeddingServer/db.js"],"sourcesContent":["const mongoose = require('mongoose');\nrequire('dotenv').config();\nconst connectionParams = {\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n}\n\nconst uri = `mongodb+srv://WeddingUser:${process.env.MONGO_PASS}@wedddingcluster.kzpprvp.mongodb.net/?retryWrites=true&w=majority`\nconst connection = mongoose.connect(uri, connectionParams).then(() => console.log('Connected to the Cloud atlas ')).catch((err) => console.log(err))\n\nmodule.exports = connection\n// const {MongoClient} = require('mongodb')\n\n\n// const state = {\n//     db: null,\n// };\n\n// exports.connect = async (url, dbname) => {\n//     try{\n//         if(state.db) {\n//             return;\n//         }\n//         const client = new MongoClient(url, {\n//             useNewUrlParser: true,\n//             useUnifiedTopology: true,\n//         });\n\n//         await client.connect();\n\n//         state.db = client.db(dbname);\n//         console.log(\"Connected to the Atlas, mane!\")\n//     } catch (err) {\n//         console.error(err);\n//     }\n// };\n\n// exports.get = () => {\n//     return state.db;\n// }"],"mappings":"AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpCA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC;AAC1B,IAAMC,gBAAgB,GAAG;EACrBC,eAAe,EAAE,IAAI;EACrBC,kBAAkB,EAAE;AACxB,CAAC;AAED,IAAMC,GAAG,gCAAAC,MAAA,CAAgCC,OAAO,CAACC,GAAG,CAACC,UAAU,sEAAmE;AAClI,IAAMC,UAAU,GAAGX,QAAQ,CAACY,OAAO,CAACN,GAAG,EAAEH,gBAAgB,CAAC,CAACU,IAAI,CAAC;EAAA,OAAMC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;AAAA,EAAC,CAACC,KAAK,CAAC,UAACC,GAAG;EAAA,OAAKH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;AAAA,EAAC;AAEpJC,MAAM,CAACC,OAAO,GAAGR,UAAU;AAC3B;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module"}