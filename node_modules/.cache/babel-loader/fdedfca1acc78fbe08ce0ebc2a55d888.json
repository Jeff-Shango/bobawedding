{"ast":null,"code":"\"use strict\";\n\nimport _toConsumableArray from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _wrapNativeSuper from \"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isResumableError = exports.isNetworkTimeoutError = exports.isSDAMUnrecoverableError = exports.isNodeShuttingDownError = exports.isRetryableReadError = exports.isRetryableWriteError = exports.needsRetryableWriteLabel = exports.MongoWriteConcernError = exports.MongoServerSelectionError = exports.MongoSystemError = exports.MongoMissingDependencyError = exports.MongoMissingCredentialsError = exports.MongoCompatibilityError = exports.MongoInvalidArgumentError = exports.MongoParseError = exports.MongoNetworkTimeoutError = exports.MongoNetworkError = exports.isNetworkErrorBeforeHandshake = exports.MongoTopologyClosedError = exports.MongoCursorExhaustedError = exports.MongoServerClosedError = exports.MongoCursorInUseError = exports.MongoUnexpectedServerResponseError = exports.MongoGridFSChunkError = exports.MongoGridFSStreamError = exports.MongoTailableCursorError = exports.MongoChangeStreamError = exports.MongoAzureError = exports.MongoAWSError = exports.MongoKerberosError = exports.MongoExpiredSessionError = exports.MongoTransactionError = exports.MongoNotConnectedError = exports.MongoDecompressionError = exports.MongoBatchReExecutionError = exports.MongoRuntimeError = exports.MongoAPIError = exports.MongoDriverError = exports.MongoServerError = exports.MongoError = exports.MongoErrorLabel = exports.GET_MORE_RESUMABLE_CODES = exports.MONGODB_ERROR_CODES = exports.NODE_IS_RECOVERING_ERROR_MESSAGE = exports.LEGACY_NOT_PRIMARY_OR_SECONDARY_ERROR_MESSAGE = exports.LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE = void 0;\n/** @internal */\nvar kErrorLabels = Symbol('errorLabels');\n/**\n * @internal\n * The legacy error message from the server that indicates the node is not a writable primary\n * https://github.com/mongodb/specifications/blob/b07c26dc40d04ac20349f989db531c9845fdd755/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#not-writable-primary-and-node-is-recovering\n */\nexports.LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE = new RegExp('not master', 'i');\n/**\n * @internal\n * The legacy error message from the server that indicates the node is not a primary or secondary\n * https://github.com/mongodb/specifications/blob/b07c26dc40d04ac20349f989db531c9845fdd755/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#not-writable-primary-and-node-is-recovering\n */\nexports.LEGACY_NOT_PRIMARY_OR_SECONDARY_ERROR_MESSAGE = new RegExp('not master or secondary', 'i');\n/**\n * @internal\n * The error message from the server that indicates the node is recovering\n * https://github.com/mongodb/specifications/blob/b07c26dc40d04ac20349f989db531c9845fdd755/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#not-writable-primary-and-node-is-recovering\n */\nexports.NODE_IS_RECOVERING_ERROR_MESSAGE = new RegExp('node is recovering', 'i');\n/** @internal MongoDB Error Codes */\nexports.MONGODB_ERROR_CODES = Object.freeze({\n  HostUnreachable: 6,\n  HostNotFound: 7,\n  NetworkTimeout: 89,\n  ShutdownInProgress: 91,\n  PrimarySteppedDown: 189,\n  ExceededTimeLimit: 262,\n  SocketException: 9001,\n  NotWritablePrimary: 10107,\n  InterruptedAtShutdown: 11600,\n  InterruptedDueToReplStateChange: 11602,\n  NotPrimaryNoSecondaryOk: 13435,\n  NotPrimaryOrSecondary: 13436,\n  StaleShardVersion: 63,\n  StaleEpoch: 150,\n  StaleConfig: 13388,\n  RetryChangeStream: 234,\n  FailedToSatisfyReadPreference: 133,\n  CursorNotFound: 43,\n  LegacyNotPrimary: 10058,\n  WriteConcernFailed: 64,\n  NamespaceNotFound: 26,\n  IllegalOperation: 20,\n  MaxTimeMSExpired: 50,\n  UnknownReplWriteConcern: 79,\n  UnsatisfiableWriteConcern: 100,\n  Reauthenticate: 391\n});\n// From spec@https://github.com/mongodb/specifications/blob/f93d78191f3db2898a59013a7ed5650352ef6da8/source/change-streams/change-streams.rst#resumable-error\nexports.GET_MORE_RESUMABLE_CODES = new Set([exports.MONGODB_ERROR_CODES.HostUnreachable, exports.MONGODB_ERROR_CODES.HostNotFound, exports.MONGODB_ERROR_CODES.NetworkTimeout, exports.MONGODB_ERROR_CODES.ShutdownInProgress, exports.MONGODB_ERROR_CODES.PrimarySteppedDown, exports.MONGODB_ERROR_CODES.ExceededTimeLimit, exports.MONGODB_ERROR_CODES.SocketException, exports.MONGODB_ERROR_CODES.NotWritablePrimary, exports.MONGODB_ERROR_CODES.InterruptedAtShutdown, exports.MONGODB_ERROR_CODES.InterruptedDueToReplStateChange, exports.MONGODB_ERROR_CODES.NotPrimaryNoSecondaryOk, exports.MONGODB_ERROR_CODES.NotPrimaryOrSecondary, exports.MONGODB_ERROR_CODES.StaleShardVersion, exports.MONGODB_ERROR_CODES.StaleEpoch, exports.MONGODB_ERROR_CODES.StaleConfig, exports.MONGODB_ERROR_CODES.RetryChangeStream, exports.MONGODB_ERROR_CODES.FailedToSatisfyReadPreference, exports.MONGODB_ERROR_CODES.CursorNotFound]);\n/** @public */\nexports.MongoErrorLabel = Object.freeze({\n  RetryableWriteError: 'RetryableWriteError',\n  TransientTransactionError: 'TransientTransactionError',\n  UnknownTransactionCommitResult: 'UnknownTransactionCommitResult',\n  ResumableChangeStreamError: 'ResumableChangeStreamError',\n  HandshakeError: 'HandshakeError',\n  ResetPool: 'ResetPool',\n  InterruptInUseConnections: 'InterruptInUseConnections',\n  NoWritesPerformed: 'NoWritesPerformed'\n});\nfunction isAggregateError(e) {\n  return 'errors' in e && Array.isArray(e.errors);\n}\n/**\n * @public\n * @category Error\n *\n * @privateRemarks\n * mongodb-client-encryption has a dependency on this error, it uses the constructor with a string argument\n */\nvar MongoError = /*#__PURE__*/function (_Error) {\n  _inherits(MongoError, _Error);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoError(message, options) {\n    var _this;\n    _classCallCheck(this, MongoError);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MongoError).call(this, message, options));\n    _this[kErrorLabels] = new Set();\n    return _this;\n  }\n  /** @internal */\n  _createClass(MongoError, [{\n    key: \"hasErrorLabel\",\n    /**\n     * Checks the error to see if it has an error label\n     *\n     * @param label - The error label to check for\n     * @returns returns true if the error has the provided error label\n     */\n    value: function hasErrorLabel(label) {\n      return this[kErrorLabels].has(label);\n    }\n  }, {\n    key: \"addErrorLabel\",\n    value: function addErrorLabel(label) {\n      this[kErrorLabels].add(label);\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return 'MongoError';\n    } /** Legacy name for server error responses */\n  }, {\n    key: \"errmsg\",\n    get: function get() {\n      return this.message;\n    }\n  }, {\n    key: \"errorLabels\",\n    get: function get() {\n      return Array.from(this[kErrorLabels]);\n    }\n  }], [{\n    key: \"buildErrorMessage\",\n    value: function buildErrorMessage(e) {\n      if (typeof e === 'string') {\n        return e;\n      }\n      if (isAggregateError(e) && e.message.length === 0) {\n        return e.errors.length === 0 ? 'AggregateError has an empty errors array. Please check the `cause` property for more information.' : e.errors.map(function (_ref) {\n          var message = _ref.message;\n          return message;\n        }).join(', ');\n      }\n      return e.message;\n    }\n  }]);\n  return MongoError;\n}(_wrapNativeSuper(Error));\nexports.MongoError = MongoError;\n/**\n * An error coming from the mongo server\n *\n * @public\n * @category Error\n */\nvar MongoServerError = /*#__PURE__*/function (_MongoError) {\n  _inherits(MongoServerError, _MongoError);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoServerError(message) {\n    var _this2;\n    _classCallCheck(this, MongoServerError);\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(MongoServerError).call(this, message.message || message.errmsg || message.$err || 'n/a'));\n    if (message.errorLabels) {\n      _this2[kErrorLabels] = new Set(message.errorLabels);\n    }\n    for (var name in message) {\n      if (name !== 'errorLabels' && name !== 'errmsg' && name !== 'message') _this2[name] = message[name];\n    }\n    return _this2;\n  }\n  _createClass(MongoServerError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoServerError';\n    }\n  }]);\n  return MongoServerError;\n}(MongoError);\nexports.MongoServerError = MongoServerError;\n/**\n * An error generated by the driver\n *\n * @public\n * @category Error\n */\nvar MongoDriverError = /*#__PURE__*/function (_MongoError2) {\n  _inherits(MongoDriverError, _MongoError2);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoDriverError(message, options) {\n    _classCallCheck(this, MongoDriverError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoDriverError).call(this, message, options));\n  }\n  _createClass(MongoDriverError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoDriverError';\n    }\n  }]);\n  return MongoDriverError;\n}(MongoError);\nexports.MongoDriverError = MongoDriverError;\n/**\n * An error generated when the driver API is used incorrectly\n *\n * @privateRemarks\n * Should **never** be directly instantiated\n *\n * @public\n * @category Error\n */\nvar MongoAPIError = /*#__PURE__*/function (_MongoDriverError) {\n  _inherits(MongoAPIError, _MongoDriverError);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoAPIError(message, options) {\n    _classCallCheck(this, MongoAPIError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoAPIError).call(this, message, options));\n  }\n  _createClass(MongoAPIError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoAPIError';\n    }\n  }]);\n  return MongoAPIError;\n}(MongoDriverError);\nexports.MongoAPIError = MongoAPIError;\n/**\n * An error generated when the driver encounters unexpected input\n * or reaches an unexpected/invalid internal state\n *\n * @privateRemarks\n * Should **never** be directly instantiated.\n *\n * @public\n * @category Error\n */\nvar MongoRuntimeError = /*#__PURE__*/function (_MongoDriverError2) {\n  _inherits(MongoRuntimeError, _MongoDriverError2);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoRuntimeError(message, options) {\n    _classCallCheck(this, MongoRuntimeError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoRuntimeError).call(this, message, options));\n  }\n  _createClass(MongoRuntimeError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoRuntimeError';\n    }\n  }]);\n  return MongoRuntimeError;\n}(MongoDriverError);\nexports.MongoRuntimeError = MongoRuntimeError;\n/**\n * An error generated when a batch command is re-executed after one of the commands in the batch\n * has failed\n *\n * @public\n * @category Error\n */\nvar MongoBatchReExecutionError = /*#__PURE__*/function (_MongoAPIError) {\n  _inherits(MongoBatchReExecutionError, _MongoAPIError);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoBatchReExecutionError() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'This batch has already been executed, create new batch to execute';\n    _classCallCheck(this, MongoBatchReExecutionError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoBatchReExecutionError).call(this, message));\n  }\n  _createClass(MongoBatchReExecutionError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoBatchReExecutionError';\n    }\n  }]);\n  return MongoBatchReExecutionError;\n}(MongoAPIError);\nexports.MongoBatchReExecutionError = MongoBatchReExecutionError;\n/**\n * An error generated when the driver fails to decompress\n * data received from the server.\n *\n * @public\n * @category Error\n */\nvar MongoDecompressionError = /*#__PURE__*/function (_MongoRuntimeError) {\n  _inherits(MongoDecompressionError, _MongoRuntimeError);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoDecompressionError(message) {\n    _classCallCheck(this, MongoDecompressionError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoDecompressionError).call(this, message));\n  }\n  _createClass(MongoDecompressionError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoDecompressionError';\n    }\n  }]);\n  return MongoDecompressionError;\n}(MongoRuntimeError);\nexports.MongoDecompressionError = MongoDecompressionError;\n/**\n * An error thrown when the user attempts to operate on a database or collection through a MongoClient\n * that has not yet successfully called the \"connect\" method\n *\n * @public\n * @category Error\n */\nvar MongoNotConnectedError = /*#__PURE__*/function (_MongoAPIError2) {\n  _inherits(MongoNotConnectedError, _MongoAPIError2);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoNotConnectedError(message) {\n    _classCallCheck(this, MongoNotConnectedError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoNotConnectedError).call(this, message));\n  }\n  _createClass(MongoNotConnectedError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoNotConnectedError';\n    }\n  }]);\n  return MongoNotConnectedError;\n}(MongoAPIError);\nexports.MongoNotConnectedError = MongoNotConnectedError;\n/**\n * An error generated when the user makes a mistake in the usage of transactions.\n * (e.g. attempting to commit a transaction with a readPreference other than primary)\n *\n * @public\n * @category Error\n */\nvar MongoTransactionError = /*#__PURE__*/function (_MongoAPIError3) {\n  _inherits(MongoTransactionError, _MongoAPIError3);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoTransactionError(message) {\n    _classCallCheck(this, MongoTransactionError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoTransactionError).call(this, message));\n  }\n  _createClass(MongoTransactionError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoTransactionError';\n    }\n  }]);\n  return MongoTransactionError;\n}(MongoAPIError);\nexports.MongoTransactionError = MongoTransactionError;\n/**\n * An error generated when the user attempts to operate\n * on a session that has expired or has been closed.\n *\n * @public\n * @category Error\n */\nvar MongoExpiredSessionError = /*#__PURE__*/function (_MongoAPIError4) {\n  _inherits(MongoExpiredSessionError, _MongoAPIError4);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoExpiredSessionError() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Cannot use a session that has ended';\n    _classCallCheck(this, MongoExpiredSessionError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoExpiredSessionError).call(this, message));\n  }\n  _createClass(MongoExpiredSessionError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoExpiredSessionError';\n    }\n  }]);\n  return MongoExpiredSessionError;\n}(MongoAPIError);\nexports.MongoExpiredSessionError = MongoExpiredSessionError;\n/**\n * A error generated when the user attempts to authenticate\n * via Kerberos, but fails to connect to the Kerberos client.\n *\n * @public\n * @category Error\n */\nvar MongoKerberosError = /*#__PURE__*/function (_MongoRuntimeError2) {\n  _inherits(MongoKerberosError, _MongoRuntimeError2);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoKerberosError(message) {\n    _classCallCheck(this, MongoKerberosError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoKerberosError).call(this, message));\n  }\n  _createClass(MongoKerberosError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoKerberosError';\n    }\n  }]);\n  return MongoKerberosError;\n}(MongoRuntimeError);\nexports.MongoKerberosError = MongoKerberosError;\n/**\n * A error generated when the user attempts to authenticate\n * via AWS, but fails\n *\n * @public\n * @category Error\n */\nvar MongoAWSError = /*#__PURE__*/function (_MongoRuntimeError3) {\n  _inherits(MongoAWSError, _MongoRuntimeError3);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoAWSError(message) {\n    _classCallCheck(this, MongoAWSError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoAWSError).call(this, message));\n  }\n  _createClass(MongoAWSError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoAWSError';\n    }\n  }]);\n  return MongoAWSError;\n}(MongoRuntimeError);\nexports.MongoAWSError = MongoAWSError;\n/**\n * A error generated when the user attempts to authenticate\n * via Azure, but fails.\n *\n * @public\n * @category Error\n */\nvar MongoAzureError = /*#__PURE__*/function (_MongoRuntimeError4) {\n  _inherits(MongoAzureError, _MongoRuntimeError4);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoAzureError(message) {\n    _classCallCheck(this, MongoAzureError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoAzureError).call(this, message));\n  }\n  _createClass(MongoAzureError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoAzureError';\n    }\n  }]);\n  return MongoAzureError;\n}(MongoRuntimeError);\nexports.MongoAzureError = MongoAzureError;\n/**\n * An error generated when a ChangeStream operation fails to execute.\n *\n * @public\n * @category Error\n */\nvar MongoChangeStreamError = /*#__PURE__*/function (_MongoRuntimeError5) {\n  _inherits(MongoChangeStreamError, _MongoRuntimeError5);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoChangeStreamError(message) {\n    _classCallCheck(this, MongoChangeStreamError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoChangeStreamError).call(this, message));\n  }\n  _createClass(MongoChangeStreamError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoChangeStreamError';\n    }\n  }]);\n  return MongoChangeStreamError;\n}(MongoRuntimeError);\nexports.MongoChangeStreamError = MongoChangeStreamError;\n/**\n * An error thrown when the user calls a function or method not supported on a tailable cursor\n *\n * @public\n * @category Error\n */\nvar MongoTailableCursorError = /*#__PURE__*/function (_MongoAPIError5) {\n  _inherits(MongoTailableCursorError, _MongoAPIError5);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoTailableCursorError() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Tailable cursor does not support this operation';\n    _classCallCheck(this, MongoTailableCursorError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoTailableCursorError).call(this, message));\n  }\n  _createClass(MongoTailableCursorError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoTailableCursorError';\n    }\n  }]);\n  return MongoTailableCursorError;\n}(MongoAPIError);\nexports.MongoTailableCursorError = MongoTailableCursorError;\n/** An error generated when a GridFSStream operation fails to execute.\n *\n * @public\n * @category Error\n */\nvar MongoGridFSStreamError = /*#__PURE__*/function (_MongoRuntimeError6) {\n  _inherits(MongoGridFSStreamError, _MongoRuntimeError6);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoGridFSStreamError(message) {\n    _classCallCheck(this, MongoGridFSStreamError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoGridFSStreamError).call(this, message));\n  }\n  _createClass(MongoGridFSStreamError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoGridFSStreamError';\n    }\n  }]);\n  return MongoGridFSStreamError;\n}(MongoRuntimeError);\nexports.MongoGridFSStreamError = MongoGridFSStreamError;\n/**\n * An error generated when a malformed or invalid chunk is\n * encountered when reading from a GridFSStream.\n *\n * @public\n * @category Error\n */\nvar MongoGridFSChunkError = /*#__PURE__*/function (_MongoRuntimeError7) {\n  _inherits(MongoGridFSChunkError, _MongoRuntimeError7);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoGridFSChunkError(message) {\n    _classCallCheck(this, MongoGridFSChunkError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoGridFSChunkError).call(this, message));\n  }\n  _createClass(MongoGridFSChunkError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoGridFSChunkError';\n    }\n  }]);\n  return MongoGridFSChunkError;\n}(MongoRuntimeError);\nexports.MongoGridFSChunkError = MongoGridFSChunkError;\n/**\n * An error generated when a **parsable** unexpected response comes from the server.\n * This is generally an error where the driver in a state expecting a certain behavior to occur in\n * the next message from MongoDB but it receives something else.\n * This error **does not** represent an issue with wire message formatting.\n *\n * #### Example\n * When an operation fails, it is the driver's job to retry it. It must perform serverSelection\n * again to make sure that it attempts the operation against a server in a good state. If server\n * selection returns a server that does not support retryable operations, this error is used.\n * This scenario is unlikely as retryable support would also have been determined on the first attempt\n * but it is possible the state change could report a selectable server that does not support retries.\n *\n * @public\n * @category Error\n */\nvar MongoUnexpectedServerResponseError = /*#__PURE__*/function (_MongoRuntimeError8) {\n  _inherits(MongoUnexpectedServerResponseError, _MongoRuntimeError8);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoUnexpectedServerResponseError(message) {\n    _classCallCheck(this, MongoUnexpectedServerResponseError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoUnexpectedServerResponseError).call(this, message));\n  }\n  _createClass(MongoUnexpectedServerResponseError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoUnexpectedServerResponseError';\n    }\n  }]);\n  return MongoUnexpectedServerResponseError;\n}(MongoRuntimeError);\nexports.MongoUnexpectedServerResponseError = MongoUnexpectedServerResponseError;\n/**\n * An error thrown when the user attempts to add options to a cursor that has already been\n * initialized\n *\n * @public\n * @category Error\n */\nvar MongoCursorInUseError = /*#__PURE__*/function (_MongoAPIError6) {\n  _inherits(MongoCursorInUseError, _MongoAPIError6);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoCursorInUseError() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Cursor is already initialized';\n    _classCallCheck(this, MongoCursorInUseError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoCursorInUseError).call(this, message));\n  }\n  _createClass(MongoCursorInUseError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoCursorInUseError';\n    }\n  }]);\n  return MongoCursorInUseError;\n}(MongoAPIError);\nexports.MongoCursorInUseError = MongoCursorInUseError;\n/**\n * An error generated when an attempt is made to operate\n * on a closed/closing server.\n *\n * @public\n * @category Error\n */\nvar MongoServerClosedError = /*#__PURE__*/function (_MongoAPIError7) {\n  _inherits(MongoServerClosedError, _MongoAPIError7);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoServerClosedError() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Server is closed';\n    _classCallCheck(this, MongoServerClosedError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoServerClosedError).call(this, message));\n  }\n  _createClass(MongoServerClosedError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoServerClosedError';\n    }\n  }]);\n  return MongoServerClosedError;\n}(MongoAPIError);\nexports.MongoServerClosedError = MongoServerClosedError;\n/**\n * An error thrown when an attempt is made to read from a cursor that has been exhausted\n *\n * @public\n * @category Error\n */\nvar MongoCursorExhaustedError = /*#__PURE__*/function (_MongoAPIError8) {\n  _inherits(MongoCursorExhaustedError, _MongoAPIError8);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoCursorExhaustedError(message) {\n    _classCallCheck(this, MongoCursorExhaustedError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoCursorExhaustedError).call(this, message || 'Cursor is exhausted'));\n  }\n  _createClass(MongoCursorExhaustedError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoCursorExhaustedError';\n    }\n  }]);\n  return MongoCursorExhaustedError;\n}(MongoAPIError);\nexports.MongoCursorExhaustedError = MongoCursorExhaustedError;\n/**\n * An error generated when an attempt is made to operate on a\n * dropped, or otherwise unavailable, database.\n *\n * @public\n * @category Error\n */\nvar MongoTopologyClosedError = /*#__PURE__*/function (_MongoAPIError9) {\n  _inherits(MongoTopologyClosedError, _MongoAPIError9);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoTopologyClosedError() {\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Topology is closed';\n    _classCallCheck(this, MongoTopologyClosedError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoTopologyClosedError).call(this, message));\n  }\n  _createClass(MongoTopologyClosedError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoTopologyClosedError';\n    }\n  }]);\n  return MongoTopologyClosedError;\n}(MongoAPIError);\nexports.MongoTopologyClosedError = MongoTopologyClosedError;\n/** @internal */\nvar kBeforeHandshake = Symbol('beforeHandshake');\nfunction isNetworkErrorBeforeHandshake(err) {\n  return err[kBeforeHandshake] === true;\n}\nexports.isNetworkErrorBeforeHandshake = isNetworkErrorBeforeHandshake;\n/**\n * An error indicating an issue with the network, including TCP errors and timeouts.\n * @public\n * @category Error\n */\nvar MongoNetworkError = /*#__PURE__*/function (_MongoError3) {\n  _inherits(MongoNetworkError, _MongoError3);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoNetworkError(message, options) {\n    var _this3;\n    _classCallCheck(this, MongoNetworkError);\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(MongoNetworkError).call(this, message, {\n      cause: options?.cause\n    }));\n    if (options && typeof options.beforeHandshake === 'boolean') {\n      _this3[kBeforeHandshake] = options.beforeHandshake;\n    }\n    return _this3;\n  }\n  _createClass(MongoNetworkError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoNetworkError';\n    }\n  }]);\n  return MongoNetworkError;\n}(MongoError);\nexports.MongoNetworkError = MongoNetworkError;\n/**\n * An error indicating a network timeout occurred\n * @public\n * @category Error\n *\n * @privateRemarks\n * mongodb-client-encryption has a dependency on this error with an instanceof check\n */\nvar MongoNetworkTimeoutError = /*#__PURE__*/function (_MongoNetworkError) {\n  _inherits(MongoNetworkTimeoutError, _MongoNetworkError);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoNetworkTimeoutError(message, options) {\n    _classCallCheck(this, MongoNetworkTimeoutError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoNetworkTimeoutError).call(this, message, options));\n  }\n  _createClass(MongoNetworkTimeoutError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoNetworkTimeoutError';\n    }\n  }]);\n  return MongoNetworkTimeoutError;\n}(MongoNetworkError);\nexports.MongoNetworkTimeoutError = MongoNetworkTimeoutError;\n/**\n * An error used when attempting to parse a value (like a connection string)\n * @public\n * @category Error\n */\nvar MongoParseError = /*#__PURE__*/function (_MongoDriverError3) {\n  _inherits(MongoParseError, _MongoDriverError3);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoParseError(message) {\n    _classCallCheck(this, MongoParseError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoParseError).call(this, message));\n  }\n  _createClass(MongoParseError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoParseError';\n    }\n  }]);\n  return MongoParseError;\n}(MongoDriverError);\nexports.MongoParseError = MongoParseError;\n/**\n * An error generated when the user supplies malformed or unexpected arguments\n * or when a required argument or field is not provided.\n *\n *\n * @public\n * @category Error\n */\nvar MongoInvalidArgumentError = /*#__PURE__*/function (_MongoAPIError10) {\n  _inherits(MongoInvalidArgumentError, _MongoAPIError10);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoInvalidArgumentError(message) {\n    _classCallCheck(this, MongoInvalidArgumentError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoInvalidArgumentError).call(this, message));\n  }\n  _createClass(MongoInvalidArgumentError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoInvalidArgumentError';\n    }\n  }]);\n  return MongoInvalidArgumentError;\n}(MongoAPIError);\nexports.MongoInvalidArgumentError = MongoInvalidArgumentError;\n/**\n * An error generated when a feature that is not enabled or allowed for the current server\n * configuration is used\n *\n *\n * @public\n * @category Error\n */\nvar MongoCompatibilityError = /*#__PURE__*/function (_MongoAPIError11) {\n  _inherits(MongoCompatibilityError, _MongoAPIError11);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoCompatibilityError(message) {\n    _classCallCheck(this, MongoCompatibilityError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoCompatibilityError).call(this, message));\n  }\n  _createClass(MongoCompatibilityError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoCompatibilityError';\n    }\n  }]);\n  return MongoCompatibilityError;\n}(MongoAPIError);\nexports.MongoCompatibilityError = MongoCompatibilityError;\n/**\n * An error generated when the user fails to provide authentication credentials before attempting\n * to connect to a mongo server instance.\n *\n *\n * @public\n * @category Error\n */\nvar MongoMissingCredentialsError = /*#__PURE__*/function (_MongoAPIError12) {\n  _inherits(MongoMissingCredentialsError, _MongoAPIError12);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoMissingCredentialsError(message) {\n    _classCallCheck(this, MongoMissingCredentialsError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoMissingCredentialsError).call(this, message));\n  }\n  _createClass(MongoMissingCredentialsError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoMissingCredentialsError';\n    }\n  }]);\n  return MongoMissingCredentialsError;\n}(MongoAPIError);\nexports.MongoMissingCredentialsError = MongoMissingCredentialsError;\n/**\n * An error generated when a required module or dependency is not present in the local environment\n *\n * @public\n * @category Error\n */\nvar MongoMissingDependencyError = /*#__PURE__*/function (_MongoAPIError13) {\n  _inherits(MongoMissingDependencyError, _MongoAPIError13);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoMissingDependencyError(message) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, MongoMissingDependencyError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoMissingDependencyError).call(this, message, options));\n  }\n  _createClass(MongoMissingDependencyError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoMissingDependencyError';\n    }\n  }]);\n  return MongoMissingDependencyError;\n}(MongoAPIError);\nexports.MongoMissingDependencyError = MongoMissingDependencyError;\n/**\n * An error signifying a general system issue\n * @public\n * @category Error\n */\nvar MongoSystemError = /*#__PURE__*/function (_MongoError4) {\n  _inherits(MongoSystemError, _MongoError4);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoSystemError(message, reason) {\n    var _this4;\n    _classCallCheck(this, MongoSystemError);\n    if (reason && reason.error) {\n      _this4 = _possibleConstructorReturn(this, _getPrototypeOf(MongoSystemError).call(this, MongoError.buildErrorMessage(reason.error.message || reason.error), {\n        cause: reason.error\n      }));\n    } else {\n      _this4 = _possibleConstructorReturn(this, _getPrototypeOf(MongoSystemError).call(this, message));\n    }\n    if (reason) {\n      _this4.reason = reason;\n    }\n    _this4.code = reason.error?.code;\n    return _possibleConstructorReturn(_this4);\n  }\n  _createClass(MongoSystemError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoSystemError';\n    }\n  }]);\n  return MongoSystemError;\n}(MongoError);\nexports.MongoSystemError = MongoSystemError;\n/**\n * An error signifying a client-side server selection error\n * @public\n * @category Error\n */\nvar MongoServerSelectionError = /*#__PURE__*/function (_MongoSystemError) {\n  _inherits(MongoServerSelectionError, _MongoSystemError);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoServerSelectionError(message, reason) {\n    _classCallCheck(this, MongoServerSelectionError);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MongoServerSelectionError).call(this, message, reason));\n  }\n  _createClass(MongoServerSelectionError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoServerSelectionError';\n    }\n  }]);\n  return MongoServerSelectionError;\n}(MongoSystemError);\nexports.MongoServerSelectionError = MongoServerSelectionError;\nfunction makeWriteConcernResultObject(input) {\n  var output = Object.assign({}, input);\n  if (output.ok === 0) {\n    output.ok = 1;\n    delete output.errmsg;\n    delete output.code;\n    delete output.codeName;\n  }\n  return output;\n}\n/**\n * An error thrown when the server reports a writeConcernError\n * @public\n * @category Error\n */\nvar MongoWriteConcernError = /*#__PURE__*/function (_MongoServerError) {\n  _inherits(MongoWriteConcernError, _MongoServerError);\n  /**\n   * **Do not use this constructor!**\n   *\n   * Meant for internal use only.\n   *\n   * @remarks\n   * This class is only meant to be constructed within the driver. This constructor is\n   * not subject to semantic versioning compatibility guarantees and may change at any time.\n   *\n   * @public\n   **/\n  function MongoWriteConcernError(message, result) {\n    var _this5;\n    _classCallCheck(this, MongoWriteConcernError);\n    if (result && Array.isArray(result.errorLabels)) {\n      message.errorLabels = result.errorLabels;\n    }\n    _this5 = _possibleConstructorReturn(this, _getPrototypeOf(MongoWriteConcernError).call(this, message));\n    _this5.errInfo = message.errInfo;\n    if (result != null) {\n      _this5.result = makeWriteConcernResultObject(result);\n    }\n    return _this5;\n  }\n  _createClass(MongoWriteConcernError, [{\n    key: \"name\",\n    get: function get() {\n      return 'MongoWriteConcernError';\n    }\n  }]);\n  return MongoWriteConcernError;\n}(MongoServerError);\nexports.MongoWriteConcernError = MongoWriteConcernError;\n// https://github.com/mongodb/specifications/blob/master/source/retryable-reads/retryable-reads.rst#retryable-error\nvar RETRYABLE_READ_ERROR_CODES = new Set([exports.MONGODB_ERROR_CODES.HostUnreachable, exports.MONGODB_ERROR_CODES.HostNotFound, exports.MONGODB_ERROR_CODES.NetworkTimeout, exports.MONGODB_ERROR_CODES.ShutdownInProgress, exports.MONGODB_ERROR_CODES.PrimarySteppedDown, exports.MONGODB_ERROR_CODES.SocketException, exports.MONGODB_ERROR_CODES.NotWritablePrimary, exports.MONGODB_ERROR_CODES.InterruptedAtShutdown, exports.MONGODB_ERROR_CODES.InterruptedDueToReplStateChange, exports.MONGODB_ERROR_CODES.NotPrimaryNoSecondaryOk, exports.MONGODB_ERROR_CODES.NotPrimaryOrSecondary]);\n// see: https://github.com/mongodb/specifications/blob/master/source/retryable-writes/retryable-writes.rst#terms\nvar RETRYABLE_WRITE_ERROR_CODES = new Set([].concat(_toConsumableArray(RETRYABLE_READ_ERROR_CODES), [exports.MONGODB_ERROR_CODES.ExceededTimeLimit]));\nfunction needsRetryableWriteLabel(error, maxWireVersion) {\n  // pre-4.4 server, then the driver adds an error label for every valid case\n  // execute operation will only inspect the label, code/message logic is handled here\n  if (error instanceof MongoNetworkError) {\n    return true;\n  }\n  if (error instanceof MongoError) {\n    if ((maxWireVersion >= 9 || error.hasErrorLabel(exports.MongoErrorLabel.RetryableWriteError)) && !error.hasErrorLabel(exports.MongoErrorLabel.HandshakeError)) {\n      // If we already have the error label no need to add it again. 4.4+ servers add the label.\n      // In the case where we have a handshake error, need to fall down to the logic checking\n      // the codes.\n      return false;\n    }\n  }\n  if (error instanceof MongoWriteConcernError) {\n    return RETRYABLE_WRITE_ERROR_CODES.has(error.result?.code ?? error.code ?? 0);\n  }\n  if (error instanceof MongoError && typeof error.code === 'number') {\n    return RETRYABLE_WRITE_ERROR_CODES.has(error.code);\n  }\n  var isNotWritablePrimaryError = exports.LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE.test(error.message);\n  if (isNotWritablePrimaryError) {\n    return true;\n  }\n  var isNodeIsRecoveringError = exports.NODE_IS_RECOVERING_ERROR_MESSAGE.test(error.message);\n  if (isNodeIsRecoveringError) {\n    return true;\n  }\n  return false;\n}\nexports.needsRetryableWriteLabel = needsRetryableWriteLabel;\nfunction isRetryableWriteError(error) {\n  return error.hasErrorLabel(exports.MongoErrorLabel.RetryableWriteError);\n}\nexports.isRetryableWriteError = isRetryableWriteError;\n/** Determines whether an error is something the driver should attempt to retry */\nfunction isRetryableReadError(error) {\n  var hasRetryableErrorCode = typeof error.code === 'number' ? RETRYABLE_READ_ERROR_CODES.has(error.code) : false;\n  if (hasRetryableErrorCode) {\n    return true;\n  }\n  if (error instanceof MongoNetworkError) {\n    return true;\n  }\n  var isNotWritablePrimaryError = exports.LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE.test(error.message);\n  if (isNotWritablePrimaryError) {\n    return true;\n  }\n  var isNodeIsRecoveringError = exports.NODE_IS_RECOVERING_ERROR_MESSAGE.test(error.message);\n  if (isNodeIsRecoveringError) {\n    return true;\n  }\n  return false;\n}\nexports.isRetryableReadError = isRetryableReadError;\nvar SDAM_RECOVERING_CODES = new Set([exports.MONGODB_ERROR_CODES.ShutdownInProgress, exports.MONGODB_ERROR_CODES.PrimarySteppedDown, exports.MONGODB_ERROR_CODES.InterruptedAtShutdown, exports.MONGODB_ERROR_CODES.InterruptedDueToReplStateChange, exports.MONGODB_ERROR_CODES.NotPrimaryOrSecondary]);\nvar SDAM_NOT_PRIMARY_CODES = new Set([exports.MONGODB_ERROR_CODES.NotWritablePrimary, exports.MONGODB_ERROR_CODES.NotPrimaryNoSecondaryOk, exports.MONGODB_ERROR_CODES.LegacyNotPrimary]);\nvar SDAM_NODE_SHUTTING_DOWN_ERROR_CODES = new Set([exports.MONGODB_ERROR_CODES.InterruptedAtShutdown, exports.MONGODB_ERROR_CODES.ShutdownInProgress]);\nfunction isRecoveringError(err) {\n  if (typeof err.code === 'number') {\n    // If any error code exists, we ignore the error.message\n    return SDAM_RECOVERING_CODES.has(err.code);\n  }\n  return exports.LEGACY_NOT_PRIMARY_OR_SECONDARY_ERROR_MESSAGE.test(err.message) || exports.NODE_IS_RECOVERING_ERROR_MESSAGE.test(err.message);\n}\nfunction isNotWritablePrimaryError(err) {\n  if (typeof err.code === 'number') {\n    // If any error code exists, we ignore the error.message\n    return SDAM_NOT_PRIMARY_CODES.has(err.code);\n  }\n  if (isRecoveringError(err)) {\n    return false;\n  }\n  return exports.LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE.test(err.message);\n}\nfunction isNodeShuttingDownError(err) {\n  return !!(typeof err.code === 'number' && SDAM_NODE_SHUTTING_DOWN_ERROR_CODES.has(err.code));\n}\nexports.isNodeShuttingDownError = isNodeShuttingDownError;\n/**\n * Determines whether SDAM can recover from a given error. If it cannot\n * then the pool will be cleared, and server state will completely reset\n * locally.\n *\n * @see https://github.com/mongodb/specifications/blob/master/source/server-discovery-and-monitoring/server-discovery-and-monitoring.rst#not-master-and-node-is-recovering\n */\nfunction isSDAMUnrecoverableError(error) {\n  // NOTE: null check is here for a strictly pre-CMAP world, a timeout or\n  //       close event are considered unrecoverable\n  if (error instanceof MongoParseError || error == null) {\n    return true;\n  }\n  return isRecoveringError(error) || isNotWritablePrimaryError(error);\n}\nexports.isSDAMUnrecoverableError = isSDAMUnrecoverableError;\nfunction isNetworkTimeoutError(err) {\n  return !!(err instanceof MongoNetworkError && err.message.match(/timed out/));\n}\nexports.isNetworkTimeoutError = isNetworkTimeoutError;\nfunction isResumableError(error, wireVersion) {\n  if (error == null || !(error instanceof MongoError)) {\n    return false;\n  }\n  if (error instanceof MongoNetworkError) {\n    return true;\n  }\n  if (wireVersion != null && wireVersion >= 9) {\n    // DRIVERS-1308: For 4.4 drivers running against 4.4 servers, drivers will add a special case to treat the CursorNotFound error code as resumable\n    if (error.code === exports.MONGODB_ERROR_CODES.CursorNotFound) {\n      return true;\n    }\n    return error.hasErrorLabel(exports.MongoErrorLabel.ResumableChangeStreamError);\n  }\n  if (typeof error.code === 'number') {\n    return exports.GET_MORE_RESUMABLE_CODES.has(error.code);\n  }\n  return false;\n}\nexports.isResumableError = isResumableError;","map":{"version":3,"names":["kErrorLabels","Symbol","exports","LEGACY_NOT_WRITABLE_PRIMARY_ERROR_MESSAGE","RegExp","LEGACY_NOT_PRIMARY_OR_SECONDARY_ERROR_MESSAGE","NODE_IS_RECOVERING_ERROR_MESSAGE","MONGODB_ERROR_CODES","Object","freeze","HostUnreachable","HostNotFound","NetworkTimeout","ShutdownInProgress","PrimarySteppedDown","ExceededTimeLimit","SocketException","NotWritablePrimary","InterruptedAtShutdown","InterruptedDueToReplStateChange","NotPrimaryNoSecondaryOk","NotPrimaryOrSecondary","StaleShardVersion","StaleEpoch","StaleConfig","RetryChangeStream","FailedToSatisfyReadPreference","CursorNotFound","LegacyNotPrimary","WriteConcernFailed","NamespaceNotFound","IllegalOperation","MaxTimeMSExpired","UnknownReplWriteConcern","UnsatisfiableWriteConcern","Reauthenticate","GET_MORE_RESUMABLE_CODES","Set","MongoErrorLabel","RetryableWriteError","TransientTransactionError","UnknownTransactionCommitResult","ResumableChangeStreamError","HandshakeError","ResetPool","InterruptInUseConnections","NoWritesPerformed","isAggregateError","e","Array","isArray","errors","MongoError","_Error","_inherits","message","options","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","_createClass","key","value","hasErrorLabel","label","has","addErrorLabel","add","get","from","buildErrorMessage","length","map","_ref","join","_wrapNativeSuper","Error","MongoServerError","_MongoError","_this2","errmsg","$err","errorLabels","name","MongoDriverError","_MongoError2","MongoAPIError","_MongoDriverError","MongoRuntimeError","_MongoDriverError2","MongoBatchReExecutionError","_MongoAPIError","arguments","undefined","MongoDecompressionError","_MongoRuntimeError","MongoNotConnectedError","_MongoAPIError2","MongoTransactionError","_MongoAPIError3","MongoExpiredSessionError","_MongoAPIError4","MongoKerberosError","_MongoRuntimeError2","MongoAWSError","_MongoRuntimeError3","MongoAzureError","_MongoRuntimeError4","MongoChangeStreamError","_MongoRuntimeError5","MongoTailableCursorError","_MongoAPIError5","MongoGridFSStreamError","_MongoRuntimeError6","MongoGridFSChunkError","_MongoRuntimeError7","MongoUnexpectedServerResponseError","_MongoRuntimeError8","MongoCursorInUseError","_MongoAPIError6","MongoServerClosedError","_MongoAPIError7","MongoCursorExhaustedError","_MongoAPIError8","MongoTopologyClosedError","_MongoAPIError9","kBeforeHandshake","isNetworkErrorBeforeHandshake","err","MongoNetworkError","_MongoError3","_this3","cause","beforeHandshake","MongoNetworkTimeoutError","_MongoNetworkError","MongoParseError","_MongoDriverError3","MongoInvalidArgumentError","_MongoAPIError10","MongoCompatibilityError","_MongoAPIError11","MongoMissingCredentialsError","_MongoAPIError12","MongoMissingDependencyError","_MongoAPIError13","MongoSystemError","_MongoError4","reason","_this4","error","code","MongoServerSelectionError","_MongoSystemError","makeWriteConcernResultObject","input","output","assign","ok","codeName","MongoWriteConcernError","_MongoServerError","result","_this5","errInfo","RETRYABLE_READ_ERROR_CODES","RETRYABLE_WRITE_ERROR_CODES","concat","_toConsumableArray","needsRetryableWriteLabel","maxWireVersion","isNotWritablePrimaryError","test","isNodeIsRecoveringError","isRetryableWriteError","isRetryableReadError","hasRetryableErrorCode","SDAM_RECOVERING_CODES","SDAM_NOT_PRIMARY_CODES","SDAM_NODE_SHUTTING_DOWN_ERROR_CODES","isRecoveringError","isNodeShuttingDownError","isSDAMUnrecoverableError","isNetworkTimeoutError","match","isResumableError","wireVersion"],"sources":["../src/error.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}