{"ast":null,"code":"var _objectSpread = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _asyncToGenerator = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\n/* eslint-disable camelcase */\nvar _require = require('util'),\n  inspect = _require.inspect;\nvar _require2 = require('./errors'),\n  RPError = _require2.RPError,\n  OPError = _require2.OPError;\nvar instance = require('./helpers/weak_cache');\nvar now = require('./helpers/unix_timestamp');\nvar _require3 = require('./helpers/client'),\n  authenticatedPost = _require3.authenticatedPost;\nvar processResponse = require('./helpers/process_response');\nvar TokenSet = require('./token_set');\nvar DeviceFlowHandle = /*#__PURE__*/function () {\n  \"use strict\";\n\n  function DeviceFlowHandle(_ref) {\n    var client = _ref.client,\n      exchangeBody = _ref.exchangeBody,\n      clientAssertionPayload = _ref.clientAssertionPayload,\n      response = _ref.response,\n      maxAge = _ref.maxAge,\n      DPoP = _ref.DPoP;\n    _classCallCheck(this, DeviceFlowHandle);\n    ['verification_uri', 'user_code', 'device_code'].forEach(function (prop) {\n      if (typeof response[prop] !== 'string' || !response[prop]) {\n        throw new RPError(\"expected \".concat(prop, \" string to be returned by Device Authorization Response, got %j\"), response[prop]);\n      }\n    });\n    if (!Number.isSafeInteger(response.expires_in)) {\n      throw new RPError('expected expires_in number to be returned by Device Authorization Response, got %j', response.expires_in);\n    }\n    instance(this).expires_at = now() + response.expires_in;\n    instance(this).client = client;\n    instance(this).DPoP = DPoP;\n    instance(this).maxAge = maxAge;\n    instance(this).exchangeBody = exchangeBody;\n    instance(this).clientAssertionPayload = clientAssertionPayload;\n    instance(this).response = response;\n    instance(this).interval = response.interval * 1000 || 5000;\n  }\n  _createClass(DeviceFlowHandle, [{\n    key: \"abort\",\n    value: function abort() {\n      instance(this).aborted = true;\n    }\n  }, {\n    key: \"poll\",\n    value: function () {\n      var _poll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this = this;\n        var _ref2,\n          signal,\n          response,\n          responseBody,\n          tokenset,\n          _args = arguments;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _ref2 = _args.length > 0 && _args[0] !== undefined ? _args[0] : {}, signal = _ref2.signal;\n              if (!(signal && signal.aborted || instance(this).aborted)) {\n                _context.next = 3;\n                break;\n              }\n              throw new RPError('polling aborted');\n            case 3:\n              if (!this.expired()) {\n                _context.next = 5;\n                break;\n              }\n              throw new RPError('the device code %j has expired and the device authorization session has concluded', this.device_code);\n            case 5:\n              _context.next = 7;\n              return new Promise(function (resolve) {\n                return setTimeout(resolve, instance(_this).interval);\n              });\n            case 7:\n              _context.next = 9;\n              return authenticatedPost.call(instance(this).client, 'token', {\n                form: _objectSpread({}, instance(this).exchangeBody, {\n                  grant_type: 'urn:ietf:params:oauth:grant-type:device_code',\n                  device_code: this.device_code\n                }),\n                responseType: 'json'\n              }, {\n                clientAssertionPayload: instance(this).clientAssertionPayload,\n                DPoP: instance(this).DPoP\n              });\n            case 9:\n              response = _context.sent;\n              _context.prev = 10;\n              responseBody = processResponse(response);\n              _context.next = 22;\n              break;\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](10);\n              _context.t1 = _context.t0 instanceof OPError && _context.t0.error;\n              _context.next = _context.t1 === 'slow_down' ? 19 : _context.t1 === 'authorization_pending' ? 20 : 21;\n              break;\n            case 19:\n              instance(this).interval += 5000;\n            case 20:\n              return _context.abrupt(\"return\", this.poll({\n                signal: signal\n              }));\n            case 21:\n              throw _context.t0;\n            case 22:\n              tokenset = new TokenSet(responseBody);\n              if (!('id_token' in tokenset)) {\n                _context.next = 28;\n                break;\n              }\n              _context.next = 26;\n              return instance(this).client.decryptIdToken(tokenset);\n            case 26:\n              _context.next = 28;\n              return instance(this).client.validateIdToken(tokenset, undefined, 'token', instance(this).maxAge);\n            case 28:\n              return _context.abrupt(\"return\", tokenset);\n            case 29:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[10, 14]]);\n      }));\n      function poll() {\n        return _poll.apply(this, arguments);\n      }\n      return poll;\n    }()\n  }, {\n    key: \"expired\",\n    value: function expired() {\n      return this.expires_in === 0;\n    } /* istanbul ignore next */\n  }, {\n    key: inspect.custom,\n    value: function value() {\n      return \"\".concat(this.constructor.name, \" \").concat(inspect(instance(this).response, {\n        depth: Infinity,\n        colors: process.stdout.isTTY,\n        compact: false,\n        sorted: true\n      }));\n    }\n  }, {\n    key: \"device_code\",\n    get: function get() {\n      return instance(this).response.device_code;\n    }\n  }, {\n    key: \"user_code\",\n    get: function get() {\n      return instance(this).response.user_code;\n    }\n  }, {\n    key: \"verification_uri\",\n    get: function get() {\n      return instance(this).response.verification_uri;\n    }\n  }, {\n    key: \"verification_uri_complete\",\n    get: function get() {\n      return instance(this).response.verification_uri_complete;\n    }\n  }, {\n    key: \"expires_in\",\n    get: function get() {\n      return Math.max.apply(null, [instance(this).expires_at - now(), 0]);\n    }\n  }]);\n  return DeviceFlowHandle;\n}();\nmodule.exports = DeviceFlowHandle;","map":null,"metadata":{},"sourceType":"script"}