{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\nvar _slicedToArray = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\nvar _objectSpread = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\nvar _objectWithoutProperties = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\nvar _classCallCheck = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\nvar _awaitAsyncGenerator = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/awaitAsyncGenerator\");\nvar _wrapAsyncGenerator = require(\"/home/jeff/bobawedding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/wrapAsyncGenerator\");\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw new Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(typeof e + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw new Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, catch: function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction _asyncIterator(r) { var n, t, o, e = 2; for (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) { if (t && null != (n = r[t])) return n.call(r); if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r)); t = \"@@asyncIterator\", o = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\nfunction AsyncFromSyncIterator(r) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var n = r.done; return Promise.resolve(r.value).then(function (r) { return { value: r, done: n }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) { this.s = r, this.n = r.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(r) { var n = this.s.return; return void 0 === n ? Promise.resolve({ value: r, done: !0 }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments)); }, throw: function _throw(r) { var n = this.s.return; return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(r); }\nvar EventEmitter = require('events');\nvar JSONB = require('json-buffer');\nvar loadStore = function loadStore(options) {\n  var adapters = {\n    redis: '@keyv/redis',\n    rediss: '@keyv/redis',\n    mongodb: '@keyv/mongo',\n    mongo: '@keyv/mongo',\n    sqlite: '@keyv/sqlite',\n    postgresql: '@keyv/postgres',\n    postgres: '@keyv/postgres',\n    mysql: '@keyv/mysql',\n    etcd: '@keyv/etcd',\n    offline: '@keyv/offline',\n    tiered: '@keyv/tiered'\n  };\n  if (options.adapter || options.uri) {\n    var adapter = options.adapter || /^[^:+]*/.exec(options.uri)[0];\n    return new (require(adapters[adapter]))(options);\n  }\n  return new Map();\n};\nvar iterableAdapters = ['sqlite', 'postgres', 'mysql', 'mongo', 'redis', 'tiered'];\nvar Keyv = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Keyv, _EventEmitter);\n  function Keyv(uri) {\n    var _this;\n    var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref2$emitErrors = _ref2.emitErrors,\n      emitErrors = _ref2$emitErrors === void 0 ? true : _ref2$emitErrors,\n      options = _objectWithoutProperties(_ref2, [\"emitErrors\"]);\n    _classCallCheck(this, Keyv);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Keyv).call(this));\n    _this.opts = _objectSpread({\n      namespace: 'keyv',\n      serialize: JSONB.stringify,\n      deserialize: JSONB.parse\n    }, typeof uri === 'string' ? {\n      uri: uri\n    } : uri, options);\n    if (!_this.opts.store) {\n      var adapterOptions = _objectSpread({}, _this.opts);\n      _this.opts.store = loadStore(adapterOptions);\n    }\n    if (_this.opts.compression) {\n      var compression = _this.opts.compression;\n      _this.opts.serialize = compression.serialize.bind(compression);\n      _this.opts.deserialize = compression.deserialize.bind(compression);\n    }\n    if (typeof _this.opts.store.on === 'function' && emitErrors) {\n      _this.opts.store.on('error', function (error) {\n        return _this.emit('error', error);\n      });\n    }\n    _this.opts.store.namespace = _this.opts.namespace;\n    var generateIterator = function generateIterator(iterator) {\n      return /*#__PURE__*/_wrapAsyncGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _iteratorAbruptCompletion, _didIteratorError, _iteratorError, _iterator, _step, _step$value, key, raw, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _iteratorAbruptCompletion = false;\n              _didIteratorError = false;\n              _context.prev = 2;\n              _iterator = _asyncIterator(typeof iterator === 'function' ? iterator(this.opts.store.namespace) : iterator);\n            case 4:\n              _context.next = 6;\n              return _awaitAsyncGenerator(_iterator.next());\n            case 6:\n              if (!(_iteratorAbruptCompletion = !(_step = _context.sent).done)) {\n                _context.next = 21;\n                break;\n              }\n              _step$value = _slicedToArray(_step.value, 2), key = _step$value[0], raw = _step$value[1];\n              _context.next = 10;\n              return _awaitAsyncGenerator(this.opts.deserialize(raw));\n            case 10:\n              data = _context.sent;\n              if (!(this.opts.store.namespace && !key.includes(this.opts.store.namespace))) {\n                _context.next = 13;\n                break;\n              }\n              return _context.abrupt(\"continue\", 18);\n            case 13:\n              if (!(typeof data.expires === 'number' && Date.now() > data.expires)) {\n                _context.next = 16;\n                break;\n              }\n              this.delete(key);\n              return _context.abrupt(\"continue\", 18);\n            case 16:\n              _context.next = 18;\n              return [this._getKeyUnprefix(key), data.value];\n            case 18:\n              _iteratorAbruptCompletion = false;\n              _context.next = 4;\n              break;\n            case 21:\n              _context.next = 27;\n              break;\n            case 23:\n              _context.prev = 23;\n              _context.t0 = _context[\"catch\"](2);\n              _didIteratorError = true;\n              _iteratorError = _context.t0;\n            case 27:\n              _context.prev = 27;\n              _context.prev = 28;\n              if (!(_iteratorAbruptCompletion && _iterator.return != null)) {\n                _context.next = 32;\n                break;\n              }\n              _context.next = 32;\n              return _awaitAsyncGenerator(_iterator.return());\n            case 32:\n              _context.prev = 32;\n              if (!_didIteratorError) {\n                _context.next = 35;\n                break;\n              }\n              throw _iteratorError;\n            case 35:\n              return _context.finish(32);\n            case 36:\n              return _context.finish(27);\n            case 37:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[2, 23, 27, 37], [28,, 32, 36]]);\n      }));\n    };\n\n    // Attach iterators\n    if (typeof _this.opts.store[Symbol.iterator] === 'function' && _this.opts.store instanceof Map) {\n      _this.iterator = generateIterator(_this.opts.store);\n    } else if (typeof _this.opts.store.iterator === 'function' && _this.opts.store.opts && _this._checkIterableAdaptar()) {\n      _this.iterator = generateIterator(_this.opts.store.iterator.bind(_this.opts.store));\n    }\n    return _this;\n  }\n  _createClass(Keyv, [{\n    key: \"_checkIterableAdaptar\",\n    value: function _checkIterableAdaptar() {\n      var _this2 = this;\n      return iterableAdapters.includes(this.opts.store.opts.dialect) || iterableAdapters.findIndex(function (element) {\n        return _this2.opts.store.opts.url.includes(element);\n      }) >= 0;\n    }\n  }, {\n    key: \"_getKeyPrefix\",\n    value: function _getKeyPrefix(key) {\n      return \"\".concat(this.opts.namespace, \":\").concat(key);\n    }\n  }, {\n    key: \"_getKeyPrefixArray\",\n    value: function _getKeyPrefixArray(keys) {\n      var _this3 = this;\n      return keys.map(function (key) {\n        return \"\".concat(_this3.opts.namespace, \":\").concat(key);\n      });\n    }\n  }, {\n    key: \"_getKeyUnprefix\",\n    value: function _getKeyUnprefix(key) {\n      return key.split(':').splice(1).join(':');\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, options) {\n      var _this4 = this;\n      var store = this.opts.store;\n      var isArray = Array.isArray(key);\n      var keyPrefixed = isArray ? this._getKeyPrefixArray(key) : this._getKeyPrefix(key);\n      if (isArray && store.getMany === undefined) {\n        var promises = [];\n        var _iterator2 = _createForOfIteratorHelper(keyPrefixed),\n          _step2;\n        try {\n          var _loop = function _loop() {\n            var key = _step2.value;\n            promises.push(Promise.resolve().then(function () {\n              return store.get(key);\n            }).then(function (data) {\n              return typeof data === 'string' ? _this4.opts.deserialize(data) : _this4.opts.compression ? _this4.opts.deserialize(data) : data;\n            }).then(function (data) {\n              if (data === undefined || data === null) {\n                return undefined;\n              }\n              if (typeof data.expires === 'number' && Date.now() > data.expires) {\n                return _this4.delete(key).then(function () {\n                  return undefined;\n                });\n              }\n              return options && options.raw ? data : data.value;\n            }));\n          };\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        return Promise.allSettled(promises).then(function (values) {\n          var data = [];\n          var _iterator3 = _createForOfIteratorHelper(values),\n            _step3;\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var value = _step3.value;\n              data.push(value.value);\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n          return data;\n        });\n      }\n      return Promise.resolve().then(function () {\n        return isArray ? store.getMany(keyPrefixed) : store.get(keyPrefixed);\n      }).then(function (data) {\n        return typeof data === 'string' ? _this4.opts.deserialize(data) : _this4.opts.compression ? _this4.opts.deserialize(data) : data;\n      }).then(function (data) {\n        if (data === undefined || data === null) {\n          return undefined;\n        }\n        if (isArray) {\n          return data.map(function (row, index) {\n            if (typeof row === 'string') {\n              row = _this4.opts.deserialize(row);\n            }\n            if (row === undefined || row === null) {\n              return undefined;\n            }\n            if (typeof row.expires === 'number' && Date.now() > row.expires) {\n              _this4.delete(key[index]).then(function () {\n                return undefined;\n              });\n              return undefined;\n            }\n            return options && options.raw ? row : row.value;\n          });\n        }\n        if (typeof data.expires === 'number' && Date.now() > data.expires) {\n          return _this4.delete(key).then(function () {\n            return undefined;\n          });\n        }\n        return options && options.raw ? data : data.value;\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value, ttl) {\n      var _this5 = this;\n      var keyPrefixed = this._getKeyPrefix(key);\n      if (typeof ttl === 'undefined') {\n        ttl = this.opts.ttl;\n      }\n      if (ttl === 0) {\n        ttl = undefined;\n      }\n      var store = this.opts.store;\n      return Promise.resolve().then(function () {\n        var expires = typeof ttl === 'number' ? Date.now() + ttl : null;\n        if (typeof value === 'symbol') {\n          _this5.emit('error', 'symbol cannot be serialized');\n        }\n        value = {\n          value: value,\n          expires: expires\n        };\n        return _this5.opts.serialize(value);\n      }).then(function (value) {\n        return store.set(keyPrefixed, value, ttl);\n      }).then(function () {\n        return true;\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var store = this.opts.store;\n      if (Array.isArray(key)) {\n        var _keyPrefixed = this._getKeyPrefixArray(key);\n        if (store.deleteMany === undefined) {\n          var promises = [];\n          var _iterator4 = _createForOfIteratorHelper(_keyPrefixed),\n            _step4;\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var _key = _step4.value;\n              promises.push(store.delete(_key));\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n          return Promise.allSettled(promises).then(function (values) {\n            return values.every(function (x) {\n              return x.value === true;\n            });\n          });\n        }\n        return Promise.resolve().then(function () {\n          return store.deleteMany(_keyPrefixed);\n        });\n      }\n      var keyPrefixed = this._getKeyPrefix(key);\n      return Promise.resolve().then(function () {\n        return store.delete(keyPrefixed);\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var store = this.opts.store;\n      return Promise.resolve().then(function () {\n        return store.clear();\n      });\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      var keyPrefixed = this._getKeyPrefix(key);\n      var store = this.opts.store;\n      return Promise.resolve().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var value;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(typeof store.has === 'function')) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", store.has(keyPrefixed));\n            case 2:\n              _context2.next = 4;\n              return store.get(keyPrefixed);\n            case 4:\n              value = _context2.sent;\n              return _context2.abrupt(\"return\", value !== undefined);\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      })));\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      var store = this.opts.store;\n      if (typeof store.disconnect === 'function') {\n        return store.disconnect();\n      }\n    }\n  }]);\n  return Keyv;\n}(EventEmitter);\nmodule.exports = Keyv;","map":null,"metadata":{},"sourceType":"script"}