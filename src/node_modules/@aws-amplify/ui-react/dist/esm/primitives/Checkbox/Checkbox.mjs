import{__rest as e}from"tslib";import*as t from"react";import a from"classnames";import{classNameModifierByFlag as s,isFunction as o}from"@aws-amplify/ui";import{Flex as c}from"../Flex/Flex.mjs";import"../Icon/Icon.mjs";import"../Icon/context/IconsContext.mjs";import{useIcons as n}from"../Icon/context/useIcons.mjs";import{ComponentClassNames as i}from"../shared/constants.mjs";import{View as r}from"../View/View.mjs";import{IconCheck as d}from"../Icon/icons/IconCheck.mjs";import{IconIndeterminate as l}from"../Icon/icons/IconIndeterminate.mjs";import{Input as m}from"../Input/Input.mjs";import{Text as b}from"../Text/Text.mjs";import{VisuallyHidden as u}from"../VisuallyHidden/VisuallyHidden.mjs";import{getTestId as h}from"../utils/getTestId.mjs";import{useStableId as p}from"../utils/useStableId.mjs";import{splitPrimitiveProps as k}from"../utils/splitPrimitiveProps.mjs";const f=t.forwardRef(((f,I)=>{var{checked:x,className:C,defaultChecked:j,hasError:E,isDisabled:y,isIndeterminate:g,label:N,labelHidden:B,labelPosition:S,onBlur:v,onFocus:F,onChange:H,testId:O,inputStyles:P}=f,V=e(f,["checked","className","defaultChecked","hasError","isDisabled","isIndeterminate","label","labelHidden","labelPosition","onBlur","onFocus","onChange","testId","inputStyles"]);const{styleProps:w,rest:D}=k(V),[T,L]=t.useState(!1),q=n("checkbox"),R=void 0!==x,[$,z]=t.useState((()=>R?x:j)),A=R?x:$,G=p();t.useEffect((()=>{const e=document.querySelector(`[data-id="${G}"]`);e&&"boolean"==typeof g&&(e.indeterminate=g)}),[G,g]);const J=h(O,i.CheckboxButton),K=h(O,i.CheckboxIcon),M=h(O,i.CheckboxLabel),Q=a(i.CheckboxButton,s(i.CheckboxButton,"disabled",y),s(i.CheckboxButton,"error",E),s(i.CheckboxButton,"focused",T)),U=a(i.CheckboxIcon,s(i.CheckboxIcon,"checked",A),s(i.CheckboxIcon,"disabled",y),s(i.CheckboxIcon,"indeterminate",g)),W={className:a(U),"data-checked":$,"data-disabled":y,"data-testid":K},X=(null==q?void 0:q.checked)?t.createElement(r,{as:"span",className:a(U)},q.checked):t.createElement(d,Object.assign({},W)),Y=(null==q?void 0:q.indeterminate)?t.createElement(r,{as:"span",className:a(U)},q.indeterminate):t.createElement(l,Object.assign({},W));return t.createElement(c,Object.assign({as:"label",className:a(i.Checkbox,s(i.Checkbox,"disabled",y),C),"data-disabled":y,"data-label-position":S,testId:O},w),t.createElement(u,null,t.createElement(m,Object.assign({checked:x,className:i.CheckboxInput,"data-id":G,defaultChecked:j,isDisabled:y,onBlur:e=>{o(v)&&v(e),L(!1)},onChange:e=>{o(H)&&H(e),R||z(e.target.checked)},onFocus:e=>{o(F)&&F(e),L(!0)},ref:I,type:"checkbox"},D))),N&&t.createElement(b,{as:"span",className:a(i.CheckboxLabel,{[i.VisuallyHidden]:B}),"data-disabled":y,testId:M},N),t.createElement(c,Object.assign({"aria-hidden":"true",as:"span",className:Q,"data-checked":A,"data-disabled":y,"data-focus":T,"data-error":E,testId:J},P),g?Y:X))}));f.displayName="Checkbox";export{f as Checkbox};
